{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"about/","text":"Pugnabo fluxerunt capillis \u00b6 Abstulit pisces imagine aut nuper cacumina \u00b6 Lorem markdownum, sua adhuc cognataque laevane, erat obiecta non in lacertis. Matrem hasta; immaduisse pereat quati credere urbem cura sensit in turbata standi . Rebus et lapsa caedit: dat deus! Prodierat semper posuere gaudet exarsit gelidis vosne hoc nihil; lingua euntem moras modo. Dominum ore, me omne licet, de motu irascitur. Tibi formam saevisque merito nec postquam vires. Prosit ulla iubis, commemorat reddidit pone possit ut Latinas vereri genetrix vivitur. Primum et mare servabant refers retorserunt foedera, putant manere tendentemque tumulavit vertice avertere ovantem addidit. Candida aurae, Nasamoniaci simulacra aliter vel cupiunt digitis uni sumit, in fausto, stringebat. Quod Pittheia \u00b6 Est cultor petentes lacerare patet dixit facies et tyranno Iano fecit meos duxit desinit! Retinens possis et peperi utrumque est , si, litore inde! Vidi locus, fatum, aut fera tauri quantum. Adstitit gerens a in utque nivea currus Gelidis caelebs et omine maduerunt Pro enim nobis tellus nato Pro refert flamma probabant quales debebunt Inmensum confecta equorum pulcherrime laudisque restitit Cadme Ventorum egressaque quoque, orbis virtutis Samos magnanimi viscera parentem senes, linguis neque nux . Tela formis mensis contigit fuerat feremus iamque: erat ante. Una canor cava generis et pectus, umero! Me numen et eadem agitatis, est nigrantis belli ergo donec faveas coepto nec fortes priorum undas, numero iam. Meministis aureus dixit quos auguror \u00b6 Abest arma infelix, adcubuere nivis tellus, non iactavit arbor, signo pone vomunt, non falsum egerat Phineu! Esse pendentem suo diremit vincar ad inplet et ponto te. Recessu maius Natus molire tollit Gaudia puerilibus Nocet visus totumque igitur qua generosa petiit Aes gravidi silvas dilectaque sit bellum concitat Inmiti sic qua ferrum voragine novitate virga. Maiestas traxere in posse. Habet ignis vulnera in loco admoti Bootes cum! Aquas consilium; ipsa nec: ruptis! Nobis poteris in alii fuerint male, et emittite sigillis dracones.","title":"Pugnabo fluxerunt capillis"},{"location":"about/#pugnabo_fluxerunt_capillis","text":"","title":"Pugnabo fluxerunt capillis"},{"location":"about/#abstulit_pisces_imagine_aut_nuper_cacumina","text":"Lorem markdownum, sua adhuc cognataque laevane, erat obiecta non in lacertis. Matrem hasta; immaduisse pereat quati credere urbem cura sensit in turbata standi . Rebus et lapsa caedit: dat deus! Prodierat semper posuere gaudet exarsit gelidis vosne hoc nihil; lingua euntem moras modo. Dominum ore, me omne licet, de motu irascitur. Tibi formam saevisque merito nec postquam vires. Prosit ulla iubis, commemorat reddidit pone possit ut Latinas vereri genetrix vivitur. Primum et mare servabant refers retorserunt foedera, putant manere tendentemque tumulavit vertice avertere ovantem addidit. Candida aurae, Nasamoniaci simulacra aliter vel cupiunt digitis uni sumit, in fausto, stringebat.","title":"Abstulit pisces imagine aut nuper cacumina"},{"location":"about/#quod_pittheia","text":"Est cultor petentes lacerare patet dixit facies et tyranno Iano fecit meos duxit desinit! Retinens possis et peperi utrumque est , si, litore inde! Vidi locus, fatum, aut fera tauri quantum. Adstitit gerens a in utque nivea currus Gelidis caelebs et omine maduerunt Pro enim nobis tellus nato Pro refert flamma probabant quales debebunt Inmensum confecta equorum pulcherrime laudisque restitit Cadme Ventorum egressaque quoque, orbis virtutis Samos magnanimi viscera parentem senes, linguis neque nux . Tela formis mensis contigit fuerat feremus iamque: erat ante. Una canor cava generis et pectus, umero! Me numen et eadem agitatis, est nigrantis belli ergo donec faveas coepto nec fortes priorum undas, numero iam.","title":"Quod Pittheia"},{"location":"about/#meministis_aureus_dixit_quos_auguror","text":"Abest arma infelix, adcubuere nivis tellus, non iactavit arbor, signo pone vomunt, non falsum egerat Phineu! Esse pendentem suo diremit vincar ad inplet et ponto te. Recessu maius Natus molire tollit Gaudia puerilibus Nocet visus totumque igitur qua generosa petiit Aes gravidi silvas dilectaque sit bellum concitat Inmiti sic qua ferrum voragine novitate virga. Maiestas traxere in posse. Habet ignis vulnera in loco admoti Bootes cum! Aquas consilium; ipsa nec: ruptis! Nobis poteris in alii fuerint male, et emittite sigillis dracones.","title":"Meministis aureus dixit quos auguror"},{"location":"_archive/application-portal/","text":"Applications: portal and packaging \u00b6 The Sogeti Smart Workspace Application Portal service involves a central, web hosted location in which users can launch any application that is assigned to their user account. The Application Portal is a fully managed platform, installed, configured and maintained by Sogeti. Upon users wish, ordered by an application change request, applications can be added, removed or modified in the Application Portal. The portal integrates business applications in the workspace so end-users can launch all applications from a single pane of glass. The Sogeti Smart packaging solution has a long history, from the introduction of Windows Installer (msi) in the year 2000 and is included in the service today. Applications are packaged through a defined process, producing different package types to deploy applications for end-users in client desktop and remote workspace environments.","title":"Applications: portal and packaging"},{"location":"_archive/application-portal/#applications_portal_and_packaging","text":"The Sogeti Smart Workspace Application Portal service involves a central, web hosted location in which users can launch any application that is assigned to their user account. The Application Portal is a fully managed platform, installed, configured and maintained by Sogeti. Upon users wish, ordered by an application change request, applications can be added, removed or modified in the Application Portal. The portal integrates business applications in the workspace so end-users can launch all applications from a single pane of glass. The Sogeti Smart packaging solution has a long history, from the introduction of Windows Installer (msi) in the year 2000 and is included in the service today. Applications are packaged through a defined process, producing different package types to deploy applications for end-users in client desktop and remote workspace environments.","title":"Applications: portal and packaging"},{"location":"_archive/application-portal/application-portal/","text":"Introduction Application Portal \u00b6","title":"Introduction Application Portal"},{"location":"_archive/application-portal/application-portal/#introduction_application_portal","text":"","title":"Introduction Application Portal"},{"location":"_archive/application-portal/application-portal/instructions/","text":"Portal Generic Recipes \u00b6 Initial configuration \u00b6 After configuration of the server VMs (including SSL certificate), the database and the loadbalancer, and the installation of Liquit Workspace, the application portal must be configured for first use. Using the PowerShell module for Liquit Workspace, the initial configuration is automated. This instruction explains what is configured and how you need to run the configuration script. The scripts first connects to Liquit Workspace using the Liquit PowerShell module. It then does the following, initial configuration: Create base applications for SSW (like Office, Adobe Reader, 7-Zip, etc). Security Settings Credential template for AzureAD account in the Credential Store Base configuration for Portal, User and Login Creation of standard roles (Access Policies) Input Parameters \u00b6 The following parameters are used by the script: jsonPath , mandatory. Full path to a json file containing the configuration for initial setup LiquitZone , mandatory. Zone for the Liquit Workspace environment. Output \u00b6 The scripts generates the following output: A Liquit package for each line item in the json file Initial security configuration Initial configuration for Portal, Login and User Credential for use in packages, based on the Azure AD UPN Standard roles (Level 1, ServiceDesk and Level 2-3) A log file in the temp folder (initLiquit.log). How to use \u00b6 Download and install the Liquit PowerShell module. You can download the module here . Download the Liquit Workspace configuration scripts: . The zip file contains the following items: InitLiquit.ps1 - PowerShell script for initial configuration LiquitConfig.json - input configuration file icon folder, containing icons for the standard apps readme.md - instructions checkLiquit.ps1 - PowerShell script for checking the default configuration Copy the PowerShell script(s), json file and icon folder to your workstation. The scripts creates packages for the SSW base apps (Office, 7Zip, Adobe Reader) and assigns these to a group. Update the json file to reflect the group that is used for 'SSW Users' in your environment. In the json, look for \"APP Portal Test Users\" and change this to the display name of the proper group. Run the script with the command: initLiquit.ps1 -jsonPath {path to LiquitConfig.json} -LiquitZone {Liquit zone} . For example: initLiquit.ps1 -jsonPath .\\LiquitConfig.json -LiquitZone portal.contoso.com When the script runs, you must login to Liquit using an account with administrator privileges. In the login screen, for example, use LOCAL\\username and the password to login with a LOCAL account. You can run the script multiple times. If resources already exist, they will be skipped or updated.","title":"Portal Generic Recipes"},{"location":"_archive/application-portal/application-portal/instructions/#portal_generic_recipes","text":"","title":"Portal Generic Recipes"},{"location":"_archive/application-portal/application-portal/instructions/#initial_configuration","text":"After configuration of the server VMs (including SSL certificate), the database and the loadbalancer, and the installation of Liquit Workspace, the application portal must be configured for first use. Using the PowerShell module for Liquit Workspace, the initial configuration is automated. This instruction explains what is configured and how you need to run the configuration script. The scripts first connects to Liquit Workspace using the Liquit PowerShell module. It then does the following, initial configuration: Create base applications for SSW (like Office, Adobe Reader, 7-Zip, etc). Security Settings Credential template for AzureAD account in the Credential Store Base configuration for Portal, User and Login Creation of standard roles (Access Policies)","title":"Initial configuration"},{"location":"_archive/application-portal/application-portal/instructions/#input_parameters","text":"The following parameters are used by the script: jsonPath , mandatory. Full path to a json file containing the configuration for initial setup LiquitZone , mandatory. Zone for the Liquit Workspace environment.","title":"Input Parameters"},{"location":"_archive/application-portal/application-portal/instructions/#output","text":"The scripts generates the following output: A Liquit package for each line item in the json file Initial security configuration Initial configuration for Portal, Login and User Credential for use in packages, based on the Azure AD UPN Standard roles (Level 1, ServiceDesk and Level 2-3) A log file in the temp folder (initLiquit.log).","title":"Output"},{"location":"_archive/application-portal/application-portal/instructions/#how_to_use","text":"Download and install the Liquit PowerShell module. You can download the module here . Download the Liquit Workspace configuration scripts: . The zip file contains the following items: InitLiquit.ps1 - PowerShell script for initial configuration LiquitConfig.json - input configuration file icon folder, containing icons for the standard apps readme.md - instructions checkLiquit.ps1 - PowerShell script for checking the default configuration Copy the PowerShell script(s), json file and icon folder to your workstation. The scripts creates packages for the SSW base apps (Office, 7Zip, Adobe Reader) and assigns these to a group. Update the json file to reflect the group that is used for 'SSW Users' in your environment. In the json, look for \"APP Portal Test Users\" and change this to the display name of the proper group. Run the script with the command: initLiquit.ps1 -jsonPath {path to LiquitConfig.json} -LiquitZone {Liquit zone} . For example: initLiquit.ps1 -jsonPath .\\LiquitConfig.json -LiquitZone portal.contoso.com When the script runs, you must login to Liquit using an account with administrator privileges. In the login screen, for example, use LOCAL\\username and the password to login with a LOCAL account. You can run the script multiple times. If resources already exist, they will be skipped or updated.","title":"How to use"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/","text":"Create a Teams App for the Application Portal \u00b6 Creating a Teams app for the application portal requires the following steps: Allow Liquit to be used in Teams. Create an app in the developer portal. Publish the app to the organization. Allow the app for users in the organization. Allow Liquit to be used in Teams \u00b6 In the security settings for the application portal, the embedded use of the web page and authentication from apps is blocked by default. To be used in Teams, this must be allowed by specifying the Teams URL as an exception. To do this, open the Liquit portal and login with an admin account, allowed to change security settings. In the management portal, go to Security Settings. In the Content Security Policy add teams.microsoft.com to the list of websites that is allowed to embed the zone: In the Cross-Origin Resource Sharing add teams.microsoft.com to the list of websites that is allowed to authenticate against the zone: Click Save Create the app \u00b6 Browse to the Developer Portal and login with an admin account. Click New app . Give the app a name, \u2018Application portal\u2019 and click Add . The app configuration wizard shows up in the Developer portal. Specify the following properties: Basic information \u00b6 Property Value Short Name Application Portal Full Name Application Portal Description Sogeti Smart Workspace Application Portal Long description Access your apps from a single pane of glass Developer or company name Sogeti Nederland BV Website (must be a valid HTTPS URL) \"https://www.sogeti.nl\" Privacy policy \"https://www.sogeti.nl\" Terms of use \"https://www.sogeti.nl\" Branding \u00b6 Provide custom icons App features \u00b6 Add a personal app by clicking on the Personal App button. Click on the button to add a tab in the personal app: Provide the proper values in the following screen. The entity ID is a generated guid - accept the given value. The website URL is optional, if you use the same URL as the Content URL, the user can open the application portal in a separate web page in the browser. Click Add when you are satisfied. Language \u00b6 Optionally, you can add different values for the app for other languages, such as Dutch. In Languages, click Add a Language , the following screen appears: Select a language and region, then click Language schema form . Fill in the values as the following example: Click Add . When users change their language to Dutch in Teams, above values will be used. Add more languages if the customer is multi-national. You could also change the default language. Publish the app \u00b6 The app is now ready to publish. In the Publish menu item, click Publish to org , select Publish your app . The app should show up with status Submitted * An admin now must approve the new app. To do this, browse to the Teams Admin Center and login with a Teams Admin account. In the Teams admin center, go to Teams Apps and then Manage Apps . You should see one app pending for approval. Search for your app, it has publishing status Submitted and is Blocked . Click on the app. Review the app configuration. When you are satisfied, select Publish under Publishing status . In the confirmation windows, select Publish . The app may now be published to all users, depending on the permission policies in Teams. To test, make sure the app is only visible to you and allow the app for all users once tested. App Permissions \u00b6 In the Global (org-wide default) policy you may want to change the custom apps to be blocked if the org doesn\u2019t use any custom apps yet, or just allow the ones that the org uses in case they do. Add a new policy that allows only the created teams app as a custom app by selecting Add apps: Add test users to the custom created policy by clicking Manage users: This way the app could/should be deployed only to the specified users.","title":"Create a Teams App for the Application Portal"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#create_a_teams_app_for_the_application_portal","text":"Creating a Teams app for the application portal requires the following steps: Allow Liquit to be used in Teams. Create an app in the developer portal. Publish the app to the organization. Allow the app for users in the organization.","title":"Create a Teams App for the Application Portal"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#allow_liquit_to_be_used_in_teams","text":"In the security settings for the application portal, the embedded use of the web page and authentication from apps is blocked by default. To be used in Teams, this must be allowed by specifying the Teams URL as an exception. To do this, open the Liquit portal and login with an admin account, allowed to change security settings. In the management portal, go to Security Settings. In the Content Security Policy add teams.microsoft.com to the list of websites that is allowed to embed the zone: In the Cross-Origin Resource Sharing add teams.microsoft.com to the list of websites that is allowed to authenticate against the zone: Click Save","title":"Allow Liquit to be used in Teams"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#create_the_app","text":"Browse to the Developer Portal and login with an admin account. Click New app . Give the app a name, \u2018Application portal\u2019 and click Add . The app configuration wizard shows up in the Developer portal. Specify the following properties:","title":"Create the app"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#basic_information","text":"Property Value Short Name Application Portal Full Name Application Portal Description Sogeti Smart Workspace Application Portal Long description Access your apps from a single pane of glass Developer or company name Sogeti Nederland BV Website (must be a valid HTTPS URL) \"https://www.sogeti.nl\" Privacy policy \"https://www.sogeti.nl\" Terms of use \"https://www.sogeti.nl\"","title":"Basic information"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#branding","text":"Provide custom icons","title":"Branding"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#app_features","text":"Add a personal app by clicking on the Personal App button. Click on the button to add a tab in the personal app: Provide the proper values in the following screen. The entity ID is a generated guid - accept the given value. The website URL is optional, if you use the same URL as the Content URL, the user can open the application portal in a separate web page in the browser. Click Add when you are satisfied.","title":"App features"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#language","text":"Optionally, you can add different values for the app for other languages, such as Dutch. In Languages, click Add a Language , the following screen appears: Select a language and region, then click Language schema form . Fill in the values as the following example: Click Add . When users change their language to Dutch in Teams, above values will be used. Add more languages if the customer is multi-national. You could also change the default language.","title":"Language"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#publish_the_app","text":"The app is now ready to publish. In the Publish menu item, click Publish to org , select Publish your app . The app should show up with status Submitted * An admin now must approve the new app. To do this, browse to the Teams Admin Center and login with a Teams Admin account. In the Teams admin center, go to Teams Apps and then Manage Apps . You should see one app pending for approval. Search for your app, it has publishing status Submitted and is Blocked . Click on the app. Review the app configuration. When you are satisfied, select Publish under Publishing status . In the confirmation windows, select Publish . The app may now be published to all users, depending on the permission policies in Teams. To test, make sure the app is only visible to you and allow the app for all users once tested.","title":"Publish the app"},{"location":"_archive/application-portal/application-portal/instructions/teamsapp/#app_permissions","text":"In the Global (org-wide default) policy you may want to change the custom apps to be blocked if the org doesn\u2019t use any custom apps yet, or just allow the ones that the org uses in case they do. Add a new policy that allows only the created teams app as a custom app by selecting Add apps: Add test users to the custom created policy by clicking Manage users: This way the app could/should be deployed only to the specified users.","title":"App Permissions"},{"location":"_archive/application-portal/application-portal/manage/","text":"Manage the application portal in Run \u00b6","title":"Manage the application portal in Run"},{"location":"_archive/application-portal/application-portal/manage/#manage_the_application_portal_in_run","text":"","title":"Manage the application portal in Run"},{"location":"_archive/application-portal/application-portal/onboard/","text":"Onboard the application portal \u00b6","title":"Onboard the application portal"},{"location":"_archive/application-portal/application-portal/onboard/#onboard_the_application_portal","text":"","title":"Onboard the application portal"},{"location":"_archive/application-portal/packaging/","text":"Packaging \u00b6","title":"Packaging"},{"location":"_archive/application-portal/packaging/#packaging","text":"","title":"Packaging"},{"location":"_archive/application-portal/packaging/guidelines/","text":"Introduction \u00b6 Purpose of this section \u00b6 This section describes the guidelines to be used for packaging in Sogeti Smart Workspace. All delivered packages (MSI(X)-packages or unattended setups) have to comply with the guidelines described here. These guidelines may only be dropped after mutual consent between the packager and the SSW tech lead. Target readership \u00b6 The packaging guidelines are intended for everyone involved in the intake and packaging of software for the Windows platform for SSW, as well as people who are in charge for the distribution and deployment of packages. Terminology \u00b6 Intake / Discovery = The creation of an intake document. Intake document = Document describing all (front-end) aspects of an application. Application Dossier = Intake document, including source media, test scripts, files and documents TS Form = Package release document MSI file = Microsoft Installer file, a package format to install and deploy applications. Introduced by Microsoft around the year 2000. MST file = Transform file to modify aspects in (vendor-) MSI files MSIX = Modern packaging format to transform and deliver (win32) apps to the modern application model. This includes deployment, installation, and runtime aspects, such as sandboxing and isolation of the application. Where \u201cDesktop (platform)\u201d or \u201c(local) Client\u201d is used, the Operating System is Windows 10, x64. This includes Windows 10 single session and Windows 10 multi-session for Azure Virtual Desktop (AVD). Where \u201cServer (platform)\u201d is used, the operating system is Windows Server 2019, used in Remote Desktop platforms such as Azure Virtual Desktop (AVD), Remote Desktop Services (RDS) or Citrix XenDesktop. Application and package identification \u00b6 Applications are identified using the applications manufacturer, name, version, and language. In some cases, multiple configurations of the same applications must coexist in the application environment. To distinguish between those configurations, the Country name is added. The Country name is an optional field. Manufacturer \u00b6 Name of the manufacturer/vendor/supplier of the software. The maximum length for the manufacturer is 20 characters and must be shortened when applicable. If the manufacturers name has more words, spaces are removed, and the words are combined using \u2018UpperCamelCase\u2019 or \u2018Pascal Case\u2019 notation. Example: Winzip Adobe AutoDesk Some vendors use different names in their products, for example: Microsoft Microsoft Corporation Mircosoft.corp For these vendors a unique name is to be used, preferably the shortest. In this example, that would be \u2018Microsoft\u2019. The use of a tool to create the package structure/naming convention as well as maintaining one dedicated storage location for the packages is well advised. Application Name \u00b6 Name of the application. The maximum length of the application name is 30 characters and must be shortened when applicable. If the application name has more words, spaces are removed, and the words are combined using \u2018UpperCamelCase\u2019 or \u2018Pascal Case\u2019 notation. Examples: Winzip Reader ProjectViewer LiveMeeting Version \u00b6 Version of the application. The version at least will have two digits and a maximum of three. If an application has more digits (like 1.3.4.2) the digits from 4 onwards will be ignored (in this case, 1.3.4 is used). The only exception is when multiple versions of the applications can coexist and/or where the 4th number is relevant. Examples for this case are Java 1.5.0.7 and 1.5.0.8. Marketing versions, such as AutoCAD 2008, should not be used. AutoCAD 2021 has an internal version of 24.0.47. If necessary, the internal version should be taken from the information of the executable file or the existing installation setup. If required, the correct version mostly can be found on the manufacturer\u2019s website. Examples: 10.0 8.1 1.2.3 Language \u00b6 Language of the application. A language code is used to represent the application\u2019s language. This is a two-letter ISO-639-1 code, i.e: NL = Dutch EN = English DE = German FR = French ML = Multi-language USER and COMPANY \u00b6 The USER and COMPANY properties in the packages and/or setup screens all have the value SSW. References and best practice \u00b6 The technology used in MSI packaging can be seen as common practice and common knowledge, since this technology is used in the market for several decades. For MSIX, the following references can be used to start with: Technical documentation on Microsoft Docs: MSIX Overview . For introduction on the MSIX technology, jump to MSIX Resources . Technical reference from Advanced Installer: MSIX Fundamentals E-Book for MSIX, downloadable from here (requires registration), or view online here .","title":"Introduction"},{"location":"_archive/application-portal/packaging/guidelines/#introduction","text":"","title":"Introduction"},{"location":"_archive/application-portal/packaging/guidelines/#purpose_of_this_section","text":"This section describes the guidelines to be used for packaging in Sogeti Smart Workspace. All delivered packages (MSI(X)-packages or unattended setups) have to comply with the guidelines described here. These guidelines may only be dropped after mutual consent between the packager and the SSW tech lead.","title":"Purpose of this section"},{"location":"_archive/application-portal/packaging/guidelines/#target_readership","text":"The packaging guidelines are intended for everyone involved in the intake and packaging of software for the Windows platform for SSW, as well as people who are in charge for the distribution and deployment of packages.","title":"Target readership"},{"location":"_archive/application-portal/packaging/guidelines/#terminology","text":"Intake / Discovery = The creation of an intake document. Intake document = Document describing all (front-end) aspects of an application. Application Dossier = Intake document, including source media, test scripts, files and documents TS Form = Package release document MSI file = Microsoft Installer file, a package format to install and deploy applications. Introduced by Microsoft around the year 2000. MST file = Transform file to modify aspects in (vendor-) MSI files MSIX = Modern packaging format to transform and deliver (win32) apps to the modern application model. This includes deployment, installation, and runtime aspects, such as sandboxing and isolation of the application. Where \u201cDesktop (platform)\u201d or \u201c(local) Client\u201d is used, the Operating System is Windows 10, x64. This includes Windows 10 single session and Windows 10 multi-session for Azure Virtual Desktop (AVD). Where \u201cServer (platform)\u201d is used, the operating system is Windows Server 2019, used in Remote Desktop platforms such as Azure Virtual Desktop (AVD), Remote Desktop Services (RDS) or Citrix XenDesktop.","title":"Terminology"},{"location":"_archive/application-portal/packaging/guidelines/#application_and_package_identification","text":"Applications are identified using the applications manufacturer, name, version, and language. In some cases, multiple configurations of the same applications must coexist in the application environment. To distinguish between those configurations, the Country name is added. The Country name is an optional field.","title":"Application and package identification"},{"location":"_archive/application-portal/packaging/guidelines/#manufacturer","text":"Name of the manufacturer/vendor/supplier of the software. The maximum length for the manufacturer is 20 characters and must be shortened when applicable. If the manufacturers name has more words, spaces are removed, and the words are combined using \u2018UpperCamelCase\u2019 or \u2018Pascal Case\u2019 notation. Example: Winzip Adobe AutoDesk Some vendors use different names in their products, for example: Microsoft Microsoft Corporation Mircosoft.corp For these vendors a unique name is to be used, preferably the shortest. In this example, that would be \u2018Microsoft\u2019. The use of a tool to create the package structure/naming convention as well as maintaining one dedicated storage location for the packages is well advised.","title":"Manufacturer"},{"location":"_archive/application-portal/packaging/guidelines/#application_name","text":"Name of the application. The maximum length of the application name is 30 characters and must be shortened when applicable. If the application name has more words, spaces are removed, and the words are combined using \u2018UpperCamelCase\u2019 or \u2018Pascal Case\u2019 notation. Examples: Winzip Reader ProjectViewer LiveMeeting","title":"Application Name"},{"location":"_archive/application-portal/packaging/guidelines/#version","text":"Version of the application. The version at least will have two digits and a maximum of three. If an application has more digits (like 1.3.4.2) the digits from 4 onwards will be ignored (in this case, 1.3.4 is used). The only exception is when multiple versions of the applications can coexist and/or where the 4th number is relevant. Examples for this case are Java 1.5.0.7 and 1.5.0.8. Marketing versions, such as AutoCAD 2008, should not be used. AutoCAD 2021 has an internal version of 24.0.47. If necessary, the internal version should be taken from the information of the executable file or the existing installation setup. If required, the correct version mostly can be found on the manufacturer\u2019s website. Examples: 10.0 8.1 1.2.3","title":"Version"},{"location":"_archive/application-portal/packaging/guidelines/#language","text":"Language of the application. A language code is used to represent the application\u2019s language. This is a two-letter ISO-639-1 code, i.e: NL = Dutch EN = English DE = German FR = French ML = Multi-language","title":"Language"},{"location":"_archive/application-portal/packaging/guidelines/#user_and_company","text":"The USER and COMPANY properties in the packages and/or setup screens all have the value SSW.","title":"USER and COMPANY"},{"location":"_archive/application-portal/packaging/guidelines/#references_and_best_practice","text":"The technology used in MSI packaging can be seen as common practice and common knowledge, since this technology is used in the market for several decades. For MSIX, the following references can be used to start with: Technical documentation on Microsoft Docs: MSIX Overview . For introduction on the MSIX technology, jump to MSIX Resources . Technical reference from Advanced Installer: MSIX Fundamentals E-Book for MSIX, downloadable from here (requires registration), or view online here .","title":"References and best practice"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/","text":"Application Guidelines \u00b6 Application guidelines must be known in order to create intakes and build packages in a standard, repeatable way that fits in the modern, managed workspace environment. This chapter describes the application guidelines to be used in the SSW packaging process. Application types and order \u00b6 Application packages generally exist in the following types: Shortcut or URL Applications from the Microsoft Store for Business Applications that are repacked to the MSIX format Unattended or silent installation, including MSI packages when the source media already is an MSI package Applications that are repacked to the MSI format Manual installation The preferred packaging method / application type starts with a type 1. If type 1 is not an option, then the package will be a type 2 and so on. The last possibility is a type 6. For SSW, type 1 and 2 can be managed from Intune and the application portal and do not need (re-)packaging. Default assumption (when no information is present) is that the application will be a type 3 if packages types 1 or 2 are not possible or applicable. In all cases, packages of type 6 should be avoided. The packager tries to build the package according to the prescribed application type in the intake document. If issues arise, the packager will contact and advice the SSW package lead for a type change. The following table can be used as a guide to determine/predict the application\u2019s preferred packaging method: Type Used for, or when 1 URL to web or SaaS apps, shortcuts to OS system installed local apps and shortcuts to network applications that can run with user credentials, without additional software requirements (not included in the base installation) 2 Applications from the Microsoft Store for Business that can be configured directly in Intune for deployment or enabled in the Store for Business 3 MSIX - 1st alternative when type 1 or 2 is not applicable 4 Unattended install - 2nd alternative when the application cannot be packaged to an MSIX package or does not work as an MSIX package 5 Repackaged MSI - 3rd alternative when the application installation, as delivered by the vendor, cannot be run silently 6 Manual - 4th alternative when the installation cannot be repackaged and there is no way to install the vendor\u2019s media silently. For example, hardware depending activation or configuration. Common rules \u00b6 The following general rules apply for the SSW workspace: Applications of type 1 and 2 follow a light intake and do not need packaging. Applications of these types can be configured directly in Intune and/or the application portal. Default for all other applications will be a type 3. It must be possible to install and run the application correctly on the target OS environment. If possible, applications that adhere to the Windows Logo Guidelines (Windows 10 compliant) will be selected instead of legacy applications. The intake document describes all the features to be installed for packages. It is good practice not to use the options Complete or Typical installation but always to select a Custom installation. Using a Custom installation, it is clear which features exactly must be installed and which are not to be installed. Some (MSI-) installations by default offer features to be installed on first use. The use of this option is prohibited, either select the feature to be installed locally or absent. Intake with multiple setups \u00b6 When an application consists of multiple setups that are considered to be prerequisites, these prerequisites must be defined as separate applications. Mostly these prerequisites are some kind of middleware. For those applications, separate intakes (and corresponding packages) will be created. Examples of this kind are: dotNet Framework (when not part of the OS) SQL, Oracle, or other database clients Java Runtime Environment (JRE) Sentinel or Dongle drivers Etc. When an application consists of multiple setups from the same vendor, then the total is considered to be one single application and thus package. This package however, can contain different installation files (setup.exe's or MSI packages). A different approach can be taken for MSIX- or repackaged MSI packages. When the middleware is exclusive for the specific application, this middleware application can be included in the package. Both the application and the middleware will be packaged as a single application suite. When the application is generic and used by other applications, it is better to build a separate package. This package can be built as an independent deployable MSI package or unattended setup. This may not be the case for MSIX packages, when this approach does not work. The dependent application may be included in the MSIX package. When the application is unique for the application, a single package is built. For MSI packages, all applications are included in a single capture. An exception can be made when components already are delivered as MSI package. In this last case, an MST file is preferred for each package and an installation script is created to install the combination of packages. Splitting applications will be done based on mutual agreement between the packager and SSW package lead. Good insight in the complete application portfolio is necessary to make the desired decisions. Installation folder \u00b6 By default applications are will be installed in the Program Files folder; \u201c%ProgramFiles%\\application name\\\u201d or \u201c%ProgramFiles%\\Vendor\\application name\\\u201d. %ProgramFiles% is \u201cC:\\Program Files\u201d on 32 bits and 64 bits OS. For 32 bits applications on a 64 bits OS, the default installation folder is located in \u201cC:\\Program Files (x86)\u201d. During application intake the intake engineer will try to follow this rule and will try to install in %ProgramFiles%\\xxxxxxx or %ProgramFiles(x86)%\\xxxxxxx. The exact name of this folder is described in the intake document. The intake engineer must take the environment of the application into account: Sometimes multiple versions of one application must run on the same system. Each application requires its own installation folder, unless specified otherwise by the vendor, for example in the case of add-ins. In cases where the application does not support long filenames of spaces or must be partially rewritten to support long filenames, a folder directly in the root (C:\\xxxxxx) may be used. The packager uses the following guidelines to determine the installation folder: Information provided in the intake document overrules information in the packaging guidelines. The intake document is leading. Deviations must be clearly mentioned in the intake document. When the intake engineer specifically mentions to put a folder into the root (C:) then this overrules the use of %ProgramFiles% only if it\u2019s essential for the application. However, it is good practice to specify the preferred target location in the intake. When the intake document describes (in general) to place or create a folder on the system, the default location will be a subfolder in %ProgramFiles% or %ProgramFiles(x86)%. However, it is good practice to specify the preferred target location in the intake. Program menu folder \u00b6 Unless stated otherwise by the technical application engineer during the intake, the default names for shortcuts are used. Shortcuts for applications will be placed in the program menu folder \u201cPrograms\u201d in the start menu. When an application only has one shortcut, it will be placed directly in this folder: Start - Programs - Application1.lnk When an application has multiple shortcuts, a subfolder with the application\u2019s name is created in the Programs folder: Start - Programs - Application name - Application1.lnk Start - Programs - Application name - Application2.lnk The following shortcuts always will be removed, regardless of what is stated in the intake: Uninstall programs Internet-update shortcuts Shortcuts to websites of the vendor that have no function in the application itself Readme\u2019s and release notes Help Quick launch and desktop \u00b6 No shortcuts are placed on the desktop or in the quick launch bar. Startup folder in the start menu \u00b6 Shortcuts in the Startup folder in the start menu are not allowed unless they are absolutely necessary for the functionality of the application. This necessity should be documented in the intake document during intake or, when this necessity is found during package build, in the package release documentation. Remember that when using the application portal, users can opt to auto-launch applications themselves. Automatic updates \u00b6 Automatic updates (for example through the Internet) can be turned on but only when this is desired and the update can be processed when a standard user is logged in. In other words when local administrator permissions are not required to process the update. If auto-update is an option, it should be enabled. The information needed to configure the update function of an application (turning it on or off) is provided by the technical or functional administrator during the intake. Security \u00b6 Configuration files containing application settings preferably are located in the installation folder if the application supports this. Configuration files with user-specific settings are preferably placed in a location that can be managed by the user, for example the user profile. The information needed to configure these options is provided by the technical or functional administrator during the intake. Users work in a locked-down windows environment where they have the permission to execute applications which are part of the OS, installed through packages or which are assigned/published as applications from the Microsoft Store for Business. MSI packages and unattended setups \u00b6 Additional permissions which allow applications to write in system locations, are set at the end of the installation through the MSI package or unattended installation. For MSI packages, a command file will be started using a custom action running in the system context which sets the additional permissions. For unattended setups, setting additional permissions will be done from the deployment script. Setting additional (write, modify) permissions is only carried out when applications do not function correctly without them. Note that it is not allowed to configure additional permissions for applications that will be deployed on multi-session workspaces, such as AVD . Firewall \u00b6 A local firewall provides a security boundary that can stop applications from working correctly because inbound and/or outbound traffic can be blocked. Firewall settings ought to be managed centrally. Therefore, packages will not change/contain firewall settings. Also, the port(s) used by an application is not part of the delivery of a package or package documentation. During the intake the intake engineer will ask the application administrator for the local firewall settings (inbound and outbound TCP/IP ports) needed for a correct use of the application. This information is noted in the intake. Firewall rules are managed centrally using Intune or Active Directory. Hard coded paths, drive letters and UNC path \u00b6 It is not allowed to include hard coded paths, drive letters, UNC paths or IP-addresses in packages, unless this is absolutely required. \u201cAbsolutely required\u201d means that an application does not run without these parameters, or when it is specifically mentioned in the Intake document or TS form. For shortcuts and application settings to files on the network, the usage of UNC paths (DFS) is preferred. When it is not possible to use UNC, a drive letter may be used. When hard coded paths, drive letters, UNC paths or IP-addresses are used, this will be documented in the Intake document and TS-form. In MSI packages and unattended setups, these paths are replaced by public properties or variables. For common path\u2019s (like Program Files, Application Data, etc) the standard MSI properties or system variables must be used ([ProgramFilesFolder], [AppDataFolder], etc).","title":"Application Guidelines"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#application_guidelines","text":"Application guidelines must be known in order to create intakes and build packages in a standard, repeatable way that fits in the modern, managed workspace environment. This chapter describes the application guidelines to be used in the SSW packaging process.","title":"Application Guidelines"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#application_types_and_order","text":"Application packages generally exist in the following types: Shortcut or URL Applications from the Microsoft Store for Business Applications that are repacked to the MSIX format Unattended or silent installation, including MSI packages when the source media already is an MSI package Applications that are repacked to the MSI format Manual installation The preferred packaging method / application type starts with a type 1. If type 1 is not an option, then the package will be a type 2 and so on. The last possibility is a type 6. For SSW, type 1 and 2 can be managed from Intune and the application portal and do not need (re-)packaging. Default assumption (when no information is present) is that the application will be a type 3 if packages types 1 or 2 are not possible or applicable. In all cases, packages of type 6 should be avoided. The packager tries to build the package according to the prescribed application type in the intake document. If issues arise, the packager will contact and advice the SSW package lead for a type change. The following table can be used as a guide to determine/predict the application\u2019s preferred packaging method: Type Used for, or when 1 URL to web or SaaS apps, shortcuts to OS system installed local apps and shortcuts to network applications that can run with user credentials, without additional software requirements (not included in the base installation) 2 Applications from the Microsoft Store for Business that can be configured directly in Intune for deployment or enabled in the Store for Business 3 MSIX - 1st alternative when type 1 or 2 is not applicable 4 Unattended install - 2nd alternative when the application cannot be packaged to an MSIX package or does not work as an MSIX package 5 Repackaged MSI - 3rd alternative when the application installation, as delivered by the vendor, cannot be run silently 6 Manual - 4th alternative when the installation cannot be repackaged and there is no way to install the vendor\u2019s media silently. For example, hardware depending activation or configuration.","title":"Application types and order"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#common_rules","text":"The following general rules apply for the SSW workspace: Applications of type 1 and 2 follow a light intake and do not need packaging. Applications of these types can be configured directly in Intune and/or the application portal. Default for all other applications will be a type 3. It must be possible to install and run the application correctly on the target OS environment. If possible, applications that adhere to the Windows Logo Guidelines (Windows 10 compliant) will be selected instead of legacy applications. The intake document describes all the features to be installed for packages. It is good practice not to use the options Complete or Typical installation but always to select a Custom installation. Using a Custom installation, it is clear which features exactly must be installed and which are not to be installed. Some (MSI-) installations by default offer features to be installed on first use. The use of this option is prohibited, either select the feature to be installed locally or absent.","title":"Common rules"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#intake_with_multiple_setups","text":"When an application consists of multiple setups that are considered to be prerequisites, these prerequisites must be defined as separate applications. Mostly these prerequisites are some kind of middleware. For those applications, separate intakes (and corresponding packages) will be created. Examples of this kind are: dotNet Framework (when not part of the OS) SQL, Oracle, or other database clients Java Runtime Environment (JRE) Sentinel or Dongle drivers Etc. When an application consists of multiple setups from the same vendor, then the total is considered to be one single application and thus package. This package however, can contain different installation files (setup.exe's or MSI packages). A different approach can be taken for MSIX- or repackaged MSI packages. When the middleware is exclusive for the specific application, this middleware application can be included in the package. Both the application and the middleware will be packaged as a single application suite. When the application is generic and used by other applications, it is better to build a separate package. This package can be built as an independent deployable MSI package or unattended setup. This may not be the case for MSIX packages, when this approach does not work. The dependent application may be included in the MSIX package. When the application is unique for the application, a single package is built. For MSI packages, all applications are included in a single capture. An exception can be made when components already are delivered as MSI package. In this last case, an MST file is preferred for each package and an installation script is created to install the combination of packages. Splitting applications will be done based on mutual agreement between the packager and SSW package lead. Good insight in the complete application portfolio is necessary to make the desired decisions.","title":"Intake with multiple setups"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#installation_folder","text":"By default applications are will be installed in the Program Files folder; \u201c%ProgramFiles%\\application name\\\u201d or \u201c%ProgramFiles%\\Vendor\\application name\\\u201d. %ProgramFiles% is \u201cC:\\Program Files\u201d on 32 bits and 64 bits OS. For 32 bits applications on a 64 bits OS, the default installation folder is located in \u201cC:\\Program Files (x86)\u201d. During application intake the intake engineer will try to follow this rule and will try to install in %ProgramFiles%\\xxxxxxx or %ProgramFiles(x86)%\\xxxxxxx. The exact name of this folder is described in the intake document. The intake engineer must take the environment of the application into account: Sometimes multiple versions of one application must run on the same system. Each application requires its own installation folder, unless specified otherwise by the vendor, for example in the case of add-ins. In cases where the application does not support long filenames of spaces or must be partially rewritten to support long filenames, a folder directly in the root (C:\\xxxxxx) may be used. The packager uses the following guidelines to determine the installation folder: Information provided in the intake document overrules information in the packaging guidelines. The intake document is leading. Deviations must be clearly mentioned in the intake document. When the intake engineer specifically mentions to put a folder into the root (C:) then this overrules the use of %ProgramFiles% only if it\u2019s essential for the application. However, it is good practice to specify the preferred target location in the intake. When the intake document describes (in general) to place or create a folder on the system, the default location will be a subfolder in %ProgramFiles% or %ProgramFiles(x86)%. However, it is good practice to specify the preferred target location in the intake.","title":"Installation folder"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#program_menu_folder","text":"Unless stated otherwise by the technical application engineer during the intake, the default names for shortcuts are used. Shortcuts for applications will be placed in the program menu folder \u201cPrograms\u201d in the start menu. When an application only has one shortcut, it will be placed directly in this folder: Start - Programs - Application1.lnk When an application has multiple shortcuts, a subfolder with the application\u2019s name is created in the Programs folder: Start - Programs - Application name - Application1.lnk Start - Programs - Application name - Application2.lnk The following shortcuts always will be removed, regardless of what is stated in the intake: Uninstall programs Internet-update shortcuts Shortcuts to websites of the vendor that have no function in the application itself Readme\u2019s and release notes Help","title":"Program menu folder"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#quick_launch_and_desktop","text":"No shortcuts are placed on the desktop or in the quick launch bar.","title":"Quick launch and desktop"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#startup_folder_in_the_start_menu","text":"Shortcuts in the Startup folder in the start menu are not allowed unless they are absolutely necessary for the functionality of the application. This necessity should be documented in the intake document during intake or, when this necessity is found during package build, in the package release documentation. Remember that when using the application portal, users can opt to auto-launch applications themselves.","title":"Startup folder in the start menu"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#automatic_updates","text":"Automatic updates (for example through the Internet) can be turned on but only when this is desired and the update can be processed when a standard user is logged in. In other words when local administrator permissions are not required to process the update. If auto-update is an option, it should be enabled. The information needed to configure the update function of an application (turning it on or off) is provided by the technical or functional administrator during the intake.","title":"Automatic updates"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#security","text":"Configuration files containing application settings preferably are located in the installation folder if the application supports this. Configuration files with user-specific settings are preferably placed in a location that can be managed by the user, for example the user profile. The information needed to configure these options is provided by the technical or functional administrator during the intake. Users work in a locked-down windows environment where they have the permission to execute applications which are part of the OS, installed through packages or which are assigned/published as applications from the Microsoft Store for Business.","title":"Security"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#msi_packages_and_unattended_setups","text":"Additional permissions which allow applications to write in system locations, are set at the end of the installation through the MSI package or unattended installation. For MSI packages, a command file will be started using a custom action running in the system context which sets the additional permissions. For unattended setups, setting additional permissions will be done from the deployment script. Setting additional (write, modify) permissions is only carried out when applications do not function correctly without them. Note that it is not allowed to configure additional permissions for applications that will be deployed on multi-session workspaces, such as AVD .","title":"MSI packages and unattended setups"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#firewall","text":"A local firewall provides a security boundary that can stop applications from working correctly because inbound and/or outbound traffic can be blocked. Firewall settings ought to be managed centrally. Therefore, packages will not change/contain firewall settings. Also, the port(s) used by an application is not part of the delivery of a package or package documentation. During the intake the intake engineer will ask the application administrator for the local firewall settings (inbound and outbound TCP/IP ports) needed for a correct use of the application. This information is noted in the intake. Firewall rules are managed centrally using Intune or Active Directory.","title":"Firewall"},{"location":"_archive/application-portal/packaging/guidelines/appguidelines/#hard_coded_paths_drive_letters_and_unc_path","text":"It is not allowed to include hard coded paths, drive letters, UNC paths or IP-addresses in packages, unless this is absolutely required. \u201cAbsolutely required\u201d means that an application does not run without these parameters, or when it is specifically mentioned in the Intake document or TS form. For shortcuts and application settings to files on the network, the usage of UNC paths (DFS) is preferred. When it is not possible to use UNC, a drive letter may be used. When hard coded paths, drive letters, UNC paths or IP-addresses are used, this will be documented in the Intake document and TS-form. In MSI packages and unattended setups, these paths are replaced by public properties or variables. For common path\u2019s (like Program Files, Application Data, etc) the standard MSI properties or system variables must be used ([ProgramFilesFolder], [AppDataFolder], etc).","title":"Hard coded paths, drive letters and UNC path"},{"location":"_archive/application-portal/packaging/guidelines/customer/","text":"Customer environment \u00b6 When creating intakes and building packages and sequences the target environment must be known. This chapter describes the environment of SSW wherein the packages will be deployed. Package platform \u00b6 For SSW packages are built for the Windows 10 Desktop (rich client) environment, single and multi-session Windows 10 virtual desktops in AVD and Multi Session Server 2019 machines in AVD. Preferably a \u201cclean machine\u201d will be used for intakes and package build. A clean state can be Windows + additional packages (\u201cgold image\u201d) as long as it\u2019s a good representation of the target environment. When applications need prerequisites (middleware or other applications), these will be installed preferably using the package created for the prerequisite, otherwise a manual installation is done based on the intake. The intake document describes the target platform or platforms for the package. The OS default installation is used with the following settings: UAC will be turned on (preferably turned off during package build) Firewall is turned on (preferably turned off during package build) Windows Defender is turned on DEP (Data Execution Prevention) is set to only scan essential Windows programs and services. Users have full control permissions in their user profile. Users will not have permissions to create files and folders on the system drive and users only have read and execute permissions on files that already exist on de system. Regional settings \u00b6 The correct regional settings are sometimes crucial for application to work correctly. The default settings are: Language: (Netherlands) Location is: Netherlands, The Date and time notation: default settings for Dutch (Netherlands) Note that these can deviate for your customer! Common Layer \u00b6 The common layer is the set of applications and middleware that is installed on every platform by default. This common layer can be different between platforms, a description for the generic platform is given in the appendix \u201cCommon layer for SSW\u201d. Packages will be tested against this common layer or Gold image to make sure no conflicts occur when the new package is deployed. Changes in the common layer will be communicated and will result in an update of the Appendix \u201cCommon layer for SSW\u201d. File extensions \u00b6 The following extensions are part of the default OS or applications in the common layer. These extensions may only be overwritten by the package when this is explicitly stated in the intake. Extension Application pdf Edge ica Citrix client txt Microsoft Notepad ini Microsoft Notepad mdb Microsoft Office Access ldb Microsoft Office Access mde Microsoft Office Access mdw Microsoft Office Access mda Microsoft Office Access xls Microsoft Office Excel xlt Microsoft Office Excel xlk Microsoft Office Excel xla Microsoft Office Excel xlw Microsoft Office Excel wbk Microsoft Office Word doc Microsoft Office Word dot Microsoft Office Word wiz Microsoft Office Word ppt Microsoft Office Powerpoint pps Microsoft Office Powerpoint pot Microsoft Office Powerpoint wsh Microsoft Windows Based Script Host wsf Microsoft Windows Based Script Host vbs Microsoft Windows Based Script Host vbe Microsoft Windows Based Script Host msi Microsoft Windows Installer msp Microsoft Windows Installer chm Microsoft Windows Operating System hlp Microsoft Windows Operating System exe Microsoft Windows Operating System bat Microsoft Windows Operating System com Microsoft Windows Operating System cmd Microsoft Windows Operating System sys Microsoft Windows Operating System dll Microsoft Windows Operating System ocx Microsoft Windows Operating System xml Microsoft Windows Operating System htm Microsoft Windows Operating System html Microsoft Windows Operating System cda Microsoft Windows Operating System url Microsoft Windows Operating System lnk Microsoft Windows Operating System 386 Microsoft Windows Operating System cpl Microsoft Windows Operating System dsn Microsoft Windows Operating System drv Microsoft Windows Operating System fon Microsoft Windows Operating System fft Microsoft Windows Operating System msc Microsoft Windows Operating System dsn Microsoft Windows Operating System reg Microsoft Windows Operating System js Microsoft Windows Operating System jse Microsoft Windows Operating System cer Microsoft Windows Operating System crt Microsoft Windows Operating System Infrastructure for application deployment \u00b6 The SSW desktop workspace is a cloud managed workspace, consisting of: Azure Active Directory joined Windows 10 laptops and desktops Management with Intune (Microsoft Endpoint Manager) Microsoft Office 365 The desktops and laptops will be enrolled using Autopilot Pre-provisioning (aka White Glove) or Self Deploying mode during which the base applications are installed. Additionally, user specific applications are installed when the user logs in to the device (when user targeted as \u2018required application\u2019 in Intune), can be installed from the Intune Company Portal (when user targeted as \u2018available application\u2019 in Intune) or will be deployed using the application portal. The following guideline is applicable: Generic applications are deployed using Intune, targeted to Autopilot device groups. Applications targeted to groups of devices, for example devices with a specific Group Tag or Device Model, are deployed using Intune. These groups preferably are based on AAD Dynamic Groups. Applications that are targeted to All users, will be deployed using Intune, targeting All (Autopilot) devices Applications that are targeted to specific users, will be deployed using the Application Portal. Installation starts when the user first clicks the application icon in the portal. User specific configuration for applications is configured in the Application Portal. Think of registry settings or configuration files in the user's profile. Guidelines for Intune and Autopilot \u00b6 When using Autopilot and especially with Pre-provisioning (White Glove), mixed use of both win32 apps and LOB apps (MSI packages) must not be configured. Instead, all apps, including MSI packages, are wrapped to win32 apps. Therefore, best practice is to configure deployment scripts using the PowerShell App Deployment Toolkit . This script is wrapped to an intunewin package for deployment using the Microsoft-Win32-Content-Prep-Tool. Be sure to always use the latest version . Usage of the PS App Deployment Toolkit provides a generic approach for application deployment and configuration in Intune. Exceptions, where win32 apps are not used are: The Office 365 core apps, these are configured in Intune using the 'Microsoft 365 Apps' type. Windows store apps. Modern apps, such as appX or MSIX, are installed using the 'Line-of-business app' type. Note that Visio and Project are installed as add-on installation for Office 365, using the application portal (Install on first use). Also note, when using Autopilot any application offered from the Microsoft Store that is device targeted, must use the Offline license . Guidelines for the application portal \u00b6 User specific applications are deployed upon first use from the application portal. This can be an application based on the MSIX format, MSI, unattended setup package or just a combination of copy/create actions of files and registry settings. Client/Server applications preferably are deployed on a Remote Workspace solution, like AVD. For AVD, applications are deployed either during the build of the core image or during runtime. Applications in the Remote Workspace core image \u00b6 Applications that will be included in the core image for an AVD host pool, will be deployed using unattended setup or MSI packages. The installation is included in the Azure Image builder script, that is used to create the image. The following apps will be included in the image: will be targeted to all users. dependencies, such as middleware applications. cannot be packaged to MSIX. are never updated, or are updated with a very low frequency. Note that, depending on the actual AVD implementation, it is also possible to deploy applications using Intune. Consult the project lead if this will be or can be used. Applications for specific users in the Remote Workspace \u00b6 User specific applications will be packaged to MSIX and deployed to users using MSIX App-Attach. The Paragraph 'Application types and order' in the 'Application Guidelines' describes when to use a specific package type. User environment \u00b6 A typical workspace platform for users is build up by 4 layers: The hardware (desktop, laptop, or server), either physical or virtual. For SSW laptops are mostly used for rich clients, Windows 10 Virtual desktops are preferred in AVD. The operating system. For SSW, this is Windows 10 x64 (rich client and AVD) or Windows Server 2019 x64 (AVD). This includes applications that are available from the OS, such as the Microsoft browser, File Explorer, Notepad, etc. Common layer (part of the standard images and deployed by installing MSI packages or unattended installations) \u2013 installed using Intune or during creation of the image. User / group specific applications - installed using the Application Portal on rich clients, using MSIX App Attach on AVD. Other characteristics are: Workstations have a single system drive C:\\, AVD Clients have a temporary D-drive which is standard in Azure hosted virtual machines. This D-drive may not be used by applications or packages. %ProgramFiles% is \u201cC:\\Program Files\u201d and %ProgramFilesX86% \u201cC:\\Program Files (x86)\u201d for 32 bits applications. The Desktop, Documents, Pictures, Screenshots, and Camera Roll folders are redirected to the OneDrive sync folder using the Known Folder Move configuration. The user\u2019s OneDrive folder is added to the sync client automatically on Windows 10 operating systems. Microsoft Edge is set as the default browser. FSLogix is used as a profile management solution in AVD desktops. For Windows 10 rich clients, Enterprise State Roaming (ESR) is used to roam user settings using Azure Active Directory. Note that application settings for Win32 apps are not included in ESR. If this is a requirement, UE-V can be used as an alternative. The use of UE-V however is non-standard and requires Windows 10 Enterprise licenses. Policy settings \u00b6 Policies, for SSW policies are set using Intune on rich client devices. The most important policy set is the Microsoft Security Baseline for Windows and for Edge. Active Directory GPO is used for AVD hosts but policies can also be set in Intune when the AVD hosts are enrolled in Microsoft Endpoint Manager. There will no direct policies that restrict the behavior of modern applications. Exceptions can occur due to Windows Defender policies, such as: Detect and block potentially unwanted applications (PUA) SmartScreen settings Attack Surface Reduction Rules The effect of these policies must be subject during the application intake by testing the application on a device with the configured policies activated.","title":"Customer environment"},{"location":"_archive/application-portal/packaging/guidelines/customer/#customer_environment","text":"When creating intakes and building packages and sequences the target environment must be known. This chapter describes the environment of SSW wherein the packages will be deployed.","title":"Customer environment"},{"location":"_archive/application-portal/packaging/guidelines/customer/#package_platform","text":"For SSW packages are built for the Windows 10 Desktop (rich client) environment, single and multi-session Windows 10 virtual desktops in AVD and Multi Session Server 2019 machines in AVD. Preferably a \u201cclean machine\u201d will be used for intakes and package build. A clean state can be Windows + additional packages (\u201cgold image\u201d) as long as it\u2019s a good representation of the target environment. When applications need prerequisites (middleware or other applications), these will be installed preferably using the package created for the prerequisite, otherwise a manual installation is done based on the intake. The intake document describes the target platform or platforms for the package. The OS default installation is used with the following settings: UAC will be turned on (preferably turned off during package build) Firewall is turned on (preferably turned off during package build) Windows Defender is turned on DEP (Data Execution Prevention) is set to only scan essential Windows programs and services. Users have full control permissions in their user profile. Users will not have permissions to create files and folders on the system drive and users only have read and execute permissions on files that already exist on de system.","title":"Package platform"},{"location":"_archive/application-portal/packaging/guidelines/customer/#regional_settings","text":"The correct regional settings are sometimes crucial for application to work correctly. The default settings are: Language: (Netherlands) Location is: Netherlands, The Date and time notation: default settings for Dutch (Netherlands) Note that these can deviate for your customer!","title":"Regional settings"},{"location":"_archive/application-portal/packaging/guidelines/customer/#common_layer","text":"The common layer is the set of applications and middleware that is installed on every platform by default. This common layer can be different between platforms, a description for the generic platform is given in the appendix \u201cCommon layer for SSW\u201d. Packages will be tested against this common layer or Gold image to make sure no conflicts occur when the new package is deployed. Changes in the common layer will be communicated and will result in an update of the Appendix \u201cCommon layer for SSW\u201d.","title":"Common Layer"},{"location":"_archive/application-portal/packaging/guidelines/customer/#file_extensions","text":"The following extensions are part of the default OS or applications in the common layer. These extensions may only be overwritten by the package when this is explicitly stated in the intake. Extension Application pdf Edge ica Citrix client txt Microsoft Notepad ini Microsoft Notepad mdb Microsoft Office Access ldb Microsoft Office Access mde Microsoft Office Access mdw Microsoft Office Access mda Microsoft Office Access xls Microsoft Office Excel xlt Microsoft Office Excel xlk Microsoft Office Excel xla Microsoft Office Excel xlw Microsoft Office Excel wbk Microsoft Office Word doc Microsoft Office Word dot Microsoft Office Word wiz Microsoft Office Word ppt Microsoft Office Powerpoint pps Microsoft Office Powerpoint pot Microsoft Office Powerpoint wsh Microsoft Windows Based Script Host wsf Microsoft Windows Based Script Host vbs Microsoft Windows Based Script Host vbe Microsoft Windows Based Script Host msi Microsoft Windows Installer msp Microsoft Windows Installer chm Microsoft Windows Operating System hlp Microsoft Windows Operating System exe Microsoft Windows Operating System bat Microsoft Windows Operating System com Microsoft Windows Operating System cmd Microsoft Windows Operating System sys Microsoft Windows Operating System dll Microsoft Windows Operating System ocx Microsoft Windows Operating System xml Microsoft Windows Operating System htm Microsoft Windows Operating System html Microsoft Windows Operating System cda Microsoft Windows Operating System url Microsoft Windows Operating System lnk Microsoft Windows Operating System 386 Microsoft Windows Operating System cpl Microsoft Windows Operating System dsn Microsoft Windows Operating System drv Microsoft Windows Operating System fon Microsoft Windows Operating System fft Microsoft Windows Operating System msc Microsoft Windows Operating System dsn Microsoft Windows Operating System reg Microsoft Windows Operating System js Microsoft Windows Operating System jse Microsoft Windows Operating System cer Microsoft Windows Operating System crt Microsoft Windows Operating System","title":"File extensions"},{"location":"_archive/application-portal/packaging/guidelines/customer/#infrastructure_for_application_deployment","text":"The SSW desktop workspace is a cloud managed workspace, consisting of: Azure Active Directory joined Windows 10 laptops and desktops Management with Intune (Microsoft Endpoint Manager) Microsoft Office 365 The desktops and laptops will be enrolled using Autopilot Pre-provisioning (aka White Glove) or Self Deploying mode during which the base applications are installed. Additionally, user specific applications are installed when the user logs in to the device (when user targeted as \u2018required application\u2019 in Intune), can be installed from the Intune Company Portal (when user targeted as \u2018available application\u2019 in Intune) or will be deployed using the application portal. The following guideline is applicable: Generic applications are deployed using Intune, targeted to Autopilot device groups. Applications targeted to groups of devices, for example devices with a specific Group Tag or Device Model, are deployed using Intune. These groups preferably are based on AAD Dynamic Groups. Applications that are targeted to All users, will be deployed using Intune, targeting All (Autopilot) devices Applications that are targeted to specific users, will be deployed using the Application Portal. Installation starts when the user first clicks the application icon in the portal. User specific configuration for applications is configured in the Application Portal. Think of registry settings or configuration files in the user's profile.","title":"Infrastructure for application deployment"},{"location":"_archive/application-portal/packaging/guidelines/customer/#guidelines_for_intune_and_autopilot","text":"When using Autopilot and especially with Pre-provisioning (White Glove), mixed use of both win32 apps and LOB apps (MSI packages) must not be configured. Instead, all apps, including MSI packages, are wrapped to win32 apps. Therefore, best practice is to configure deployment scripts using the PowerShell App Deployment Toolkit . This script is wrapped to an intunewin package for deployment using the Microsoft-Win32-Content-Prep-Tool. Be sure to always use the latest version . Usage of the PS App Deployment Toolkit provides a generic approach for application deployment and configuration in Intune. Exceptions, where win32 apps are not used are: The Office 365 core apps, these are configured in Intune using the 'Microsoft 365 Apps' type. Windows store apps. Modern apps, such as appX or MSIX, are installed using the 'Line-of-business app' type. Note that Visio and Project are installed as add-on installation for Office 365, using the application portal (Install on first use). Also note, when using Autopilot any application offered from the Microsoft Store that is device targeted, must use the Offline license .","title":"Guidelines for Intune and Autopilot"},{"location":"_archive/application-portal/packaging/guidelines/customer/#guidelines_for_the_application_portal","text":"User specific applications are deployed upon first use from the application portal. This can be an application based on the MSIX format, MSI, unattended setup package or just a combination of copy/create actions of files and registry settings. Client/Server applications preferably are deployed on a Remote Workspace solution, like AVD. For AVD, applications are deployed either during the build of the core image or during runtime.","title":"Guidelines for the application portal"},{"location":"_archive/application-portal/packaging/guidelines/customer/#applications_in_the_remote_workspace_core_image","text":"Applications that will be included in the core image for an AVD host pool, will be deployed using unattended setup or MSI packages. The installation is included in the Azure Image builder script, that is used to create the image. The following apps will be included in the image: will be targeted to all users. dependencies, such as middleware applications. cannot be packaged to MSIX. are never updated, or are updated with a very low frequency. Note that, depending on the actual AVD implementation, it is also possible to deploy applications using Intune. Consult the project lead if this will be or can be used.","title":"Applications in the Remote Workspace core image"},{"location":"_archive/application-portal/packaging/guidelines/customer/#applications_for_specific_users_in_the_remote_workspace","text":"User specific applications will be packaged to MSIX and deployed to users using MSIX App-Attach. The Paragraph 'Application types and order' in the 'Application Guidelines' describes when to use a specific package type.","title":"Applications for specific users in the Remote Workspace"},{"location":"_archive/application-portal/packaging/guidelines/customer/#user_environment","text":"A typical workspace platform for users is build up by 4 layers: The hardware (desktop, laptop, or server), either physical or virtual. For SSW laptops are mostly used for rich clients, Windows 10 Virtual desktops are preferred in AVD. The operating system. For SSW, this is Windows 10 x64 (rich client and AVD) or Windows Server 2019 x64 (AVD). This includes applications that are available from the OS, such as the Microsoft browser, File Explorer, Notepad, etc. Common layer (part of the standard images and deployed by installing MSI packages or unattended installations) \u2013 installed using Intune or during creation of the image. User / group specific applications - installed using the Application Portal on rich clients, using MSIX App Attach on AVD. Other characteristics are: Workstations have a single system drive C:\\, AVD Clients have a temporary D-drive which is standard in Azure hosted virtual machines. This D-drive may not be used by applications or packages. %ProgramFiles% is \u201cC:\\Program Files\u201d and %ProgramFilesX86% \u201cC:\\Program Files (x86)\u201d for 32 bits applications. The Desktop, Documents, Pictures, Screenshots, and Camera Roll folders are redirected to the OneDrive sync folder using the Known Folder Move configuration. The user\u2019s OneDrive folder is added to the sync client automatically on Windows 10 operating systems. Microsoft Edge is set as the default browser. FSLogix is used as a profile management solution in AVD desktops. For Windows 10 rich clients, Enterprise State Roaming (ESR) is used to roam user settings using Azure Active Directory. Note that application settings for Win32 apps are not included in ESR. If this is a requirement, UE-V can be used as an alternative. The use of UE-V however is non-standard and requires Windows 10 Enterprise licenses.","title":"User environment"},{"location":"_archive/application-portal/packaging/guidelines/customer/#policy_settings","text":"Policies, for SSW policies are set using Intune on rich client devices. The most important policy set is the Microsoft Security Baseline for Windows and for Edge. Active Directory GPO is used for AVD hosts but policies can also be set in Intune when the AVD hosts are enrolled in Microsoft Endpoint Manager. There will no direct policies that restrict the behavior of modern applications. Exceptions can occur due to Windows Defender policies, such as: Detect and block potentially unwanted applications (PUA) SmartScreen settings Attack Surface Reduction Rules The effect of these policies must be subject during the application intake by testing the application on a device with the configured policies activated.","title":"Policy settings"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/","text":"MSI Standards and guidelines \u00b6 In the first part of this chapter the parameters that are used in the construction of MSI packages are declared. Then the versioning rules are explained, naming convention and some examples for MSI packages are given. The final part of the chapter describes the differences between new builds and upgrades concerning MSI packages. Deployment of MSI packages: per-Machine \u00b6 MSI packages will have the following characteristics: MSI packages will be deployed to desktop clients using Microsoft Intune or the application portal, the installation will run in system context. MSI packages are deployed per-machine. To install the application at machine level the installation will take place with administrative/system credentials and by setting the ALLUSERS property to 1. Reboots are suppressed so users are not troubled with unwanted and/or unexpected reboots. MSI packages can be installed using the single MSI file or using an administrative installation point. An administrative installation is manually created by using the following command: msiexec /a \"msi-file\" . Every non-vendor MSI package supports creation of an administrative installation point. The MSI package will be installed with the following installation command: msiexec /i \"msi-file\" /qb!- Or, in case of an MSI package with a transform: msiexec /i \"msi-file\" TRANSFORMS=\"mst-file\" /qb!- Applications that are delivered by the vendor as an MSI based installation, follow the installation and deployment instructions from the vendor. If no instructions are given, the default properties described below will be added using a transform file. MSI Package Properties for deployment per-machine \u00b6 To create a correct machine-based installation the following properties are set: ROOTDRIVE If more partitions/hard disks are available on the target system, this property prevents that an installation will be done on a drive other than C:. This is important for applications that do not use the %programFiles% folder. Just like other public properties, The ROOTDRIVE property can be overruled in the installation command line, or in a MST: 'ROOTDRIVE = C:\\' ALLUSERS The ALLUSERS property is set to 1: 'ALLUSERS = 1' REBOOT The REBOOT property is set to suppress reboots: 'REBOOT = ReallySuppress' REBOOTPROMPT This property is set 'REBOOTPROMPT = S' For vendor MSIs these properties are set using the MST file. If they already exist in the property table, they are altered to the values above, otherwise these properties are added to the table. Security \u00b6 All applications that are installed in the system can be used by all users. No access restrictions are set to directories. When needed for the correctly functioning of an application extra permission to the local USERS group are granted. The permissions are set using ACL commands. For setting ACL\u2019s a tool is used which supports inheritance and all other options in the field of NTFS permissions. Sogeti uses the latest version of Setacl command line see here . Example: a few lines out of a permission command file, using setacl, when installing an application: Using a global group: Set Domain=<DomainName> Set Globalgroup=<GroupName> SetACL.exe -on \"%ProgramFiles%\\Application\" -ot file -actn ace -ace \"n:%Domain%\\%Globalgroup%;p:change;s:n;m:grant;w:dacl\" SetACL.exe -on \"%Systemroot%\\Application.ini\" -ot file -actn ace -ace \"n:%Domain%\\%Globalgroup%;p:write;s:n;m:grant;w:dacl\" SetACL.exe -on \"HKLM\\software\\borland\" -ot reg -actn ace -ace \"n:%Domain%\\%Globalgroup%;p:read,create_link,create_subkey,set_val,notify,delete;s:n;m:grant;w:dacl\" Using a the local users group: Set SidUsers=S-1-5-32-545 SetACL.exe -on \"%ProgramFiles%\\Application\" -ot file -actn ace -ace \"n:%SidUsers%;p:change;s:y;m:grant;w:dacl\" SetACL.exe -on \"%Systemroot%\\Application.ini\" -ot file -actn ace -ace \"n:%SidUsers%;p:write;s:y;m:grant;w:dacl\" SetACL.exe -on \"HKLM\\software\\borland\" -ot reg -actn ace -ace \"n:%SidUsers%;p:read,create_link,create_subkey,set_val,notify,delete;s:y;m:grant;w:dacl\" The package engineer must describe in the release document if and exactly which permissions are set to make the application work. Repackaged MSI composition \u00b6 Repackaged MSI packages (non-vendor MSIs) adhere to the standards described in this section. Note: these standards do not apply when vendor MSI packages are used. For vendor MSIs please see the documentation of the vendor. Compressed files \u00b6 When possible, only one MSI per application should be built. All objects and files are compressed and placed in cabinet files. The cabinet files are placed inside the MSI (internally compressed). Installation files will not be placed in a directory structure outside the MSI, as is the case with administrative installation points. Vendor MSIs are an exception. When a vendor MSI is not compressed, it will remain not compressed. Configuration and \u201cfinetuning\u201d will be done by means of an MST, built on an administrative installation of the vendor MSI. Self-containing \u00b6 The MSI package contains all the logic needed for installation or uninstallation. If this is not possible with standard actions alone \u2013 and only in this case, custom actions will be added. The MSI packages contain all system changes (files on the hard drive, system registry keys, services, etc). Features \u00b6 Repackaged MSI packages contain two features: _Usersettings ___Complete The feature Usersettings is the parent of the feature Complete. The feature Usersettings contains all usersettings needed for the application: the HKCU keys and files for the user profile. Files in the user\u2019s profile always will be placed in a component having a HKCU registry key as keypath. The feature complete contains all machine based items like: Files on the hard drive HKEY_LOCAL_MACHINE keys HKEY_CLASSES_ROOT keys Services Extensions Shortcuts Etc\u2026 In a transform, the schema of a vendor MSI database will never be changed. Advertising \u00b6 Desktop: Shortcuts will be advertised for desktop packages. To circumvent repairs on first use, user settings are copied or created using actions in the application portal. Registry settings will be included as-is and not in the advertising tables. This is a Microsoft best practice and prevents unwanted repairs. Deployment of user settings \u00b6 User settings (in the context of MSI packages) involve the following objects: HKCU registry keys. files in the user profile. files on the home drive or other user specific folders. (Standard) MSI packages for the desktop platform contain advertised shortcuts. When starting an application via an advertised shortcut the default MSI repair mechanism is triggered when components, such as per-user resources, are not found. This mechanism was used to deploy the user settings for desktop packages in traditional workspaces. Using Sogeti Smart Workspace, we use the application portal to publish applications to end-users. The portal has the ability to do user-based configuration of settings and this will be used instead of the self-healing capabilities of MSI packages. Self healing can be used as fallback option. System requirements (Launch Conditions) \u00b6 The repackaged MSIs will not have Launch Conditions. Registration in Add/Remove Programs \u00b6 When possible the MSI package should have the icon associated with the application. This can be done by means of the field Display Icon in Add/Remove Programs. The following properties are set for Add/Remove Programs: Property Value DisplayName [ProductName] Publisher [Manufacturer] DisplayVersion [ProductVersion] Support Information Page Product Updates URL blank Contact Person blank Phone Number blank Help URL blank Comments blank ARPNOMODIFY 1 ARPNOREMOVE absent or 0 ARPNOREPAIR absent or 0 ARPSYSTEMCOMPONENT absent or 0 User interaction \u00b6 It is not allowed that the user is prompted to fill in information during installation. The package must install completely unattended, without user interaction. All MSI-packages support completely silent/unattended installation by using the msiexec.exe command with the /q parameter like /qb-! or /qn. In exceptional cases user interaction is inevitable. For example when a unique license code is required for every system or user. Merge Modules \u00b6 Standard Merge Modules, supplied by Wise Package Studio or another vendors, will be used to install shared system components, like Microsoft ActiveX Controls. Permanent components and shared DLL\u2019s \u00b6 Applications can install dll and/or ocx files in Windows system folders (like C:\\Windows\\System32 or C:\\Program Files\\Common Files). General best practices will be used for those files: For files in the CommonProgramFiles folder the shared dll count is raised Components that install files in the SystemFolder are marked Permanent Changing these options to other values can or will generate ICE errors. However, an exception can be made if it is obvious the dll file or ocx is specific for the application. The permanent flag or shared dll flag can be turned off but this must be documented in the package release documentation. When in doubt, follow the best practice to turn the flags on. DLL or OCX files in application folder \u00b6 DLL or OCX files that are installed in the application\u2019s specific installation folder (typically in the Program Files folder) and need COM registration should be examined: If the dll or ocx file is or may be shared with other applications, the dll or ocx should be moved to the SystemFolder. The corresponding component, including the corresponding registry values, should be marked as permanent. If the application searches the moved file in its own installation folder and issues arise, then a copy can be added in the applications folder. In all cases, only the copy in the SystemFolder may be registered. Exceptions can be made for applications that are prerequisites for each other. If it is obvious the dll or ocx is application specific and no other applications use the dll or ocx file, it may remain in the application\u2019s installation folder including the registration from this folder. ODBC settings \u00b6 ODBC settings preferably are created using the registry. Using the ODBC tables may cause issues especially for non Microsoft ODBC drivers. Services \u00b6 Actions (install, uninstall, start and stop) for normal Windows services are incorporated in the MSI package using the services tables. Settings that cannot be created using the services table can be created using the registry table. Services that cannot be handled using the services table, like kernel services, can be handled using custom actions. Sometimes, the application is included with a separate executable to manage the service which can be used in custom actions. Validation \u00b6 ICE validation for MSI packages is done using the cub file: \u201cdarice.cub\u201d. For ICE Warnings best practices are they mostly can be ignored. ICE Errors should be solved in most cases. ICE errors in vendor MSI packagers, not introduced through the changes in an MST file, are not solved. Note: Validation always has to be done using Orca. Transforming a vendor MSI \u00b6 If the original installation source is a MSI, this MSI is to be used as base MSI. Adjustments, configuration, and fine-tuning will be done with a transform file. If possible, an administrative installation point is created before building the MST. The transform file can be used to change the following: ALLUSERS property ROOTDRIVE property REBOOT properties Productname and Title Installation of additional files and registry keys Setting permissions Additional Custom Actions Add/Remove Program settings Etc. Things not to be changed are: Compression ProductVersion ProductCode Manufacturer Schema, i.e. feature/component structure and keypaths Summary stream information: Title, Author, Comments Ice-errors MSI filename Some installations extract an msi package upon installation. For these installations the extracted MSI package is to be used combined with an mst file. The MSI package can be extracted in many cases using the command line: Setup.exe /a. This will create an administrative setup ready for use with an mst file. In some occasions the installation using this extracted MSI directly fails and the setup.exe still must be used for deployment. For some applications, repackaging \u2013 even the vendor MSI \u2013 can be preferred over using the vendor MSI with an MST. This can be the case if the vendor MSI is of poor quality, the vendor MSI cannot be used in an enterprise deployment scenario or when the creation of an mst file is very time consuming. The decision to repackage the MSI is for the packager using common sense, error free deployment and quality guidelines. Supported functionalities \u00b6 All MSI packages must support the following functionalities: Functionality Description Installation All packages have a default installation. Administrative setup It is possible to create an administrative setup for the msi package. For vendor msi\u2019s, an admistrative setup is created just before the creation of the transform file. The administrative setup is used as source for the transform. When there are difficulties creating an administrative setup, these are mentioned in the TS form. Assigned and Advertised The msi packages can be deployed both \u201cAssigned\u201d and \u201cAdvertised\u201d. Only for vendor msi\u2019s, exceptions can be made. Install-on-demand Advertised applications will be installed during the first call to the application. This is the install on demand principle. Calls to the application can be the applications shortcut or a file-extension for example. Exceptions may be made for vendor msi\u2019s Silent install The msi packages support silent installation Self repair The packages must support self repair. MSI packages installed per machine will install user settings at the first launch of the application. Besides that, missing parts of the application will trigger a repair of the installation at application launch. For vendor MSI packages the self repair behavior is not changed. Elevated privileges The MSI-packages can be installed by users having \u201cElevated privileges\u201d for the application. Deployment The MSI-packages must support deployment using the customers deployment mechanism. Uninstall The packages can be uninstalled using the standard \u201cRemove\u201d action. The uninstallation process must be unattended. At uninstall, the application and, where possible, all known configuration files, temporary files and registry keys used by the application will be removed. All other files will remain because they may contain user data, unless otherwise stated by the application manager and documented in the intake document. Updates and patches \u00b6 In the intake document the required procedure for updates is documented. The package can be a completely new package or an update for an existing package. When the new package version is an update for an existing application, the previous version is likely to be removed upon installation of the new version. Patched packages should always remove the previous installed package. Using the standard upgrade tables updated packages can be installed regardless of the state of the workstation: When a previous version is found, it is uninstalled, and the new version is installed When no previous version is found, the new package installs just fine The standard MSI procedure is the new package will be installed first and after that, the previous version is uninstalled. If both packages are using the same components (content and guid) this will result in an efficient update process where only new (or updated) components will be installed and obsolete components will be removed. Anything not changing will remain unchanged and untouched. Since it is not always feasible both package versions use the same components (for example in case of a new application version or vendor MSI packages) this cannot be used in all circumstances. If components do not match, parts of the new package may be removed by the uninstall of the previous version resulting in conflicts and unwanted selfrepairs. In this case, the upgrade mechanism still can be used by moving the standard action RemoveExistingProducts upwards in the Install Immediate sequence, just after FindRelatedProducts. Vendor MSI packages which do not support the MSI update mechanism will be updated using the deployment tool. An uninstall command is sent to the workstation prior to the installation of the new version. Checks must support the case where no previous version exists on the workstation. Applications not suitable for MSI repackaging \u00b6 Not all applications or installations are suitable for repackaging. The following applications will not be repackaged into MSI packages: Operating Systems Service patches, Service packs and hotfixes on the operating system will not be repackaged, but will be installed using the procedure described by the vendor, typically Microsoft. Microsoft Internet Explorer, Anti Virus software These applications add changes on a low level of the Operating System and will not be repackaged. They will be installed using the procedure described by the vendor. Unsigned Hardware Drivers Drivers can be packaged according to the Microsoft Driver Installation Framework principle. Therefore, the drivers for peripherals and other internal and external devices must be digitally signed (Designed for Windows 10). If a driver requires hardware to install correctly, this hardware must be supplied to the packager before any work can begin \u2013 if not, there is no guarantee that the package will work with the hardware. Vendor specific deployment instructions In some cases, the vendor\u2019s deployment mechanism is preferred over standard repackaging and/or MSI-MST combination. If the vendor prescribes a specific deployment scenario, in most cases companioned with a deployment tool or toolkit, this scenario is preferred over repackaging. Examples for this approach are: Microsoft Office 365 suite Adobe Creative Suites Adobe Acrobat family products AutoCAD family products Testing an MSI Package \u00b6 After the packager has finished the package it can be tested using the User test and the Administrator test. The user test typically shows the correct functionality of the application when installed with the package on a representative workplace (desktop, laptop or server). The administrator test can be used to determine if additional (ntfs-) permissions or user rights are necessary so the application can function according to the requirements. User test \u00b6 Start on a clean machine Log on with a user account Start a command prompt in admin context From the admin prompt start a new command prompt in system context (using psexec.exe) Install any prerequisites in system context Install the MSI package in system context Make sure user settings are set when appropriate: import the user settings (HKCU registry keys and user files) for the user account when the package is tested for deployment on a remote desktop VM (on remote desktop servers self-repair is not preferred, user settings are set with other mechanisms like the use of GPO Preferred Settings. If user settings are set using Active Setup log off and login with the test user. Check if user settings are created before the first launch of the application. In all other cases, user settings should be set through MSI self-repair. Run the application using the shortcut or file extension (when appropriate). Test the application according to the test plan in the intake document. Admin test \u00b6 Start on a clean machine Log on with a user account with local administrator privileges Start a command prompt in admin context Start from the admin prompt a new command prompt in system context Install any prerequisites in system context Install the MSI package in system context Make sure user settings are set when appropriate: Import the user settings (HKCU registry keys and user files) for the user account when the package is tested for deployment on a remote desktop VM (on remote desktop servers self-repair is not preferred, user settings are set with other mechanisms like the use of GPO Preferred Settings). If user settings are set using Active Setup log off and login with the test user. Check if user settings are created before the first launch of the application. In all other cases, user settings should be set through MSI self-repair. Run the application using the shortcut or file extension (when appropriate). Test the application according to the test plan in the intake document. MSI Naming parameters \u00b6 Note: for all parameters spaces (\u2018 \u2019) and underscores (\u2018_\u2019) are not allowed. If, for readability, a separation character is needed, use \u2018-\u2019. Identification \u00b6 Applications are identified using manufacturer, application name, version and language as described in the paragraph Application and package identification from chapter 'Introduction'. Buildversion \u00b6 The Buildversion of an MSI package consists of 3 categories: major, minor and revision. The categories are separated by a dot (\u2018.\u2019). Buildversion major.minor.revision major x (0-255) minor y (0-255) revision z (0-65535) Buildversion xxx.yyy.zzzzz (no leading zero\u2019s) Examples: 1.0.0 2.1.3 1.0.11 MSI Versioning \u00b6 Regarding the Buildversion the following standards will be used: The first build, based on intake version 1.0, is version 1.0.0. When an MSI package is released for technical acceptation, the number will be freezed. Based on intake 1.0, the first time a package is released for technical tests, it will have number 1.0.0. If the MSI is not accepted after technical or functional tests due to a technical defect in the package, the build version will be raised: 1.0.0 -> 1.0.1. (bases on intake 1.0) If requirements or configurations are changed (this results in a new intake version 1.1), the minor version will be raised, following the intake version: 1.0.1 -> 1.1.0 In case of a lot of changes, for example a completely different installation of the application, the intake will have version 2.0, and the major version of the build number will be raised: 1.1.0 -> 2.0.0. Note: In the MSI package XY always matches the intake version (the first two digits in the version for the intake are used), new releases based on the same intake are created by updating the revision-parameter Z. MSI Naming convention \u00b6 This paragraph describes the naming to be used in MSI packages. The maximum length of the complete package name and package filename is 128 characters (including the file extensions). MSI Package Properties \u00b6 The following fields are properties in MSI packages: ProductName The ProductName of the MSI package is: Manufacturer_ApplicationName_Version_Language_vmajor.minor.revision Examples: Winzip_Winzip_10_EN_v1.0.0 Adobe_Reader_8.1_NL_v2.1.3 Note: When building a MST file the ProductName will be set in the MST. (Product)Version For the (product)version of a MSI package we must stick to the Windows Installer rules: major.minor.revision Example: 1.0.0 2.1.3 1.0.11 Note: When building a MST file the product version will NOT be changed in the MSI or MST. Title The title is identical to the product name: Manufacturer_ApplicationName_Version_Language_vmajor.minor.revision Example: Winzip_Winzip_10_EN_v1.0.0 Adobe_Reader_8.1_NL_v2.1.3 Note: When building a MST file the title will NOT be set in the MST. Manufacturer The Manufacturer of the MSI package is: ManufacturerName Example: Winzip Adobe Note: When building a MST file the manufacturer will NOT be changed in the MSI or MST. Author Author = Sogeti Nederland B.V. Note: When building a MST file the author will NOT be changed in the MSI or MST. Comments In the Comments field the date, packager, and other installed applications (prerequisites) are documented: Date, Name Packager, other apps Example: 10-11-2021, P. Ackager, JRE 1.9 Note: When building an MST file the comments will NOT be changed in the MSI or MST. MSI Filenames \u00b6 The following filenames are applicable when building a MSI package: MSI Filename The MSI filename must comply with the following convention. The name of the MSI package is: ManufacturerName_ApplicationName_Version_Language.msi Example: Winzip_Winzip_10_EN.msi Adobe_Reader_8.1_NL.msi Note: In case of a Vendor MSI with MST the name of the Vendor MSI is not changed. MST Filename The name of the MST files for a desktop package is: *ManufacturerName_ApplicationName_Version_Language_vmajor.minor.revision.mst Example: Winzip_Winzip_10_EN_v1.0.0.mst Adobe_Reader_8.1_NL_v2.1.3.mst","title":"MSI Standards and guidelines"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#msi_standards_and_guidelines","text":"In the first part of this chapter the parameters that are used in the construction of MSI packages are declared. Then the versioning rules are explained, naming convention and some examples for MSI packages are given. The final part of the chapter describes the differences between new builds and upgrades concerning MSI packages.","title":"MSI Standards and guidelines"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#deployment_of_msi_packages_per-machine","text":"MSI packages will have the following characteristics: MSI packages will be deployed to desktop clients using Microsoft Intune or the application portal, the installation will run in system context. MSI packages are deployed per-machine. To install the application at machine level the installation will take place with administrative/system credentials and by setting the ALLUSERS property to 1. Reboots are suppressed so users are not troubled with unwanted and/or unexpected reboots. MSI packages can be installed using the single MSI file or using an administrative installation point. An administrative installation is manually created by using the following command: msiexec /a \"msi-file\" . Every non-vendor MSI package supports creation of an administrative installation point. The MSI package will be installed with the following installation command: msiexec /i \"msi-file\" /qb!- Or, in case of an MSI package with a transform: msiexec /i \"msi-file\" TRANSFORMS=\"mst-file\" /qb!- Applications that are delivered by the vendor as an MSI based installation, follow the installation and deployment instructions from the vendor. If no instructions are given, the default properties described below will be added using a transform file.","title":"Deployment of MSI packages: per-Machine"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#msi_package_properties_for_deployment_per-machine","text":"To create a correct machine-based installation the following properties are set: ROOTDRIVE If more partitions/hard disks are available on the target system, this property prevents that an installation will be done on a drive other than C:. This is important for applications that do not use the %programFiles% folder. Just like other public properties, The ROOTDRIVE property can be overruled in the installation command line, or in a MST: 'ROOTDRIVE = C:\\' ALLUSERS The ALLUSERS property is set to 1: 'ALLUSERS = 1' REBOOT The REBOOT property is set to suppress reboots: 'REBOOT = ReallySuppress' REBOOTPROMPT This property is set 'REBOOTPROMPT = S' For vendor MSIs these properties are set using the MST file. If they already exist in the property table, they are altered to the values above, otherwise these properties are added to the table.","title":"MSI Package Properties for deployment per-machine"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#security","text":"All applications that are installed in the system can be used by all users. No access restrictions are set to directories. When needed for the correctly functioning of an application extra permission to the local USERS group are granted. The permissions are set using ACL commands. For setting ACL\u2019s a tool is used which supports inheritance and all other options in the field of NTFS permissions. Sogeti uses the latest version of Setacl command line see here . Example: a few lines out of a permission command file, using setacl, when installing an application: Using a global group: Set Domain=<DomainName> Set Globalgroup=<GroupName> SetACL.exe -on \"%ProgramFiles%\\Application\" -ot file -actn ace -ace \"n:%Domain%\\%Globalgroup%;p:change;s:n;m:grant;w:dacl\" SetACL.exe -on \"%Systemroot%\\Application.ini\" -ot file -actn ace -ace \"n:%Domain%\\%Globalgroup%;p:write;s:n;m:grant;w:dacl\" SetACL.exe -on \"HKLM\\software\\borland\" -ot reg -actn ace -ace \"n:%Domain%\\%Globalgroup%;p:read,create_link,create_subkey,set_val,notify,delete;s:n;m:grant;w:dacl\" Using a the local users group: Set SidUsers=S-1-5-32-545 SetACL.exe -on \"%ProgramFiles%\\Application\" -ot file -actn ace -ace \"n:%SidUsers%;p:change;s:y;m:grant;w:dacl\" SetACL.exe -on \"%Systemroot%\\Application.ini\" -ot file -actn ace -ace \"n:%SidUsers%;p:write;s:y;m:grant;w:dacl\" SetACL.exe -on \"HKLM\\software\\borland\" -ot reg -actn ace -ace \"n:%SidUsers%;p:read,create_link,create_subkey,set_val,notify,delete;s:y;m:grant;w:dacl\" The package engineer must describe in the release document if and exactly which permissions are set to make the application work.","title":"Security"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#repackaged_msi_composition","text":"Repackaged MSI packages (non-vendor MSIs) adhere to the standards described in this section. Note: these standards do not apply when vendor MSI packages are used. For vendor MSIs please see the documentation of the vendor.","title":"Repackaged MSI composition"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#compressed_files","text":"When possible, only one MSI per application should be built. All objects and files are compressed and placed in cabinet files. The cabinet files are placed inside the MSI (internally compressed). Installation files will not be placed in a directory structure outside the MSI, as is the case with administrative installation points. Vendor MSIs are an exception. When a vendor MSI is not compressed, it will remain not compressed. Configuration and \u201cfinetuning\u201d will be done by means of an MST, built on an administrative installation of the vendor MSI.","title":"Compressed files"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#self-containing","text":"The MSI package contains all the logic needed for installation or uninstallation. If this is not possible with standard actions alone \u2013 and only in this case, custom actions will be added. The MSI packages contain all system changes (files on the hard drive, system registry keys, services, etc).","title":"Self-containing"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#features","text":"Repackaged MSI packages contain two features: _Usersettings ___Complete The feature Usersettings is the parent of the feature Complete. The feature Usersettings contains all usersettings needed for the application: the HKCU keys and files for the user profile. Files in the user\u2019s profile always will be placed in a component having a HKCU registry key as keypath. The feature complete contains all machine based items like: Files on the hard drive HKEY_LOCAL_MACHINE keys HKEY_CLASSES_ROOT keys Services Extensions Shortcuts Etc\u2026 In a transform, the schema of a vendor MSI database will never be changed.","title":"Features"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#advertising","text":"Desktop: Shortcuts will be advertised for desktop packages. To circumvent repairs on first use, user settings are copied or created using actions in the application portal. Registry settings will be included as-is and not in the advertising tables. This is a Microsoft best practice and prevents unwanted repairs.","title":"Advertising"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#deployment_of_user_settings","text":"User settings (in the context of MSI packages) involve the following objects: HKCU registry keys. files in the user profile. files on the home drive or other user specific folders. (Standard) MSI packages for the desktop platform contain advertised shortcuts. When starting an application via an advertised shortcut the default MSI repair mechanism is triggered when components, such as per-user resources, are not found. This mechanism was used to deploy the user settings for desktop packages in traditional workspaces. Using Sogeti Smart Workspace, we use the application portal to publish applications to end-users. The portal has the ability to do user-based configuration of settings and this will be used instead of the self-healing capabilities of MSI packages. Self healing can be used as fallback option.","title":"Deployment of user settings"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#system_requirements_launch_conditions","text":"The repackaged MSIs will not have Launch Conditions.","title":"System requirements (Launch Conditions)"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#registration_in_addremove_programs","text":"When possible the MSI package should have the icon associated with the application. This can be done by means of the field Display Icon in Add/Remove Programs. The following properties are set for Add/Remove Programs: Property Value DisplayName [ProductName] Publisher [Manufacturer] DisplayVersion [ProductVersion] Support Information Page Product Updates URL blank Contact Person blank Phone Number blank Help URL blank Comments blank ARPNOMODIFY 1 ARPNOREMOVE absent or 0 ARPNOREPAIR absent or 0 ARPSYSTEMCOMPONENT absent or 0","title":"Registration in Add/Remove Programs"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#user_interaction","text":"It is not allowed that the user is prompted to fill in information during installation. The package must install completely unattended, without user interaction. All MSI-packages support completely silent/unattended installation by using the msiexec.exe command with the /q parameter like /qb-! or /qn. In exceptional cases user interaction is inevitable. For example when a unique license code is required for every system or user.","title":"User interaction"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#merge_modules","text":"Standard Merge Modules, supplied by Wise Package Studio or another vendors, will be used to install shared system components, like Microsoft ActiveX Controls.","title":"Merge Modules"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#permanent_components_and_shared_dlls","text":"Applications can install dll and/or ocx files in Windows system folders (like C:\\Windows\\System32 or C:\\Program Files\\Common Files). General best practices will be used for those files: For files in the CommonProgramFiles folder the shared dll count is raised Components that install files in the SystemFolder are marked Permanent Changing these options to other values can or will generate ICE errors. However, an exception can be made if it is obvious the dll file or ocx is specific for the application. The permanent flag or shared dll flag can be turned off but this must be documented in the package release documentation. When in doubt, follow the best practice to turn the flags on.","title":"Permanent components and shared DLL\u2019s"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#dll_or_ocx_files_in_application_folder","text":"DLL or OCX files that are installed in the application\u2019s specific installation folder (typically in the Program Files folder) and need COM registration should be examined: If the dll or ocx file is or may be shared with other applications, the dll or ocx should be moved to the SystemFolder. The corresponding component, including the corresponding registry values, should be marked as permanent. If the application searches the moved file in its own installation folder and issues arise, then a copy can be added in the applications folder. In all cases, only the copy in the SystemFolder may be registered. Exceptions can be made for applications that are prerequisites for each other. If it is obvious the dll or ocx is application specific and no other applications use the dll or ocx file, it may remain in the application\u2019s installation folder including the registration from this folder.","title":"DLL or OCX files in application folder"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#odbc_settings","text":"ODBC settings preferably are created using the registry. Using the ODBC tables may cause issues especially for non Microsoft ODBC drivers.","title":"ODBC settings"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#services","text":"Actions (install, uninstall, start and stop) for normal Windows services are incorporated in the MSI package using the services tables. Settings that cannot be created using the services table can be created using the registry table. Services that cannot be handled using the services table, like kernel services, can be handled using custom actions. Sometimes, the application is included with a separate executable to manage the service which can be used in custom actions.","title":"Services"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#validation","text":"ICE validation for MSI packages is done using the cub file: \u201cdarice.cub\u201d. For ICE Warnings best practices are they mostly can be ignored. ICE Errors should be solved in most cases. ICE errors in vendor MSI packagers, not introduced through the changes in an MST file, are not solved. Note: Validation always has to be done using Orca.","title":"Validation"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#transforming_a_vendor_msi","text":"If the original installation source is a MSI, this MSI is to be used as base MSI. Adjustments, configuration, and fine-tuning will be done with a transform file. If possible, an administrative installation point is created before building the MST. The transform file can be used to change the following: ALLUSERS property ROOTDRIVE property REBOOT properties Productname and Title Installation of additional files and registry keys Setting permissions Additional Custom Actions Add/Remove Program settings Etc. Things not to be changed are: Compression ProductVersion ProductCode Manufacturer Schema, i.e. feature/component structure and keypaths Summary stream information: Title, Author, Comments Ice-errors MSI filename Some installations extract an msi package upon installation. For these installations the extracted MSI package is to be used combined with an mst file. The MSI package can be extracted in many cases using the command line: Setup.exe /a. This will create an administrative setup ready for use with an mst file. In some occasions the installation using this extracted MSI directly fails and the setup.exe still must be used for deployment. For some applications, repackaging \u2013 even the vendor MSI \u2013 can be preferred over using the vendor MSI with an MST. This can be the case if the vendor MSI is of poor quality, the vendor MSI cannot be used in an enterprise deployment scenario or when the creation of an mst file is very time consuming. The decision to repackage the MSI is for the packager using common sense, error free deployment and quality guidelines.","title":"Transforming a vendor MSI"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#supported_functionalities","text":"All MSI packages must support the following functionalities: Functionality Description Installation All packages have a default installation. Administrative setup It is possible to create an administrative setup for the msi package. For vendor msi\u2019s, an admistrative setup is created just before the creation of the transform file. The administrative setup is used as source for the transform. When there are difficulties creating an administrative setup, these are mentioned in the TS form. Assigned and Advertised The msi packages can be deployed both \u201cAssigned\u201d and \u201cAdvertised\u201d. Only for vendor msi\u2019s, exceptions can be made. Install-on-demand Advertised applications will be installed during the first call to the application. This is the install on demand principle. Calls to the application can be the applications shortcut or a file-extension for example. Exceptions may be made for vendor msi\u2019s Silent install The msi packages support silent installation Self repair The packages must support self repair. MSI packages installed per machine will install user settings at the first launch of the application. Besides that, missing parts of the application will trigger a repair of the installation at application launch. For vendor MSI packages the self repair behavior is not changed. Elevated privileges The MSI-packages can be installed by users having \u201cElevated privileges\u201d for the application. Deployment The MSI-packages must support deployment using the customers deployment mechanism. Uninstall The packages can be uninstalled using the standard \u201cRemove\u201d action. The uninstallation process must be unattended. At uninstall, the application and, where possible, all known configuration files, temporary files and registry keys used by the application will be removed. All other files will remain because they may contain user data, unless otherwise stated by the application manager and documented in the intake document.","title":"Supported functionalities"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#updates_and_patches","text":"In the intake document the required procedure for updates is documented. The package can be a completely new package or an update for an existing package. When the new package version is an update for an existing application, the previous version is likely to be removed upon installation of the new version. Patched packages should always remove the previous installed package. Using the standard upgrade tables updated packages can be installed regardless of the state of the workstation: When a previous version is found, it is uninstalled, and the new version is installed When no previous version is found, the new package installs just fine The standard MSI procedure is the new package will be installed first and after that, the previous version is uninstalled. If both packages are using the same components (content and guid) this will result in an efficient update process where only new (or updated) components will be installed and obsolete components will be removed. Anything not changing will remain unchanged and untouched. Since it is not always feasible both package versions use the same components (for example in case of a new application version or vendor MSI packages) this cannot be used in all circumstances. If components do not match, parts of the new package may be removed by the uninstall of the previous version resulting in conflicts and unwanted selfrepairs. In this case, the upgrade mechanism still can be used by moving the standard action RemoveExistingProducts upwards in the Install Immediate sequence, just after FindRelatedProducts. Vendor MSI packages which do not support the MSI update mechanism will be updated using the deployment tool. An uninstall command is sent to the workstation prior to the installation of the new version. Checks must support the case where no previous version exists on the workstation.","title":"Updates and patches"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#applications_not_suitable_for_msi_repackaging","text":"Not all applications or installations are suitable for repackaging. The following applications will not be repackaged into MSI packages: Operating Systems Service patches, Service packs and hotfixes on the operating system will not be repackaged, but will be installed using the procedure described by the vendor, typically Microsoft. Microsoft Internet Explorer, Anti Virus software These applications add changes on a low level of the Operating System and will not be repackaged. They will be installed using the procedure described by the vendor. Unsigned Hardware Drivers Drivers can be packaged according to the Microsoft Driver Installation Framework principle. Therefore, the drivers for peripherals and other internal and external devices must be digitally signed (Designed for Windows 10). If a driver requires hardware to install correctly, this hardware must be supplied to the packager before any work can begin \u2013 if not, there is no guarantee that the package will work with the hardware. Vendor specific deployment instructions In some cases, the vendor\u2019s deployment mechanism is preferred over standard repackaging and/or MSI-MST combination. If the vendor prescribes a specific deployment scenario, in most cases companioned with a deployment tool or toolkit, this scenario is preferred over repackaging. Examples for this approach are: Microsoft Office 365 suite Adobe Creative Suites Adobe Acrobat family products AutoCAD family products","title":"Applications not suitable for MSI repackaging"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#testing_an_msi_package","text":"After the packager has finished the package it can be tested using the User test and the Administrator test. The user test typically shows the correct functionality of the application when installed with the package on a representative workplace (desktop, laptop or server). The administrator test can be used to determine if additional (ntfs-) permissions or user rights are necessary so the application can function according to the requirements.","title":"Testing an MSI Package"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#user_test","text":"Start on a clean machine Log on with a user account Start a command prompt in admin context From the admin prompt start a new command prompt in system context (using psexec.exe) Install any prerequisites in system context Install the MSI package in system context Make sure user settings are set when appropriate: import the user settings (HKCU registry keys and user files) for the user account when the package is tested for deployment on a remote desktop VM (on remote desktop servers self-repair is not preferred, user settings are set with other mechanisms like the use of GPO Preferred Settings. If user settings are set using Active Setup log off and login with the test user. Check if user settings are created before the first launch of the application. In all other cases, user settings should be set through MSI self-repair. Run the application using the shortcut or file extension (when appropriate). Test the application according to the test plan in the intake document.","title":"User test"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#admin_test","text":"Start on a clean machine Log on with a user account with local administrator privileges Start a command prompt in admin context Start from the admin prompt a new command prompt in system context Install any prerequisites in system context Install the MSI package in system context Make sure user settings are set when appropriate: Import the user settings (HKCU registry keys and user files) for the user account when the package is tested for deployment on a remote desktop VM (on remote desktop servers self-repair is not preferred, user settings are set with other mechanisms like the use of GPO Preferred Settings). If user settings are set using Active Setup log off and login with the test user. Check if user settings are created before the first launch of the application. In all other cases, user settings should be set through MSI self-repair. Run the application using the shortcut or file extension (when appropriate). Test the application according to the test plan in the intake document.","title":"Admin test"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#msi_naming_parameters","text":"Note: for all parameters spaces (\u2018 \u2019) and underscores (\u2018_\u2019) are not allowed. If, for readability, a separation character is needed, use \u2018-\u2019.","title":"MSI Naming parameters"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#identification","text":"Applications are identified using manufacturer, application name, version and language as described in the paragraph Application and package identification from chapter 'Introduction'.","title":"Identification"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#buildversion","text":"The Buildversion of an MSI package consists of 3 categories: major, minor and revision. The categories are separated by a dot (\u2018.\u2019). Buildversion major.minor.revision major x (0-255) minor y (0-255) revision z (0-65535) Buildversion xxx.yyy.zzzzz (no leading zero\u2019s) Examples: 1.0.0 2.1.3 1.0.11","title":"Buildversion"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#msi_versioning","text":"Regarding the Buildversion the following standards will be used: The first build, based on intake version 1.0, is version 1.0.0. When an MSI package is released for technical acceptation, the number will be freezed. Based on intake 1.0, the first time a package is released for technical tests, it will have number 1.0.0. If the MSI is not accepted after technical or functional tests due to a technical defect in the package, the build version will be raised: 1.0.0 -> 1.0.1. (bases on intake 1.0) If requirements or configurations are changed (this results in a new intake version 1.1), the minor version will be raised, following the intake version: 1.0.1 -> 1.1.0 In case of a lot of changes, for example a completely different installation of the application, the intake will have version 2.0, and the major version of the build number will be raised: 1.1.0 -> 2.0.0. Note: In the MSI package XY always matches the intake version (the first two digits in the version for the intake are used), new releases based on the same intake are created by updating the revision-parameter Z.","title":"MSI Versioning"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#msi_naming_convention","text":"This paragraph describes the naming to be used in MSI packages. The maximum length of the complete package name and package filename is 128 characters (including the file extensions).","title":"MSI Naming convention"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#msi_package_properties","text":"The following fields are properties in MSI packages: ProductName The ProductName of the MSI package is: Manufacturer_ApplicationName_Version_Language_vmajor.minor.revision Examples: Winzip_Winzip_10_EN_v1.0.0 Adobe_Reader_8.1_NL_v2.1.3 Note: When building a MST file the ProductName will be set in the MST. (Product)Version For the (product)version of a MSI package we must stick to the Windows Installer rules: major.minor.revision Example: 1.0.0 2.1.3 1.0.11 Note: When building a MST file the product version will NOT be changed in the MSI or MST. Title The title is identical to the product name: Manufacturer_ApplicationName_Version_Language_vmajor.minor.revision Example: Winzip_Winzip_10_EN_v1.0.0 Adobe_Reader_8.1_NL_v2.1.3 Note: When building a MST file the title will NOT be set in the MST. Manufacturer The Manufacturer of the MSI package is: ManufacturerName Example: Winzip Adobe Note: When building a MST file the manufacturer will NOT be changed in the MSI or MST. Author Author = Sogeti Nederland B.V. Note: When building a MST file the author will NOT be changed in the MSI or MST. Comments In the Comments field the date, packager, and other installed applications (prerequisites) are documented: Date, Name Packager, other apps Example: 10-11-2021, P. Ackager, JRE 1.9 Note: When building an MST file the comments will NOT be changed in the MSI or MST.","title":"MSI Package Properties"},{"location":"_archive/application-portal/packaging/guidelines/msiguidelines/#msi_filenames","text":"The following filenames are applicable when building a MSI package: MSI Filename The MSI filename must comply with the following convention. The name of the MSI package is: ManufacturerName_ApplicationName_Version_Language.msi Example: Winzip_Winzip_10_EN.msi Adobe_Reader_8.1_NL.msi Note: In case of a Vendor MSI with MST the name of the Vendor MSI is not changed. MST Filename The name of the MST files for a desktop package is: *ManufacturerName_ApplicationName_Version_Language_vmajor.minor.revision.mst Example: Winzip_Winzip_10_EN_v1.0.0.mst Adobe_Reader_8.1_NL_v2.1.3.mst","title":"MSI Filenames"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/","text":"MSIX Standards and guidelines \u00b6 The naming convention and some examples for MSIX packages are given in the following paragraphs in this chapter. MSIX Guidelines \u00b6 The following aspects of MSIX packages are important for the behavior, including the possibilities for upgrades and packages for the same application to run side by side. In this chapter, examples are given using the application Agent Ransack, with the following properties: Property Example Manufacturer MythicSoft Application Agent Ransack Version 2951 Language EN Architecture x64 Buildversion 1.0.0 Packagename \u00b6 The Package \u201cName\u201d is stored in the Identity Element of the AppXManifest File. The Package Name is is a string of 3-50 characters and has limitation on the allowed character set. In general, only one package with the same name can exist on a system. Packages with the same name but with different versions are considered to be updates. The definition of the package name is: Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture For example, MythicSoft-AgentRansack-2951-EN-x64 DisplayName \u00b6 The displayname is the user-friendly name for the package. There is no dependency with other properties or behavior. The definition of the display name is: *ApplicationName ApplicationVersion* For example, Agent Ransack 2951 Version \u00b6 The version specifies the build version of a package, in the form a.b.c.d in which the latest digit is reserved by Microsoft. This means, the a.b.c part of the version follows the package build version, d is always 0: Regarding the Buildversion the following standards will be used: The first build, based on intake version 1.0, is version 1.0.0. When an MSIX package is released for technical acceptation, the number will be freezed. Based on intake 1.0, the first time a package is released for technical tests, it will have number 1.0.0. If the MSIX is not accepted after technical or functional tests due to a technical defect in the package, the build version will be raised: 1.0.0 -> 1.0.1. (based on intake 1.0) If requirements or configurations are changed (this results in a new intake version 1.1), the minor version will be raised, following the intake version: 1.0.1 -> 1.1.0 In case of a lot of changes, for example a completely different installation of the application, the intake will have version 2.0, and the major version of the build number will be raised: 1.1.0 -> 2.0.0. Note: In the MSIX package a.b always matches the intake version (the first two digits in the version for the intake are used), new releases based on the same intake are created by updating the revision-parameter c. d always has a value of 0. Publisher \u00b6 The publisher display name is the manufacturer of the application. For Example, MythicSoft Publisher Display Name \u00b6 The publisher display name is the name that corresponds with issuer in the code signing certificate. For example: **CN=Sogeti Nederland B.V., OU=Smart Workspace, O=Sogeti Nederland B.V., STREET=Lange Dreef 17, L=Vianen, S=Utrecht, C=NL** Package Family Name \u00b6 Together with the package name, the package family name is used to make packages unique. The package familyname is the packagename, extended with a hashcode that is based on the certificate used for signing the package. This hash is added automatically. As it is used to uniquely define the package, it is important the same certificate is used to sign the package in case of an update. Any previous version is detected using the package family name. Description \u00b6 This is a free format field, describing the package. The packagename and build version are used in the description: **Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture-vbuildversion** For example, MythicSoft-AgentRansack-2951-EN-x64-v1.0.0 Filename \u00b6 The MSIX Packaging tool automatically suggests a filename for the package, which includes the package family name. Accept this default: **Manufacturer-ApplicationName-ApplicationVersion-Language-app_architecture-MSIX Build-architecture__hashcode.msix** Note that the build version includes 4 tuples, including the reserved one added automatically. For example, **MythicSoft-AgentRansack-2951-EN-x64_1.0.1.0_x64__wrfnxgs55ayay.msix** Timestamp \u00b6 To make sure the package still can be installed after the code signing certificate is expired, time stamping is used. This means that the certificate is validated at the time of package creation, the certificate should be valid at that time. For the timestamp server, we use the value: 'http://timestamp.digicert.com' Installation folder \u00b6 During packaging the application, in the MSIX Packaging Tool you can specify the Target Installation Folder. Handling plugins or add-on packages \u00b6 Some applications have additional setups available that can be installed after the main installation is finished. If the addon is included in the installation procedure, just add it to the package during capture. But sometimes, plug-ins, add-ons or language packs are optional. Users cannot install those add-ons from an MSIX packaged application. If separate add-ons are required, MSIX supports the use of modification packages . Modification packages are similar to what transforms files are for MSI packages: these special packages only contain the differences (modification) over the original package. Modification packages require the main application but can be installed and uninstalled separately, provided the main application package is already installed. You can read more over modification packages here . Handling pre-requisite packages (preview) \u00b6 In App-V we know about Connection Groups in which different App-V sequences can be linked together to form a new virtual environment in which resources (files, registry keys) of both packages can be shared. Without connection groups, the apps in the different sequences cannot access resources in each other environments. By default, an MSIX package also runs in its own virtual container without the ability to access resources in another container. That can be cumbersome when applications depend on each others resources. Of course, adding both apps into a single MSIX package is an option but that can lead to additional work and complexity when many apps use the same dependency. A similar approach as with App-V Connection Groups is now available with the feature MSIX Shared Containers . An XML file is used to define the shared container and to specify which packages are part of it. Using PowerShell commands, the shared container is created, modified and removed. While all packages in the shared container should be installed to work, it is not required all applications in the shared container definition are installed at the time the container is defined. More information on MSIX Shared Containers can be found here .","title":"MSIX Standards and guidelines"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#msix_standards_and_guidelines","text":"The naming convention and some examples for MSIX packages are given in the following paragraphs in this chapter.","title":"MSIX Standards and guidelines"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#msix_guidelines","text":"The following aspects of MSIX packages are important for the behavior, including the possibilities for upgrades and packages for the same application to run side by side. In this chapter, examples are given using the application Agent Ransack, with the following properties: Property Example Manufacturer MythicSoft Application Agent Ransack Version 2951 Language EN Architecture x64 Buildversion 1.0.0","title":"MSIX Guidelines"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#packagename","text":"The Package \u201cName\u201d is stored in the Identity Element of the AppXManifest File. The Package Name is is a string of 3-50 characters and has limitation on the allowed character set. In general, only one package with the same name can exist on a system. Packages with the same name but with different versions are considered to be updates. The definition of the package name is: Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture For example, MythicSoft-AgentRansack-2951-EN-x64","title":"Packagename"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#displayname","text":"The displayname is the user-friendly name for the package. There is no dependency with other properties or behavior. The definition of the display name is: *ApplicationName ApplicationVersion* For example, Agent Ransack 2951","title":"DisplayName"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#version","text":"The version specifies the build version of a package, in the form a.b.c.d in which the latest digit is reserved by Microsoft. This means, the a.b.c part of the version follows the package build version, d is always 0: Regarding the Buildversion the following standards will be used: The first build, based on intake version 1.0, is version 1.0.0. When an MSIX package is released for technical acceptation, the number will be freezed. Based on intake 1.0, the first time a package is released for technical tests, it will have number 1.0.0. If the MSIX is not accepted after technical or functional tests due to a technical defect in the package, the build version will be raised: 1.0.0 -> 1.0.1. (based on intake 1.0) If requirements or configurations are changed (this results in a new intake version 1.1), the minor version will be raised, following the intake version: 1.0.1 -> 1.1.0 In case of a lot of changes, for example a completely different installation of the application, the intake will have version 2.0, and the major version of the build number will be raised: 1.1.0 -> 2.0.0. Note: In the MSIX package a.b always matches the intake version (the first two digits in the version for the intake are used), new releases based on the same intake are created by updating the revision-parameter c. d always has a value of 0.","title":"Version"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#publisher","text":"The publisher display name is the manufacturer of the application. For Example, MythicSoft","title":"Publisher"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#publisher_display_name","text":"The publisher display name is the name that corresponds with issuer in the code signing certificate. For example: **CN=Sogeti Nederland B.V., OU=Smart Workspace, O=Sogeti Nederland B.V., STREET=Lange Dreef 17, L=Vianen, S=Utrecht, C=NL**","title":"Publisher Display Name"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#package_family_name","text":"Together with the package name, the package family name is used to make packages unique. The package familyname is the packagename, extended with a hashcode that is based on the certificate used for signing the package. This hash is added automatically. As it is used to uniquely define the package, it is important the same certificate is used to sign the package in case of an update. Any previous version is detected using the package family name.","title":"Package Family Name"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#description","text":"This is a free format field, describing the package. The packagename and build version are used in the description: **Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture-vbuildversion** For example, MythicSoft-AgentRansack-2951-EN-x64-v1.0.0","title":"Description"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#filename","text":"The MSIX Packaging tool automatically suggests a filename for the package, which includes the package family name. Accept this default: **Manufacturer-ApplicationName-ApplicationVersion-Language-app_architecture-MSIX Build-architecture__hashcode.msix** Note that the build version includes 4 tuples, including the reserved one added automatically. For example, **MythicSoft-AgentRansack-2951-EN-x64_1.0.1.0_x64__wrfnxgs55ayay.msix**","title":"Filename"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#timestamp","text":"To make sure the package still can be installed after the code signing certificate is expired, time stamping is used. This means that the certificate is validated at the time of package creation, the certificate should be valid at that time. For the timestamp server, we use the value: 'http://timestamp.digicert.com'","title":"Timestamp"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#installation_folder","text":"During packaging the application, in the MSIX Packaging Tool you can specify the Target Installation Folder.","title":"Installation folder"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#handling_plugins_or_add-on_packages","text":"Some applications have additional setups available that can be installed after the main installation is finished. If the addon is included in the installation procedure, just add it to the package during capture. But sometimes, plug-ins, add-ons or language packs are optional. Users cannot install those add-ons from an MSIX packaged application. If separate add-ons are required, MSIX supports the use of modification packages . Modification packages are similar to what transforms files are for MSI packages: these special packages only contain the differences (modification) over the original package. Modification packages require the main application but can be installed and uninstalled separately, provided the main application package is already installed. You can read more over modification packages here .","title":"Handling plugins or add-on packages"},{"location":"_archive/application-portal/packaging/guidelines/msixguidelines/#handling_pre-requisite_packages_preview","text":"In App-V we know about Connection Groups in which different App-V sequences can be linked together to form a new virtual environment in which resources (files, registry keys) of both packages can be shared. Without connection groups, the apps in the different sequences cannot access resources in each other environments. By default, an MSIX package also runs in its own virtual container without the ability to access resources in another container. That can be cumbersome when applications depend on each others resources. Of course, adding both apps into a single MSIX package is an option but that can lead to additional work and complexity when many apps use the same dependency. A similar approach as with App-V Connection Groups is now available with the feature MSIX Shared Containers . An XML file is used to define the shared container and to specify which packages are part of it. Using PowerShell commands, the shared container is created, modified and removed. While all packages in the shared container should be installed to work, it is not required all applications in the shared container definition are installed at the time the container is defined. More information on MSIX Shared Containers can be found here .","title":"Handling pre-requisite packages (preview)"},{"location":"_archive/application-portal/packaging/onboarding/","text":"Onboard Application Packaging \u00b6 Introduction \u00b6 The Sogeti Smart Workspace is deployed with standard applications, usually part of the following set: Applications that are part of the Operating System, such as the Edge browser, Notepad, File Explorer and the OneDrive synchronization client. Applications part of the Office 365 suite, such as Outlook, Word, Excel, PowerPoint and Teams. Generic applications, such as 7Zip and Adobe Acrobat Reader. Management software and agents, such as the Nexthink collector package and Liquit agent. Next to these generic applications, organizations make use of applications specific for their organization or business, called Line of Business applications (LOB or LOB-apps). To make sure all applications are available on time and deployed automatically and without errors. applications are repackaged to an automatically deployable format, such as unattended setups, App-V, MSIX or MSI packages. Regardless the underlying technology, the activities to create such deployable applications are generically called packaging . This chapter describes the standard approach for packaging and the aim and result for each of the different steps in the process. Alongside so called win32 apps , we distinguish the following other types of applications: Applications from the Windows Store . Users can install these applications by themselves as Store Apps do not require administrator permissions. Optionally, applications are configured in the Microsoft Store for Business by the organization to whitelist applications. Users only can install applications approved apps from the Store for Business, the consumer store is not available for them. Web- or SaaS apps . These apps generically do not need additional configuration and run directly from a (modern) browser, that is included in the workspace. These applications will not be packaged but to make sure the applications are offered and work according to business and user requirements, an intake for these applications is always done. A well implemented process is key-factor for the success of application deployment in the Sogeti Smart Workspace. Therefore, proper alignment between business and IT and between Sogeti and the customer must be in place during implementation of the process. To help in discussion and explanation to the customer, the following design guide might be helpful. Download a copy in Dutch or English . Onboarding packaging \u00b6 For onboarding, we distinguish between two different, but related activities: Onboarding Sogeti Smart Workspace. In this phase, we speak of the SSW service as a whole. Onboarding packaging. In this phase, we speak of setting up the packaging process for a specific customer. For onboarding the SSW service, all required applications need to be configured for deployment and potentially repackaged to suit requirements and standards. During this phase, the standard packaging process is followed for each application. Activities during onboarding of SSW differ from Run only in volume. Onboarding steps \u00b6 The following figure shows the high-level phasing for the implementation and startup for the packaging activities. This phasing is used for activities during onboarding the Sogeti Smart Workspace. The first step is a crucial one to take as it determines the scope and workload during onboarding. Collect \u00b6 In this phase, the final list of applications is determined. This step is important because the list is required to be used in activity planning and to make sure applications are ready for use on time during SSW implementation. The workspace implementation is normally phased - by department or groups of users - the list is used so the packaging process can connect accordingly. The Collect phase is executed by the customer, or the customer is at least in the lead and Sogeti can support. Determine Application list \u00b6 Setting up the application list is determining which applications are required within the Smart Workspace service and by whom the applications are being used (group, department, division, etc.). Generally, this list is not yet available and setting up a proper, accurate list is not an easy task. To start filling the list, the following sources can be useful but success depends on if they are present, current and available: Configuration Management Database (CMDB). An application list or inventory from the current management tooling, such as Endpoint Manager or SCCM. A new inventory of the installed applications in the current workspace environment using scan tooling or software asset management tooling. Usually, the inventoried list of applications is not yet accurate and contains pollution, in the form of applications that are no longer being used, apps found in different versions or apps installed by end-users themselves and are not managed, etc. Therefore, the list needs cleaning as shown in the following figure: This four step process should result in a clean list of applications, at least accurate enough to start with. Some open ends may be picked up during the project when inventory of applications continues in parallel with the other activities. Inventory. In this step, applications are inventoried. The exact activities depend on the organization. Maybe a list is already present, for example setup before the transition to the new workspace, or an up-to-date CMDB. Is no such list available, it needs to be setup. Technical inventory can be done using the (existing) workspace management tooling or Software Asset Management tooling (SAM, such as Snow). For the packaging process, it is important the list contains detailed meta-data for the applications, such as owner, functional- and technical manager, key-user, etc. These roles are required later on, during rationalization and categorization and during packaging of the applications (intake and test). Categorize. Organizing the application list in different categories, helps the application list to be manageable, simplifies application assignment and helps cleaning up further in the process. Examples of categories are: Categorization based on target group, such as base software, function or role specific or used for a specific business process. Categorization based on application type, such as standalone, client/server, web app, shortcut, etc. Categorization based on integration with other applications, such as plugins, or apps that combine into a suite of applications, such as AutoCAD or Adobe Cloud. Categorization based on functionality, for example core office apps, development tool, financial application, etc. Rationalize. Rationalization of the application list aims at removing doubles (including multiple versions of the same app and apps with similar functionality), unused applications and unwanted applications from the total list. To achieve this, the following requirements must be met: the project must have mandate and consensus to make decisions in removal of apps. the project members must have proper knowledge of the application portfolio, application functionality and/or usage and the business processes the apps support. Prioritize. When the application list is (nearly) complete, prioritizing the applications determines when the packages for the applications should be available and in which order packages should be build. This makes sure packages are available when required for deployment according to the deployment schedule. The other way around - the application list, combined with packaging progress, can be used to determine which users, groups or departments can be schedules for roll out. Setup \u00b6 In this phase, the packaging process is setup and implemented for the customer and focusses on making mutual agreements. Starting point is the standard Sogeti packaging process, added with the following activities: Define project resourcing. Based on the application list, the required resources are estimated. This not only involves resources for building the packages but also concerns business users for delivering information, application software- and media and capacity to test and accept the applications after packaging is complete. Finalize packaging standards and guidelines. This is more a formal, but still an important step in the process. Sogeti will bring in the packaging guidelines for Sogeti Smart Workspace, which should be known to everyone involved in the application deployment process. Depending on the project scope, the scope of packaging guidelines might be changed. For example, if packaging for a remote workspace is required. Agree on planning. Based on the project plan for role out and the application list, detailed planning for the packaging activities is established. Generally, this is a mutual agreement between Sogeti and client project management. Setup process agreements. This step is all about process agreements for the following subjects: Addition and removal of applications to and from the list. (Re-)planning of applications and priorities on the list. The way software and documentation is delivered, including technical implementation (for example an ftp server, specific folder on a file share, etc). Procedure for planning and invitation for intake, test and acceptance. Involvement of application owners, managers and/or key-users. Involvement of intake, package and test engineers, including on- and off-boarding. Escalation procedure to solve generic issues and issues related to the workspace solution and its architecture. It is advisable to acknowledge and communicate procedures and agreements with all stake holders, for example in a kick-off meeting. This meeting should also address the packaging process, discussed in the following paragraph, to establish good understanding, awareness and clear expectations. This helps in a smooth packaging process later on during the project. Run \u00b6 When all prerequisites have been met - the application list is (almost) complete, agreements have been made and the packaging team is installed, including stakeholders from the business - the packaging activities can be started. The process is described in detail here . Below you can find a summary of the steps in the process and where the responsibility lies. Every package will go through the steps mentioned: steps 1 (request) and 6 (deployment): these steps have a Business/client focus. The client determines which application is required and appoints users who need the particular application. steps 2 (intake) and 5 (acceptance): these steps have a joined focus. The intake and acceptance test will be carried out together. The client delivers information, Sogeti will execute or facilitate in these steps. steps 3 (build) and 4 (test): these steps have a Sogeti focus. The activities in these steps will be managed and executed under Sogeti's responsibility and by Sogeti.","title":"Onboard Application Packaging"},{"location":"_archive/application-portal/packaging/onboarding/#onboard_application_packaging","text":"","title":"Onboard Application Packaging"},{"location":"_archive/application-portal/packaging/onboarding/#introduction","text":"The Sogeti Smart Workspace is deployed with standard applications, usually part of the following set: Applications that are part of the Operating System, such as the Edge browser, Notepad, File Explorer and the OneDrive synchronization client. Applications part of the Office 365 suite, such as Outlook, Word, Excel, PowerPoint and Teams. Generic applications, such as 7Zip and Adobe Acrobat Reader. Management software and agents, such as the Nexthink collector package and Liquit agent. Next to these generic applications, organizations make use of applications specific for their organization or business, called Line of Business applications (LOB or LOB-apps). To make sure all applications are available on time and deployed automatically and without errors. applications are repackaged to an automatically deployable format, such as unattended setups, App-V, MSIX or MSI packages. Regardless the underlying technology, the activities to create such deployable applications are generically called packaging . This chapter describes the standard approach for packaging and the aim and result for each of the different steps in the process. Alongside so called win32 apps , we distinguish the following other types of applications: Applications from the Windows Store . Users can install these applications by themselves as Store Apps do not require administrator permissions. Optionally, applications are configured in the Microsoft Store for Business by the organization to whitelist applications. Users only can install applications approved apps from the Store for Business, the consumer store is not available for them. Web- or SaaS apps . These apps generically do not need additional configuration and run directly from a (modern) browser, that is included in the workspace. These applications will not be packaged but to make sure the applications are offered and work according to business and user requirements, an intake for these applications is always done. A well implemented process is key-factor for the success of application deployment in the Sogeti Smart Workspace. Therefore, proper alignment between business and IT and between Sogeti and the customer must be in place during implementation of the process. To help in discussion and explanation to the customer, the following design guide might be helpful. Download a copy in Dutch or English .","title":"Introduction"},{"location":"_archive/application-portal/packaging/onboarding/#onboarding_packaging","text":"For onboarding, we distinguish between two different, but related activities: Onboarding Sogeti Smart Workspace. In this phase, we speak of the SSW service as a whole. Onboarding packaging. In this phase, we speak of setting up the packaging process for a specific customer. For onboarding the SSW service, all required applications need to be configured for deployment and potentially repackaged to suit requirements and standards. During this phase, the standard packaging process is followed for each application. Activities during onboarding of SSW differ from Run only in volume.","title":"Onboarding packaging"},{"location":"_archive/application-portal/packaging/onboarding/#onboarding_steps","text":"The following figure shows the high-level phasing for the implementation and startup for the packaging activities. This phasing is used for activities during onboarding the Sogeti Smart Workspace. The first step is a crucial one to take as it determines the scope and workload during onboarding.","title":"Onboarding steps"},{"location":"_archive/application-portal/packaging/onboarding/#collect","text":"In this phase, the final list of applications is determined. This step is important because the list is required to be used in activity planning and to make sure applications are ready for use on time during SSW implementation. The workspace implementation is normally phased - by department or groups of users - the list is used so the packaging process can connect accordingly. The Collect phase is executed by the customer, or the customer is at least in the lead and Sogeti can support.","title":"Collect"},{"location":"_archive/application-portal/packaging/onboarding/#determine_application_list","text":"Setting up the application list is determining which applications are required within the Smart Workspace service and by whom the applications are being used (group, department, division, etc.). Generally, this list is not yet available and setting up a proper, accurate list is not an easy task. To start filling the list, the following sources can be useful but success depends on if they are present, current and available: Configuration Management Database (CMDB). An application list or inventory from the current management tooling, such as Endpoint Manager or SCCM. A new inventory of the installed applications in the current workspace environment using scan tooling or software asset management tooling. Usually, the inventoried list of applications is not yet accurate and contains pollution, in the form of applications that are no longer being used, apps found in different versions or apps installed by end-users themselves and are not managed, etc. Therefore, the list needs cleaning as shown in the following figure: This four step process should result in a clean list of applications, at least accurate enough to start with. Some open ends may be picked up during the project when inventory of applications continues in parallel with the other activities. Inventory. In this step, applications are inventoried. The exact activities depend on the organization. Maybe a list is already present, for example setup before the transition to the new workspace, or an up-to-date CMDB. Is no such list available, it needs to be setup. Technical inventory can be done using the (existing) workspace management tooling or Software Asset Management tooling (SAM, such as Snow). For the packaging process, it is important the list contains detailed meta-data for the applications, such as owner, functional- and technical manager, key-user, etc. These roles are required later on, during rationalization and categorization and during packaging of the applications (intake and test). Categorize. Organizing the application list in different categories, helps the application list to be manageable, simplifies application assignment and helps cleaning up further in the process. Examples of categories are: Categorization based on target group, such as base software, function or role specific or used for a specific business process. Categorization based on application type, such as standalone, client/server, web app, shortcut, etc. Categorization based on integration with other applications, such as plugins, or apps that combine into a suite of applications, such as AutoCAD or Adobe Cloud. Categorization based on functionality, for example core office apps, development tool, financial application, etc. Rationalize. Rationalization of the application list aims at removing doubles (including multiple versions of the same app and apps with similar functionality), unused applications and unwanted applications from the total list. To achieve this, the following requirements must be met: the project must have mandate and consensus to make decisions in removal of apps. the project members must have proper knowledge of the application portfolio, application functionality and/or usage and the business processes the apps support. Prioritize. When the application list is (nearly) complete, prioritizing the applications determines when the packages for the applications should be available and in which order packages should be build. This makes sure packages are available when required for deployment according to the deployment schedule. The other way around - the application list, combined with packaging progress, can be used to determine which users, groups or departments can be schedules for roll out.","title":"Determine Application list"},{"location":"_archive/application-portal/packaging/onboarding/#setup","text":"In this phase, the packaging process is setup and implemented for the customer and focusses on making mutual agreements. Starting point is the standard Sogeti packaging process, added with the following activities: Define project resourcing. Based on the application list, the required resources are estimated. This not only involves resources for building the packages but also concerns business users for delivering information, application software- and media and capacity to test and accept the applications after packaging is complete. Finalize packaging standards and guidelines. This is more a formal, but still an important step in the process. Sogeti will bring in the packaging guidelines for Sogeti Smart Workspace, which should be known to everyone involved in the application deployment process. Depending on the project scope, the scope of packaging guidelines might be changed. For example, if packaging for a remote workspace is required. Agree on planning. Based on the project plan for role out and the application list, detailed planning for the packaging activities is established. Generally, this is a mutual agreement between Sogeti and client project management. Setup process agreements. This step is all about process agreements for the following subjects: Addition and removal of applications to and from the list. (Re-)planning of applications and priorities on the list. The way software and documentation is delivered, including technical implementation (for example an ftp server, specific folder on a file share, etc). Procedure for planning and invitation for intake, test and acceptance. Involvement of application owners, managers and/or key-users. Involvement of intake, package and test engineers, including on- and off-boarding. Escalation procedure to solve generic issues and issues related to the workspace solution and its architecture. It is advisable to acknowledge and communicate procedures and agreements with all stake holders, for example in a kick-off meeting. This meeting should also address the packaging process, discussed in the following paragraph, to establish good understanding, awareness and clear expectations. This helps in a smooth packaging process later on during the project.","title":"Setup"},{"location":"_archive/application-portal/packaging/onboarding/#run","text":"When all prerequisites have been met - the application list is (almost) complete, agreements have been made and the packaging team is installed, including stakeholders from the business - the packaging activities can be started. The process is described in detail here . Below you can find a summary of the steps in the process and where the responsibility lies. Every package will go through the steps mentioned: steps 1 (request) and 6 (deployment): these steps have a Business/client focus. The client determines which application is required and appoints users who need the particular application. steps 2 (intake) and 5 (acceptance): these steps have a joined focus. The intake and acceptance test will be carried out together. The client delivers information, Sogeti will execute or facilitate in these steps. steps 3 (build) and 4 (test): these steps have a Sogeti focus. The activities in these steps will be managed and executed under Sogeti's responsibility and by Sogeti.","title":"Run"},{"location":"_archive/application-portal/packaging/process/","text":"Sogeti Smart Workspace packaging process \u00b6 This chapter describes the standard process used for packaging applications that are deployed in SSW. Different types of packages are being used, such as MSIX, MSI or unattended installations. The process for each is similar, using the following phases: Request \u00b6 In the onboarding phase, a request is processed by adding the application to the list of required applications, combined with the proper priority. After onboarding, in the Run phase, new requests for packages are initiated by a change request in Service Now. Requests for business applications are always initiated by the customers. Requests for applications that are part of the SSW solution, such as agents, are initiated by the Sogeti run team. Intake \u00b6 An application expert (functional- or technical application manager, key- or senior user), together with the (Sogeti-)intake engineer, install and configure the application on a reference computer. All application properties, characteristics and dependencies, and the activities carried out during installation and configuration of the application are documented in the Intake Document . The intake is finalized with both a technical and a functional application test, which are also described in the intake document. The application source media and the intake document form the Application Dossier which is handed over to the next step in the process. The customer is responsible for delivering \u00b6 the source media and, when applicable, test cases, documents and files documentation, used as input for the intake test and acceptance of the application and intake document Sogeti is responsible for \u00b6 configuring and preparation of the intake computer installation and configuration of the application, instructed by the application expert documenting all information provided during the intake collecting the source media The following items are included in the intake document \u00b6 Meta data (such as name, version, application expert contact information) Application type and proposed target platform (web/SaaS, local, remote) Dependencies (other software, hardware, network- or other infrastructure components) Update strategy in the application lifecycle (auto-update, new package request) Installation steps Configuration steps Technical and functional test Build \u00b6 Using the intake document and the packaging guidelines, a Sogeti package engineer constructs and builds a package. The engineer tests the installation and deployment of the package, followed by a technical test. This test is based on standard tests and optionally, additional tests described in the intake document. The output of the build step is: package project files compiled package and/or deployment script package release document The package release document describes the way how the package is constructed, special actions taken during packaging and deviations from standards (if any). The package also describes the application test and if there were issues, considered as known issues (for example caused by the environment in which the package is build and tested). Finally, the release document contains information used to configure the application in the deployment environment and/or application portal (installation command, detection rules, user specific configuration, etc.) Technical test and QA \u00b6 A second package engineer, other than the engineer that build the package, checks and tests the package. This Quality Assurance (QA) step is added to the process to make sure packages are build according to the packaging guidelines and intake document and is ready to offer to the client for acceptance. QA is under responsibility of Sogeti and the results are documented in the package release document. Acceptance test \u00b6 A Sogeti engineer configures the package in the deployment environment (Intune and/or the Application Portal) and tests the deployment: proper installation when applicable, the upgrade of a previous version successful launch in the application portal technical test proper un-installation / removal This test is carried out on a test device in the production environment. Only after the application is successfully tested, the application is offered to a customer test user. Typically, this test user is appointed by the customer and can also be the (functional or technical) application manager, senior- or key-user. The test user confirms the application installs and works successfully, according to what has been documented during intake. The acceptance test can result in one of the following outcomes: The package installs and works according to the requirements, as documented in the intake and is accepted. The next step is to Deploy the package. The package does not install or work as expected by the tester but works according the specifications in the intake document. Before acceptance, a new intake must be carried out. The next step is Intake where the intake document is changed, the process is continued from there. The package does not install or work according to the specifications in the intake document. Before acceptance, a new package must be build based on the existing intake document. The next step is Build where the package is corrected or a new package is created, the process is continued from there. During acceptance: Sogeti is responsible for a first (technical) deployment and application test. The customer is responsible to assign a test user, test and accept the package. Sogeti is responsible for assigning the application to the proper test user. Deployment \u00b6 The package is accepted and is now ready for deployment to end users or end user devices: Generic applications \u2013 applicable for all devices or end-users - will be offered to all users/devices. Optionally, deployment can be staged, using different groups in the deployment (such as pilot, test, production). Sogeti engineers monitor deployment success and take actions for remediation in case of issues. Specific applications \u2013 used by a limited group of users \u2013 will be targeted to an Azure Active Directory group. This group is provided and managed by the customer (add/remove users). Sogeti engineers monitor deployment success and take actions for remediation in case of issues. Optionally, deployment can be staged by adding sets of users to the target group during deployment phase. When an issue with the package is found after deployment, a new intake will be planned (package is build according the intake document) or a fix is created (package not build according intake). During run, package rework after initial deployment will be handled through the change process, starting with intake or build, depending the root cause.","title":"Sogeti Smart Workspace packaging process"},{"location":"_archive/application-portal/packaging/process/#sogeti_smart_workspace_packaging_process","text":"This chapter describes the standard process used for packaging applications that are deployed in SSW. Different types of packages are being used, such as MSIX, MSI or unattended installations. The process for each is similar, using the following phases:","title":"Sogeti Smart Workspace packaging process"},{"location":"_archive/application-portal/packaging/process/#request","text":"In the onboarding phase, a request is processed by adding the application to the list of required applications, combined with the proper priority. After onboarding, in the Run phase, new requests for packages are initiated by a change request in Service Now. Requests for business applications are always initiated by the customers. Requests for applications that are part of the SSW solution, such as agents, are initiated by the Sogeti run team.","title":"Request"},{"location":"_archive/application-portal/packaging/process/#intake","text":"An application expert (functional- or technical application manager, key- or senior user), together with the (Sogeti-)intake engineer, install and configure the application on a reference computer. All application properties, characteristics and dependencies, and the activities carried out during installation and configuration of the application are documented in the Intake Document . The intake is finalized with both a technical and a functional application test, which are also described in the intake document. The application source media and the intake document form the Application Dossier which is handed over to the next step in the process.","title":"Intake"},{"location":"_archive/application-portal/packaging/process/#the_customer_is_responsible_for_delivering","text":"the source media and, when applicable, test cases, documents and files documentation, used as input for the intake test and acceptance of the application and intake document","title":"The customer is responsible for delivering"},{"location":"_archive/application-portal/packaging/process/#sogeti_is_responsible_for","text":"configuring and preparation of the intake computer installation and configuration of the application, instructed by the application expert documenting all information provided during the intake collecting the source media","title":"Sogeti is responsible for"},{"location":"_archive/application-portal/packaging/process/#the_following_items_are_included_in_the_intake_document","text":"Meta data (such as name, version, application expert contact information) Application type and proposed target platform (web/SaaS, local, remote) Dependencies (other software, hardware, network- or other infrastructure components) Update strategy in the application lifecycle (auto-update, new package request) Installation steps Configuration steps Technical and functional test","title":"The following items are included in the intake document"},{"location":"_archive/application-portal/packaging/process/#build","text":"Using the intake document and the packaging guidelines, a Sogeti package engineer constructs and builds a package. The engineer tests the installation and deployment of the package, followed by a technical test. This test is based on standard tests and optionally, additional tests described in the intake document. The output of the build step is: package project files compiled package and/or deployment script package release document The package release document describes the way how the package is constructed, special actions taken during packaging and deviations from standards (if any). The package also describes the application test and if there were issues, considered as known issues (for example caused by the environment in which the package is build and tested). Finally, the release document contains information used to configure the application in the deployment environment and/or application portal (installation command, detection rules, user specific configuration, etc.)","title":"Build"},{"location":"_archive/application-portal/packaging/process/#technical_test_and_qa","text":"A second package engineer, other than the engineer that build the package, checks and tests the package. This Quality Assurance (QA) step is added to the process to make sure packages are build according to the packaging guidelines and intake document and is ready to offer to the client for acceptance. QA is under responsibility of Sogeti and the results are documented in the package release document.","title":"Technical test and QA"},{"location":"_archive/application-portal/packaging/process/#acceptance_test","text":"A Sogeti engineer configures the package in the deployment environment (Intune and/or the Application Portal) and tests the deployment: proper installation when applicable, the upgrade of a previous version successful launch in the application portal technical test proper un-installation / removal This test is carried out on a test device in the production environment. Only after the application is successfully tested, the application is offered to a customer test user. Typically, this test user is appointed by the customer and can also be the (functional or technical) application manager, senior- or key-user. The test user confirms the application installs and works successfully, according to what has been documented during intake. The acceptance test can result in one of the following outcomes: The package installs and works according to the requirements, as documented in the intake and is accepted. The next step is to Deploy the package. The package does not install or work as expected by the tester but works according the specifications in the intake document. Before acceptance, a new intake must be carried out. The next step is Intake where the intake document is changed, the process is continued from there. The package does not install or work according to the specifications in the intake document. Before acceptance, a new package must be build based on the existing intake document. The next step is Build where the package is corrected or a new package is created, the process is continued from there. During acceptance: Sogeti is responsible for a first (technical) deployment and application test. The customer is responsible to assign a test user, test and accept the package. Sogeti is responsible for assigning the application to the proper test user.","title":"Acceptance test"},{"location":"_archive/application-portal/packaging/process/#deployment","text":"The package is accepted and is now ready for deployment to end users or end user devices: Generic applications \u2013 applicable for all devices or end-users - will be offered to all users/devices. Optionally, deployment can be staged, using different groups in the deployment (such as pilot, test, production). Sogeti engineers monitor deployment success and take actions for remediation in case of issues. Specific applications \u2013 used by a limited group of users \u2013 will be targeted to an Azure Active Directory group. This group is provided and managed by the customer (add/remove users). Sogeti engineers monitor deployment success and take actions for remediation in case of issues. Optionally, deployment can be staged by adding sets of users to the target group during deployment phase. When an issue with the package is found after deployment, a new intake will be planned (package is build according the intake document) or a fix is created (package not build according intake). During run, package rework after initial deployment will be handled through the change process, starting with intake or build, depending the root cause.","title":"Deployment"},{"location":"_archive/application-portal/packaging/technology/msix/","text":"MSIX Package format explained \u00b6 MSIX is the modern application deployment platform released by Microsoft. It can be seen as the successor of other package solutions for modern Windows devices, replacing App-V, MSI and AppX. But remember, these other technologies are still being used and work side by side with MSIX. The ability to deploy and use MSIX packages is built into the Windows 10 operating system and no further configuration is required. Like modern apps (AppX), deployment can take place system wide or per user. By default, MSIX packages do not require privileged (admin) permissions to install, with the exception for packages that install (system) services. The content and structure of MSIX packages is very similar to App-X packages. The package can be unzipped with a file archiver (such as 7-Zip) to view the content of the package. However, re-zipping it does not produce a working package . The typical content of an MSIX package is shown in the following example: Packagers with experience on App-V will notice some similarities with App-V 5 packages as well, such as the VFS folder, registry.dat file and manifest. An important aspect is that MSIX packages run in an isolated container to which other processes do not have access. Similar, but not the same as App-V sequences. Code Signing packages \u00b6 Another important prerequisite of MSIX packages is that they need to be code signed before a package can be installed on the device. This can be done using a self-signed certificate, a public certificate or a device guard signing certificate from the Windows Store for Business. Signing packages is integrated in the package tooling but can also be done using PowerShell. Things that do not work (as expected) \u00b6 As mentioned, with MSIX packages run in an isolated, virtualized container. That means that not all aspects of applications are supported and will work. Similar to App-V, applications that are tight to the operating system, such as drivers and anti-virus software, cannot be converted to MSIX packages. But there are some other things that need to be in mind: Shortcuts in MSIX do not support parameters or working folders. If your application requires one or both of these aspects, custom configuration is required. Environment variables, created by the application installer, are not supported. Applications do not have write permissions to the application folders, what is the case in App-V packages. Some of these \u2018flaws\u2019 can be worked around, using the Package Support Framework \u2013 as explained in the following paragraph. Package tooling \u00b6 Similar to the App-V 5 sequencer, Microsoft provides a tool to build your own MSIX packages. This tool, MSIX Packaging Tool , must be installed from the Windows Store. Running the tool requires administrative privileges. Besides that, the following services should be configured as below: Windows Update must be enabled 1 Windows Search should be disabled Windows Defender should be disabled There are also commercial tools available that can build and update MSIX packages, such as InfoPulse PACE, Advanced Installer and Flexera Admin Studio. Advanced Installer provides a free packaging tool for MSIX that can be installed from the Windows Store. You need to sign up for a (free) license to use it here . This tool can be used as an alternative when a package that is built with the MSIX Packaging Tool does not (properly) work. There are some differences with the MSIX packaging tool that are worth mentioning here: Applications are launched through a stub process, using the install folder as working directory by default. Startup parameters for Apps work out of the box. Some basic options for the Package Support Framework (PSF) are built in (explained later in this chapter). You need to add icons for your apps yourself. File extensions may work better when the package is captured using Advanced Installer. Please note that an MSIX package built with Advanced Installer can be edited later on with the MSIX Packaging Tool, just like any other MSIX package. However, the package can contain some features specifically used (and created by) Advanced installer, such as a custom implementation of the PSF. Therefore, it is better to continue working in Advanced Installer. The project files are also part of the deliverables for the package in that case. Package Support Framework \u00b6 The Package Support Framework is an open source project that provides solutions for a number of aspects that do not work with the standard tooling. It can help increasing the success rate by providing fixes for applications that do not follow modern best practices (remember AppCompat and shims?). The PSF is a set of dll files providing fixes for common errors, accompanied by json files that configure the way the fix is to be applied and to what executable(s), process, files or folders in the package. The most common errors that may be fixed using PSF are: App Working Directory. App Launcher parameter(s). Write errors from the App. (some) Support for environment variables. Applying PSF fixes requires the following steps: Adding the PSF dll file(s) for the fixes that need to be applied. Adding the PSF Launcher application, that is launched instead of the Windows app so the fix can be applied. Adding the fix configuration json file to the package, with application specific parameters for the applied fix or fixes. Further information about the Package Support Framework can be found here . There is also a free tool available that helps in applying PSF fixes semi-automatically. This tool, TMUrgent-PSFTooling , is installed on the packaging machine from the Windows Store. During packaging - right after the installation is completed and just before finalizing the capture \u2013 the PSFTool is launched to find and suggest optional fixes that can be applied automatically. The tool is frequently updated using the latest features of the PSF project and recently is using a fork of the project. Handling plugins or add-on packages \u00b6 Some applications have additional setups available that can be installed after the main installation is finished. If the addon is included in the installation procedure, just add it to the package during capture. But sometimes, plug-ins, add-ons or language packs are optional. Users cannot install those add-ons from an MSIX packaged application. If separate add-ons are required, MSIX supports the use of modification packages . Modification packages are similar to what transforms files are for MSI packages: these special packages only contain the differences (modification) over the original package. Modification packages require the main application but can be installed and uninstalled separately, provided the main application package is already installed. You can read more over modification packages here . Handling pre-requisite packages (preview) \u00b6 In App-V we know about Connection Groups in which different App-V sequences can be linked together to form a new virtual environment in which resources (files, registry keys) of both packages can be shared. Without connection groups, the apps in the different sequences cannot access resources in each other environments. By default, an MSIX package also runs in its own virtual container whitout the ability to access resources in another container. That can be cumbersome when applications depend on each others resources. Of course, adding both apps into a single MSIX package is an option but that can lead to additional work and complexity when many apps use the same dependency. A similar approach as with App-V Connection Groups is now available with the feature MSIX Shared Containers . An XML file is used to define the shared container and to specify which packages are part of it. Using PowerShell commands, the shared container is created, modified and removed. While all packages in the shared container should be installed to work, it is not required all applications in the shared container definition are installed at the time the container is defined. More information on MSIX Shared Containers can be found here . During packaging, the packaging tool will disable Windows Update after initiation. \u21a9","title":"MSIX Package format explained"},{"location":"_archive/application-portal/packaging/technology/msix/#msix_package_format_explained","text":"MSIX is the modern application deployment platform released by Microsoft. It can be seen as the successor of other package solutions for modern Windows devices, replacing App-V, MSI and AppX. But remember, these other technologies are still being used and work side by side with MSIX. The ability to deploy and use MSIX packages is built into the Windows 10 operating system and no further configuration is required. Like modern apps (AppX), deployment can take place system wide or per user. By default, MSIX packages do not require privileged (admin) permissions to install, with the exception for packages that install (system) services. The content and structure of MSIX packages is very similar to App-X packages. The package can be unzipped with a file archiver (such as 7-Zip) to view the content of the package. However, re-zipping it does not produce a working package . The typical content of an MSIX package is shown in the following example: Packagers with experience on App-V will notice some similarities with App-V 5 packages as well, such as the VFS folder, registry.dat file and manifest. An important aspect is that MSIX packages run in an isolated container to which other processes do not have access. Similar, but not the same as App-V sequences.","title":"MSIX Package format explained"},{"location":"_archive/application-portal/packaging/technology/msix/#code_signing_packages","text":"Another important prerequisite of MSIX packages is that they need to be code signed before a package can be installed on the device. This can be done using a self-signed certificate, a public certificate or a device guard signing certificate from the Windows Store for Business. Signing packages is integrated in the package tooling but can also be done using PowerShell.","title":"Code Signing packages"},{"location":"_archive/application-portal/packaging/technology/msix/#things_that_do_not_work_as_expected","text":"As mentioned, with MSIX packages run in an isolated, virtualized container. That means that not all aspects of applications are supported and will work. Similar to App-V, applications that are tight to the operating system, such as drivers and anti-virus software, cannot be converted to MSIX packages. But there are some other things that need to be in mind: Shortcuts in MSIX do not support parameters or working folders. If your application requires one or both of these aspects, custom configuration is required. Environment variables, created by the application installer, are not supported. Applications do not have write permissions to the application folders, what is the case in App-V packages. Some of these \u2018flaws\u2019 can be worked around, using the Package Support Framework \u2013 as explained in the following paragraph.","title":"Things that do not work (as expected)"},{"location":"_archive/application-portal/packaging/technology/msix/#package_tooling","text":"Similar to the App-V 5 sequencer, Microsoft provides a tool to build your own MSIX packages. This tool, MSIX Packaging Tool , must be installed from the Windows Store. Running the tool requires administrative privileges. Besides that, the following services should be configured as below: Windows Update must be enabled 1 Windows Search should be disabled Windows Defender should be disabled There are also commercial tools available that can build and update MSIX packages, such as InfoPulse PACE, Advanced Installer and Flexera Admin Studio. Advanced Installer provides a free packaging tool for MSIX that can be installed from the Windows Store. You need to sign up for a (free) license to use it here . This tool can be used as an alternative when a package that is built with the MSIX Packaging Tool does not (properly) work. There are some differences with the MSIX packaging tool that are worth mentioning here: Applications are launched through a stub process, using the install folder as working directory by default. Startup parameters for Apps work out of the box. Some basic options for the Package Support Framework (PSF) are built in (explained later in this chapter). You need to add icons for your apps yourself. File extensions may work better when the package is captured using Advanced Installer. Please note that an MSIX package built with Advanced Installer can be edited later on with the MSIX Packaging Tool, just like any other MSIX package. However, the package can contain some features specifically used (and created by) Advanced installer, such as a custom implementation of the PSF. Therefore, it is better to continue working in Advanced Installer. The project files are also part of the deliverables for the package in that case.","title":"Package tooling"},{"location":"_archive/application-portal/packaging/technology/msix/#package_support_framework","text":"The Package Support Framework is an open source project that provides solutions for a number of aspects that do not work with the standard tooling. It can help increasing the success rate by providing fixes for applications that do not follow modern best practices (remember AppCompat and shims?). The PSF is a set of dll files providing fixes for common errors, accompanied by json files that configure the way the fix is to be applied and to what executable(s), process, files or folders in the package. The most common errors that may be fixed using PSF are: App Working Directory. App Launcher parameter(s). Write errors from the App. (some) Support for environment variables. Applying PSF fixes requires the following steps: Adding the PSF dll file(s) for the fixes that need to be applied. Adding the PSF Launcher application, that is launched instead of the Windows app so the fix can be applied. Adding the fix configuration json file to the package, with application specific parameters for the applied fix or fixes. Further information about the Package Support Framework can be found here . There is also a free tool available that helps in applying PSF fixes semi-automatically. This tool, TMUrgent-PSFTooling , is installed on the packaging machine from the Windows Store. During packaging - right after the installation is completed and just before finalizing the capture \u2013 the PSFTool is launched to find and suggest optional fixes that can be applied automatically. The tool is frequently updated using the latest features of the PSF project and recently is using a fork of the project.","title":"Package Support Framework"},{"location":"_archive/application-portal/packaging/technology/msix/#handling_plugins_or_add-on_packages","text":"Some applications have additional setups available that can be installed after the main installation is finished. If the addon is included in the installation procedure, just add it to the package during capture. But sometimes, plug-ins, add-ons or language packs are optional. Users cannot install those add-ons from an MSIX packaged application. If separate add-ons are required, MSIX supports the use of modification packages . Modification packages are similar to what transforms files are for MSI packages: these special packages only contain the differences (modification) over the original package. Modification packages require the main application but can be installed and uninstalled separately, provided the main application package is already installed. You can read more over modification packages here .","title":"Handling plugins or add-on packages"},{"location":"_archive/application-portal/packaging/technology/msix/#handling_pre-requisite_packages_preview","text":"In App-V we know about Connection Groups in which different App-V sequences can be linked together to form a new virtual environment in which resources (files, registry keys) of both packages can be shared. Without connection groups, the apps in the different sequences cannot access resources in each other environments. By default, an MSIX package also runs in its own virtual container whitout the ability to access resources in another container. That can be cumbersome when applications depend on each others resources. Of course, adding both apps into a single MSIX package is an option but that can lead to additional work and complexity when many apps use the same dependency. A similar approach as with App-V Connection Groups is now available with the feature MSIX Shared Containers . An XML file is used to define the shared container and to specify which packages are part of it. Using PowerShell commands, the shared container is created, modified and removed. While all packages in the shared container should be installed to work, it is not required all applications in the shared container definition are installed at the time the container is defined. More information on MSIX Shared Containers can be found here . During packaging, the packaging tool will disable Windows Update after initiation. \u21a9","title":"Handling pre-requisite packages (preview)"},{"location":"_archive/application-portal/packaging/technology/msixcompat/","text":"MSIX Compatibility reference \u00b6 Not all applications can be succesfully packaged to MSIX. In order to determine if your application is suitable to be repackaged to MSIX, this page shows a list of applications for which the result is known, based on experiences from the SSW packaging team. In this table, the packaging tool used is mentioned (MPT for the MSIX Packaging Tool and AIE for Advanced Installer Express) and wether or not it was neccessary to use fixes from the Packaging Support FrameWork (PSF). Note that AIE already applies some PSF fixes by default, such as the working directory, commandline parameters and file redirection. This may lead to different results compared to using the MPT. Application Tested with Result Needs PSF Remarks Agent Ransack 2019 (2951) x64 MPT Ok No Alterra Synbiosys 3.0.16 x64 MPT Ok No After creating the package, the file 'SynBiosSysNederland.exe' needs to be removed and added back manually because the timestamp is updated during packaging. The app then starts mentioning the app is corrupt Alterra Waternood 3.0.1 x64 MPT Ok No After creating the package, the file 'watersnood.exe' needs to be removed and added back manually because the timestamp is updated during packaging. The app then starts mentioning the app is corrupt Archi-Win 4.8.1 x64 MPT Ok No When archi is launched, an error about JNI is shown. This happens because vcruntime140.dll cannot be found. Solved this by adding the dll file to the Windows\\system32 folder in the package (placing this dll file in the packageroot folder works as well) BizagiModeler 3.8 x64 MPT Ok No FileZilla3.34.0 x64 MPT Ok No FreeCommander Portable x86 AIE Ok Yes The Settings folder must be redirected using the FileRedirection fixup FreeCommander Portable x86 MPT Ok Yes The Settings folder must be redirected using the FileRedirection fixup Gimp 2.8.6 x64 AIE Ok No Advanced Installer version works when dll files from app folder are copied to Windows\\SysWoW64 folder or Windows\\System32. When not done, app launches with errors concerning dll files not found. Gimp 2.8.6 x64 MPT Ok No succesfull with this approach: Install in C:\\GIMP2 with PVAD to C:\\GIMP2\\bin and move subfolders from \\VFS\\AppVPackageDrive\\GIMP2 to Packageroot Google Earth 7.3.3 x64 MPT Ok No Special attention to the approach is required as the download is a web installer. Grab the package from the temp folder, and use that for packaging Google Earth as MSIX package. Irfanview 4.58 x64 MPT Ok No Language packs need to be included in the package or added using modification packages KeePass 2.x x64 MPT NOk Does not work as MSIX packaged application. See here Notepad++ 8.x x64 MPT Ok No Plugins need to be included in the package or added later using modification packages. Updates need to be disabled using the config file. The shell extension ('Edit with Notepad++') does not work. paint.net 4.3.2 x64 MPT Ok No Special attention to the approach is required as the download is a web installer. Grab the package from the temp folder, which is an msi, during manual installation. Modify the MSI with the properties AUTOUPDATES=0 and BETAUPDATES=0 to disable updates in the application. PaintShop Pro X2 x64 MPT Ok No Use PVAD path, start app during monitoring, remove references to VC2005 components from the package (VC2005 therefor is a prereq). Remove HKCU\\Software\\Corel from the package, these keys are created during first launch. PDFSam 4.2.4 x64 AIE Ok No PDFSam 4.2.4 x64 MPT Ok No Putty 0.76 x64 MPT Ok Yes The logfile (putty.log) might need redirection VLC Mediaplayer 3.0.x x64 AIE Ok No VLC Mediaplayer 3.0.x x64 MPT Ok Yes FileRedirection Fixup is required for AppData settings WinSCP 5.19.3 x64 MPT Ok No Workrave 1.10.48 x86 MPT Ok No Autostart on Windows login must be configured in the manifest.xml file, see here","title":"MSIX Compatibility reference"},{"location":"_archive/application-portal/packaging/technology/msixcompat/#msix_compatibility_reference","text":"Not all applications can be succesfully packaged to MSIX. In order to determine if your application is suitable to be repackaged to MSIX, this page shows a list of applications for which the result is known, based on experiences from the SSW packaging team. In this table, the packaging tool used is mentioned (MPT for the MSIX Packaging Tool and AIE for Advanced Installer Express) and wether or not it was neccessary to use fixes from the Packaging Support FrameWork (PSF). Note that AIE already applies some PSF fixes by default, such as the working directory, commandline parameters and file redirection. This may lead to different results compared to using the MPT. Application Tested with Result Needs PSF Remarks Agent Ransack 2019 (2951) x64 MPT Ok No Alterra Synbiosys 3.0.16 x64 MPT Ok No After creating the package, the file 'SynBiosSysNederland.exe' needs to be removed and added back manually because the timestamp is updated during packaging. The app then starts mentioning the app is corrupt Alterra Waternood 3.0.1 x64 MPT Ok No After creating the package, the file 'watersnood.exe' needs to be removed and added back manually because the timestamp is updated during packaging. The app then starts mentioning the app is corrupt Archi-Win 4.8.1 x64 MPT Ok No When archi is launched, an error about JNI is shown. This happens because vcruntime140.dll cannot be found. Solved this by adding the dll file to the Windows\\system32 folder in the package (placing this dll file in the packageroot folder works as well) BizagiModeler 3.8 x64 MPT Ok No FileZilla3.34.0 x64 MPT Ok No FreeCommander Portable x86 AIE Ok Yes The Settings folder must be redirected using the FileRedirection fixup FreeCommander Portable x86 MPT Ok Yes The Settings folder must be redirected using the FileRedirection fixup Gimp 2.8.6 x64 AIE Ok No Advanced Installer version works when dll files from app folder are copied to Windows\\SysWoW64 folder or Windows\\System32. When not done, app launches with errors concerning dll files not found. Gimp 2.8.6 x64 MPT Ok No succesfull with this approach: Install in C:\\GIMP2 with PVAD to C:\\GIMP2\\bin and move subfolders from \\VFS\\AppVPackageDrive\\GIMP2 to Packageroot Google Earth 7.3.3 x64 MPT Ok No Special attention to the approach is required as the download is a web installer. Grab the package from the temp folder, and use that for packaging Google Earth as MSIX package. Irfanview 4.58 x64 MPT Ok No Language packs need to be included in the package or added using modification packages KeePass 2.x x64 MPT NOk Does not work as MSIX packaged application. See here Notepad++ 8.x x64 MPT Ok No Plugins need to be included in the package or added later using modification packages. Updates need to be disabled using the config file. The shell extension ('Edit with Notepad++') does not work. paint.net 4.3.2 x64 MPT Ok No Special attention to the approach is required as the download is a web installer. Grab the package from the temp folder, which is an msi, during manual installation. Modify the MSI with the properties AUTOUPDATES=0 and BETAUPDATES=0 to disable updates in the application. PaintShop Pro X2 x64 MPT Ok No Use PVAD path, start app during monitoring, remove references to VC2005 components from the package (VC2005 therefor is a prereq). Remove HKCU\\Software\\Corel from the package, these keys are created during first launch. PDFSam 4.2.4 x64 AIE Ok No PDFSam 4.2.4 x64 MPT Ok No Putty 0.76 x64 MPT Ok Yes The logfile (putty.log) might need redirection VLC Mediaplayer 3.0.x x64 AIE Ok No VLC Mediaplayer 3.0.x x64 MPT Ok Yes FileRedirection Fixup is required for AppData settings WinSCP 5.19.3 x64 MPT Ok No Workrave 1.10.48 x86 MPT Ok No Autostart on Windows login must be configured in the manifest.xml file, see here","title":"MSIX Compatibility reference"},{"location":"_archive/application-portal/packaging/templates/","text":"Templates for packaging \u00b6 Here you can find the latest templates for documents used in the packaging process. Intake Documents Download Intake document (English) Intake document (Dutch) Intake document for web apps (English) Package Release Documents Package release document MSI (Dutch) Package release document MSIX (Dutch)","title":"Templates for packaging"},{"location":"_archive/application-portal/packaging/templates/#templates_for_packaging","text":"Here you can find the latest templates for documents used in the packaging process. Intake Documents Download Intake document (English) Intake document (Dutch) Intake document for web apps (English) Package Release Documents Package release document MSI (Dutch) Package release document MSIX (Dutch)","title":"Templates for packaging"},{"location":"_archive/device-management/","text":"Introduction Device Management \u00b6 Device Management takes care of centralized, cloud-based management of corporate client devices. Management of corporate policies and restrictions for employee owned devices connecting to the Smart Workspace, is the second objective for the Device Management module. In the module, devices are managed using Microsoft Endpoint Manager , which is part of the 'Enterprise Management & Security' (EM+S) subscription and also is included in Microsoft 365 F3, E3 and E5 subscriptions. Microsoft Endpoint Manager (Intune) is the main component in Device Management. The following activities are carried out: Onboarding (enrolling) devices into management Configuration and deployment of (security) policies and configurations Update management Application deployment Within the service, the main scope is Windows laptops and (shared) desktops. Additionally, both company and personal owned mobile devices (Android and iOS smartphones and tablets) can be included. Off course we want to give our customers and their users the best experience we can offer. To make sure user experience is at (or above) expected level and to monitor experience over time, we use the module User Experience Monitoring . This module provides us with insights on experience and health, enabling improvements and remediation. This module is included by default in Device Management. On top of the base service, additional modules can be added upon request by the customer: Endpoint Privilege Access Management . This module removes the need for local administrators, offering users additional permissions through a secure, centrally managed solution instead. Cloud Printer Management . This module removes the need for print servers (on-premise or in the cloud), replacing them with a cloud hosted solution. Corporate printers are managed in a central web based console, for both administrators and end users.","title":"Introduction Device Management"},{"location":"_archive/device-management/#introduction_device_management","text":"Device Management takes care of centralized, cloud-based management of corporate client devices. Management of corporate policies and restrictions for employee owned devices connecting to the Smart Workspace, is the second objective for the Device Management module. In the module, devices are managed using Microsoft Endpoint Manager , which is part of the 'Enterprise Management & Security' (EM+S) subscription and also is included in Microsoft 365 F3, E3 and E5 subscriptions. Microsoft Endpoint Manager (Intune) is the main component in Device Management. The following activities are carried out: Onboarding (enrolling) devices into management Configuration and deployment of (security) policies and configurations Update management Application deployment Within the service, the main scope is Windows laptops and (shared) desktops. Additionally, both company and personal owned mobile devices (Android and iOS smartphones and tablets) can be included. Off course we want to give our customers and their users the best experience we can offer. To make sure user experience is at (or above) expected level and to monitor experience over time, we use the module User Experience Monitoring . This module provides us with insights on experience and health, enabling improvements and remediation. This module is included by default in Device Management. On top of the base service, additional modules can be added upon request by the customer: Endpoint Privilege Access Management . This module removes the need for local administrators, offering users additional permissions through a secure, centrally managed solution instead. Cloud Printer Management . This module removes the need for print servers (on-premise or in the cloud), replacing them with a cloud hosted solution. Corporate printers are managed in a central web based console, for both administrators and end users.","title":"Introduction Device Management"},{"location":"_archive/device-management/cloud-printer-management/","text":"Cloud Printer Management \u00b6 The Sogeti Smart Workspace Cloud Printer Management service is a centrally managed solution for management of your company printers. The service removes the need to have print servers installed in your network, thus lowering management, maintenance, and operational efforts. After initial setup and configuration, users print to the printers in the network from their Windows devices, using the printer agent that is part of the service. With the current hardware specifications in mind, spooling of print jobs will occur locally on the client, saving hardware costs for print servers. Optionally, the service provides options for a self-service portal and mobile printing for smartphones and tablets.","title":"Cloud Printer Management"},{"location":"_archive/device-management/cloud-printer-management/#cloud_printer_management","text":"The Sogeti Smart Workspace Cloud Printer Management service is a centrally managed solution for management of your company printers. The service removes the need to have print servers installed in your network, thus lowering management, maintenance, and operational efforts. After initial setup and configuration, users print to the printers in the network from their Windows devices, using the printer agent that is part of the service. With the current hardware specifications in mind, spooling of print jobs will occur locally on the client, saving hardware costs for print servers. Optionally, the service provides options for a self-service portal and mobile printing for smartphones and tablets.","title":"Cloud Printer Management"},{"location":"_archive/device-management/endpoint-manager/","text":"Microsoft Endpoint Manager - Introduction \u00b6","title":"Microsoft Endpoint Manager - Introduction"},{"location":"_archive/device-management/endpoint-manager/#microsoft_endpoint_manager_-_introduction","text":"","title":"Microsoft Endpoint Manager - Introduction"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/","text":"Hello for Business \u00b6 The default configuration for Windows in Sogeti Smart Workspace makes use of Hello for Business (HfB). HfB replaces passwords by using strong two factor authentication, based on PIN or biometric gestures, such as fingerprint or facial recognition. A new credential is created on the device which ties the HfB credential to the specific device on which the credential is created. During configuration of HfB on the device by the user, a trusted relation between the device and Azure Active Directory is setup so the device can be used, next to the PIN or biometric gesture, as a second factor of authentication. The most important aspects for HfB are: Replaces the user password. During device login, the user credentials, including password, are no longer sent and checked with the identity provider (Azure Active Directory) for verification and authentication so the credentials cannot be intercepted. Instead, an asymmetric key pair is used that is created when the user configures HfB, which is used for encryption of the authentication request. The PIN code is tied to the device, without the device the PIN code is useless to login with. Should a third party intercept the PIN code, the specific device is required to use the PIN. This is not the case when passwords are being used, which can be used on other devices. Using biometric gestures mitigates this risk of stolen credentials even further. The PIN code is safely stored in the TPM chip on the device. By using HfB to login on an Azure AD joined device, users have Single Sign On (SSO) experience to apps that use Azure Active Directory as their identity provider, such as Office 365. Configuration \u00b6 To configure Hello for Business, an identity Protection profile is created in Endpoint Manager (Intune) and assigned to SSW users. Setting up HfB, by configuring at least a PIN code, is forced in first login after the policy is applied. The following table shows the most important configuration settings and the proposed values in Sogeti Smart Workspace: Configuration Proposed value Enable HfB Enabled Minimum PIN length 6 characters Lowercase letters in PIN Allowed Alternative: Not Allowed or Required Uppercase letters in PIN Allowed Alternative: Not Allowed or Required Special characters in PIN Allowed Alternative: Not Allowed or Required PIN expiration (days) Not configured Alternative: Never or x number of days (1-730) PIN history Not Configured Alternative: No or x number of revisions (1-50) Enable PIN Recovery Enabled Use of TPM chip Enabled Alternative: Not configured. TPM is preferred but not used on devices that do not have a TPM Use of biometric gesture Allowed Use enhanced anti-spoofing, when available Enabled The following two settings are important when HfB is also configured for on-premise resources, in a hybrid configuration: Configuration Proposed value Certificate for on-premise resources Not Configured Use security keys for sign-in Not Configured} The SSW default is to configure HfB in a cloud only configuration. End-user experience \u00b6 At the end stage of the Autopilot device enrollment in Sogeti Smart Workspace, at first login, the user is forced to setup HfB by specification of a PIN code: On clicking Ok the user receives an MFA challenge: The user must configure a PIN code: Configuration of HfB is complete. The user can use the PIN code instead of the password to login into the device. Optionally, the user can configure to use a biometric gesture when this is supported by the device hardware. When users login with a PIN code, these credentials will also be used when other, on-premise resources are connected such as file shares and printers. The default setup for HfB is a cloud implementation. Because HfB is not configured for on-premise (AD connected) resources, authentication to these workloads will fail. When a login screen is presented, users can change the authentication to use the password instead of the PIN code and then connection will succeed. Solutions to mitigate this behavior are: Implementation of Hybrid HfB, using certificates or security keys. Use the application portal to connect to printers and file shares. In the App Portal's package configuration, the use of on-premise credentials is configured. users are asked to fill in their credentials on first use which are then stored in the app portal's credential vault. These credentials are subsequently used to setup the connection. Behavior when wrong credentials (PIN, biometric gesture or password) is used \u00b6 To protect against unauthorized access, the following measures are configured: Setting up a PIN code is mandatory, even when a biometric gesture is configured later on. The PIN can be used to fallback on, when the biometric gesture does not work. Next to using HfB to login, users still can use username and password. While users are advised not to use the password, the password can be used as fallback when HfB does not work. It is also possible to block the use of passwords through an Intune policy. This is not configured by default and must be negotiated with the customer. Using the option \u2018I forgot my PIN\u2019 in the login screen, users can restore a forgotten PIN code. Users need to re-authenticate to Azure Active Directory and when that is successful, a new PIN code can be configured. By default policies, repeated use of invalid HfB or password credentials is protected. When user's repeatedly use the wrong password or PIN, the user is warned that wrong credentials are used to many times and that the device will restart when the next attempt is again not valid. The device will then be forced to restart in Bitlocker recovery mode. The Bitlocker recovery key, which is stored in Azure Active Directory and can be retrieved by Support, is required to unlock the device. The default setting is to lock the device after 4 failed attempts but this can be changed through an Intune policy between 4 and 16 times. Additional configuration \u00b6 Optionally, the following additional features can be configured in combination with HfB: Multi factor Unlock Dynamic Lock To enable these features, depending on the used configuration it might be required that users connect their phone to the Windows device using Bluetooth. Because this is not achievable in all organizations, these features are not enabled by default. However, Sogeti recommends to consider and use these features whenever possible. Multi factor Unlock \u00b6 Using this feature, next to the PIN code or biometric gesture, a second factor is required at device login. This can be one of the following options: PIN, but only when a PIN code is not already used for login. Trusted signal. A trusted signal is delivered by one of the following sources: Network (\u2018IPConfig\u2019). With this option, the IP-address, Gateway, DHCP server and/or DNS server is used to verify the connection with the device. When verified, this is used as a valid factor. IPConfig can be used with IPv4 and IPv6 addresses. Bluetooth. With this option, in sight presence of a Bluetooth connected device is required to use as the second factor for device login. Most likely, this is the user's mobile phone. Before the feature can be used, the user must configure a bluetooth connection between the Windows device and the phone. When the device is out of range, login to the device with HfB will not succeed. WiFi: Using the Wi-Fi signal, the (\u2018corporate\u2019) Wireless network can be configured as a second factor. This means, login is enabled when the device is connected with the configured wireless network. A network can be configured based on the following characteristics: SSID (mandatory) SSID, the access point's mac-address (optional) Security, the type of security and encryption configuration that is used on the Wi-Fi connection, one of the following: Open WEP WPA Personal WPA Enterprise WPA2 Personal WPA2 Enterprise TrustedRootCA, thumbprint of the root certificate that is used for the Wi-Fi connection (optional) Sig_quality, The connection's minimum signal quality (0-100) in order to mark as trusted (mandatory). User Experience \u00b6 Normally, enabling Multi factor unlock will not impact user experience, provided the user has connected a phone and the phone is within range of the device. It might take a very small moment before the phone's signal is picked up but the login flow is similar to not using Multi factor unlock. However, without a proper signal from the connected device, users are unable to login. Once logged in, the connected device (phone) is no longer used for Multi Factor Unlock. Except when the user logs off and wants to re-login into the device, presence of the connected device is again required. Configuration in Sogeti Smart Workspace \u00b6 The configuration for Multi Factor unlock requires organization specific configuration, using an Intune configuration profile. The Sogeti Smart workspace solution aims at enabling the use independent of location and time. Configuring Multi Factor Unlock based on the companies Wi-Fi profile makes this hard to achieve. Therefore, the use of a connected phone through Bluetooth is the default option. Dynamic Lock \u00b6 Dynamic lock is a Windows feature with which the device is automatically locked when a signal of a connected device is out of range. For example when the user leaves the workplace and takes along the connected phone. Dynamic Lock is configured using a custom Intune profile. After enabling (and forcing) the feature, the user needs to connect a phone to the device. After the connection is established, Dynamic Lock is active. The device will automatically lock when the Bluetooth signal from the phone is out of range.","title":"Hello for Business"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#hello_for_business","text":"The default configuration for Windows in Sogeti Smart Workspace makes use of Hello for Business (HfB). HfB replaces passwords by using strong two factor authentication, based on PIN or biometric gestures, such as fingerprint or facial recognition. A new credential is created on the device which ties the HfB credential to the specific device on which the credential is created. During configuration of HfB on the device by the user, a trusted relation between the device and Azure Active Directory is setup so the device can be used, next to the PIN or biometric gesture, as a second factor of authentication. The most important aspects for HfB are: Replaces the user password. During device login, the user credentials, including password, are no longer sent and checked with the identity provider (Azure Active Directory) for verification and authentication so the credentials cannot be intercepted. Instead, an asymmetric key pair is used that is created when the user configures HfB, which is used for encryption of the authentication request. The PIN code is tied to the device, without the device the PIN code is useless to login with. Should a third party intercept the PIN code, the specific device is required to use the PIN. This is not the case when passwords are being used, which can be used on other devices. Using biometric gestures mitigates this risk of stolen credentials even further. The PIN code is safely stored in the TPM chip on the device. By using HfB to login on an Azure AD joined device, users have Single Sign On (SSO) experience to apps that use Azure Active Directory as their identity provider, such as Office 365.","title":"Hello for Business"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#configuration","text":"To configure Hello for Business, an identity Protection profile is created in Endpoint Manager (Intune) and assigned to SSW users. Setting up HfB, by configuring at least a PIN code, is forced in first login after the policy is applied. The following table shows the most important configuration settings and the proposed values in Sogeti Smart Workspace: Configuration Proposed value Enable HfB Enabled Minimum PIN length 6 characters Lowercase letters in PIN Allowed Alternative: Not Allowed or Required Uppercase letters in PIN Allowed Alternative: Not Allowed or Required Special characters in PIN Allowed Alternative: Not Allowed or Required PIN expiration (days) Not configured Alternative: Never or x number of days (1-730) PIN history Not Configured Alternative: No or x number of revisions (1-50) Enable PIN Recovery Enabled Use of TPM chip Enabled Alternative: Not configured. TPM is preferred but not used on devices that do not have a TPM Use of biometric gesture Allowed Use enhanced anti-spoofing, when available Enabled The following two settings are important when HfB is also configured for on-premise resources, in a hybrid configuration: Configuration Proposed value Certificate for on-premise resources Not Configured Use security keys for sign-in Not Configured} The SSW default is to configure HfB in a cloud only configuration.","title":"Configuration"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#end-user_experience","text":"At the end stage of the Autopilot device enrollment in Sogeti Smart Workspace, at first login, the user is forced to setup HfB by specification of a PIN code: On clicking Ok the user receives an MFA challenge: The user must configure a PIN code: Configuration of HfB is complete. The user can use the PIN code instead of the password to login into the device. Optionally, the user can configure to use a biometric gesture when this is supported by the device hardware. When users login with a PIN code, these credentials will also be used when other, on-premise resources are connected such as file shares and printers. The default setup for HfB is a cloud implementation. Because HfB is not configured for on-premise (AD connected) resources, authentication to these workloads will fail. When a login screen is presented, users can change the authentication to use the password instead of the PIN code and then connection will succeed. Solutions to mitigate this behavior are: Implementation of Hybrid HfB, using certificates or security keys. Use the application portal to connect to printers and file shares. In the App Portal's package configuration, the use of on-premise credentials is configured. users are asked to fill in their credentials on first use which are then stored in the app portal's credential vault. These credentials are subsequently used to setup the connection.","title":"End-user experience"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#behavior_when_wrong_credentials_pin_biometric_gesture_or_password_is_used","text":"To protect against unauthorized access, the following measures are configured: Setting up a PIN code is mandatory, even when a biometric gesture is configured later on. The PIN can be used to fallback on, when the biometric gesture does not work. Next to using HfB to login, users still can use username and password. While users are advised not to use the password, the password can be used as fallback when HfB does not work. It is also possible to block the use of passwords through an Intune policy. This is not configured by default and must be negotiated with the customer. Using the option \u2018I forgot my PIN\u2019 in the login screen, users can restore a forgotten PIN code. Users need to re-authenticate to Azure Active Directory and when that is successful, a new PIN code can be configured. By default policies, repeated use of invalid HfB or password credentials is protected. When user's repeatedly use the wrong password or PIN, the user is warned that wrong credentials are used to many times and that the device will restart when the next attempt is again not valid. The device will then be forced to restart in Bitlocker recovery mode. The Bitlocker recovery key, which is stored in Azure Active Directory and can be retrieved by Support, is required to unlock the device. The default setting is to lock the device after 4 failed attempts but this can be changed through an Intune policy between 4 and 16 times.","title":"Behavior when wrong credentials (PIN, biometric gesture or password) is used"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#additional_configuration","text":"Optionally, the following additional features can be configured in combination with HfB: Multi factor Unlock Dynamic Lock To enable these features, depending on the used configuration it might be required that users connect their phone to the Windows device using Bluetooth. Because this is not achievable in all organizations, these features are not enabled by default. However, Sogeti recommends to consider and use these features whenever possible.","title":"Additional configuration"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#multi_factor_unlock","text":"Using this feature, next to the PIN code or biometric gesture, a second factor is required at device login. This can be one of the following options: PIN, but only when a PIN code is not already used for login. Trusted signal. A trusted signal is delivered by one of the following sources: Network (\u2018IPConfig\u2019). With this option, the IP-address, Gateway, DHCP server and/or DNS server is used to verify the connection with the device. When verified, this is used as a valid factor. IPConfig can be used with IPv4 and IPv6 addresses. Bluetooth. With this option, in sight presence of a Bluetooth connected device is required to use as the second factor for device login. Most likely, this is the user's mobile phone. Before the feature can be used, the user must configure a bluetooth connection between the Windows device and the phone. When the device is out of range, login to the device with HfB will not succeed. WiFi: Using the Wi-Fi signal, the (\u2018corporate\u2019) Wireless network can be configured as a second factor. This means, login is enabled when the device is connected with the configured wireless network. A network can be configured based on the following characteristics: SSID (mandatory) SSID, the access point's mac-address (optional) Security, the type of security and encryption configuration that is used on the Wi-Fi connection, one of the following: Open WEP WPA Personal WPA Enterprise WPA2 Personal WPA2 Enterprise TrustedRootCA, thumbprint of the root certificate that is used for the Wi-Fi connection (optional) Sig_quality, The connection's minimum signal quality (0-100) in order to mark as trusted (mandatory).","title":"Multi factor Unlock"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#user_experience","text":"Normally, enabling Multi factor unlock will not impact user experience, provided the user has connected a phone and the phone is within range of the device. It might take a very small moment before the phone's signal is picked up but the login flow is similar to not using Multi factor unlock. However, without a proper signal from the connected device, users are unable to login. Once logged in, the connected device (phone) is no longer used for Multi Factor Unlock. Except when the user logs off and wants to re-login into the device, presence of the connected device is again required.","title":"User Experience"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#configuration_in_sogeti_smart_workspace","text":"The configuration for Multi Factor unlock requires organization specific configuration, using an Intune configuration profile. The Sogeti Smart workspace solution aims at enabling the use independent of location and time. Configuring Multi Factor Unlock based on the companies Wi-Fi profile makes this hard to achieve. Therefore, the use of a connected phone through Bluetooth is the default option.","title":"Configuration in Sogeti Smart Workspace"},{"location":"_archive/device-management/endpoint-manager/instructions/hello4b/#dynamic_lock","text":"Dynamic lock is a Windows feature with which the device is automatically locked when a signal of a connected device is out of range. For example when the user leaves the workplace and takes along the connected phone. Dynamic Lock is configured using a custom Intune profile. After enabling (and forcing) the feature, the user needs to connect a phone to the device. After the connection is established, Dynamic Lock is active. The device will automatically lock when the Bluetooth signal from the phone is out of range.","title":"Dynamic Lock"},{"location":"_archive/device-management/endpoint-manager/instructions/import-ssw/","text":"Import SSW Standards \u00b6","title":"Import SSW Standards"},{"location":"_archive/device-management/endpoint-manager/instructions/import-ssw/#import_ssw_standards","text":"","title":"Import SSW Standards"},{"location":"_archive/device-management/endpoint-manager/instructions/waas/","text":"Windows As A Service \u00b6 Quality and Feature updates \u00b6 With the release of Windows 10, Microsoft introduced a new strategy to update and upgrade the operating system during its lifecycle. Before Windows 10, security updates and fixes where offered as separate update packages from which IT Admins could choose which of them were deployed and which were not. Additionally, when devices were not updated for a longer period, for instance when newly deployed from an outdated custom image, a long list of Windows updates must be additionally installed and sometimes with several reboots in between. Windows 1o introduced Quality updates which are inclusive and cumulative, meaning only one update package per month, without options to skip one or more fixes, and the latest Quality update package includes all previous updates (when still relevant). This strategy has the following important advantages: All devices with the same patch level are equally configured. This minimizes the risk for issues caused by missing updates or devices configured differently. For IT admins and end-users, the strategy is more simple and less time consuming, having to install only one single update package to update the OS with the latest fixes and security updates. Next to patches or fixes that improve Windows 10 quality, Microsoft also releases so called 'Feature Updates'. These upgrades contain functional improvements and new features that previous would be offered through a new Windows version or Service Pack (Windows XP -> Windows XP SP1 -> Windows XP SP2 -> Windows Vista -> Windows 7 -> Windows 8). Contrary to the approach for previous Windows versions, Feature updates are released more frequently (2 times a year instead of once per 3 or 4 years) and are typically smaller in size. Users can benefit from improvements and new features earlier while the impact and change is smaller then before. Implementation of Feature Updates therefore is quicker and easier to adopt. Note that from the beginning of Feature Update 21H2, feature updates are released annually instead of semi-annual, in the second half of the calendar year. After release, the feature update is supported for 18 months (Pro) or 30 months (Enterprise). With the update and upgrade strategy for Windows 10, updates are more frequent and smaller in size (Feature update) and using cumulative Quality updates, easier to deploy. Both contribute to stability and adoption of improvements and new features. Just what you can expect from a service, hence Windows as a Service. Windows 11 \u00b6 With the release of Windows 10, Microsoft announced there would be no new Windows version released in the future. This 'promise' is not kept as Microsoft released Windows 11 in the fall of 2021. The update strategy for Windows 11 is similar to what we now have for Windows 10: monthly Quality updates and one, single Feature update in the second half of the calendar year. However, the feature update is supported for 24 months (Pro) or 36 months (Enterprise). The upgrade path from Windows 10 to Windows 11 is very much like a feature update for Windows 10 (inplace upgrade), both in user experience as technical approach. Windows 10 is maintained side by side with Windows 11 and is supported till the end of 2025. Deployment of updates \u00b6 Sogeti Smart Workspace makes use of Windows Update for Business. Updates are downloaded using the Windows Update Service over the internet at the time of release and automatically installed on end user devices. Before an update is released for production by Microsoft, the update is tested thoroughly by Microsoft internally and the Windows Insider community. Feedback and experiences are used to improve the quality and stability before updates are general available. Customers can choose between the following update channels that differ in release moment and support terms. The choice for an update channel is per device and set once so subsequent updates are offered from the selected channel. At this moment in time, the following channels exist, for both Windows 10 and Windows 11: Insider channel . Windows 10 devices ontvangen pre-releases van nieuwe Windows 10 builds. Issues en feedback kunnen daarmee vroegtijdig worden opgemerkt en verzameld met als doel de uiteindelijke productie versie te verbeteren. Het insider channel is primair bedoeld voor test omgevingen, niet voor productie. Zogenaamde early adopters kunnen ervoor kiezen hun device met deze versie in te (laten) richten maar dan voor niet kritische systemen met geen of geringe impact op de bedrijfsvoering wanneer er iets fout gaat. Dit channel ontvangt in de regel frequenter (vaker dan 2 keer per jaar) nieuwe releases. Semi-annual channel . Devices in dit channel ontvangen updates wanneer ze door Microsoft als productie rijpe versie worden vrijgegeven, normaliter tweemaal per jaar. Veruit de meeste computers zullen geconfigureerd worden om gebruik te maken van dit channel. \u2022 Long Term service release. Dit channel is bedoelt voor bedrijfskritische systemen met een grote impact op de bedrijfsvoering wanneer een upgrade issues veroorzaakt. Voor deze versie worden geen Feature Upgrades uitgegeven maar wel de maandelijkse Quality updates. Eens in de twee tot drie jaar verschijnt een nieuwe versie voor dit channel die met een in-place upgrade kan worden doorgevoerd. Deze versie heeft tot 10 jaar ondersteuning van Microsoft. Het lijkt aantrekkelijk om deze release te gebruiken omdat er minder (grote) wijzigingen worden aangeboden. Sogeti adviseert in de Smart Workspace oplossing terughoudend te zijn met deze keuze omdat die vernieuwing tegen gaat. Daarnaast biedt deze versie minder functionaliteit, bijvoorbeeld door het ontbreken van ondersteuning van applicaties uit de Microsoft Store (de zogenaamde modern apps). Om de impact voor de organisatie te verkleinen, wordt de installatie van updates binnen de organisatie gespreid doorgevoerd. Dat geschiedt met zogenaamde Update Rings. Een Update Ring is een verzameling devices waarvoor naast het service channel het moment en gedrag voor installatie is geconfigureerd. Standaard worden meerdere Update Rings gedefinieerd om zo de installatie van Quality Updates en Feature Upgrades te kunnen spreiden. De eigenschappen voor deze update rings zijn binnen Smart Workspace gelijk, met uitzondering van het moment van installatie. Binnen Windows Update for Buisness kan ervoor worden gekozen om het moment van installatie na release uit te stellen, dit wordt \u2018deferal\u2019 genoemd. Hoewel het mogelijk is om ook de installatie van Quality Updates uit te stellen, wordt dit binnen Smart Workspace in geen van de update rings toegepast. De praktijk leert dat issues met Quality Updates uitzonderlijk zijn. De verwachtte schade door uitstel van een update, door een vulnerability, schatten we groter in dan die veroorzaakt door issues met de update zelf. De volgende drie update rings worden geconfigureerd, allen gebruik makend van het Semi-Annual Channel voor Windows Updates: \u2022 Pilot : Computers in deze update ring krijgen zowel Quality als Feature Updates direct na release aangeboden door de deferal voor beiden op 0 dagen in te stellen. \u2022 Test : Computers in deze update ring krijgen Quality Updates direct na release en Feature Updates 15 dagen na release. Dit geeft de organisatie 15 dagen de tijd om eerst in de pilot groep te testen. \u2022 Productie : Computers in deze update ring krijgen Quality Updates direct na release en Feature Updates 30 dagen na release. Dit geeft de organisatie 30 dagen de tijd om eerst in de pilot groep te testen, waarvan de laatste 15 dagen tevens in de test groep. Wanneer het fout gaat In uitzonderlijke gevallen kan het voorkomen dat er issues optreden bij het doorvoeren van updates. Dat zien we dan met name bij Feature Updates. Op dat moment kan aanvullend worden ingegrepen door de installatie van Quality Updates of Feature Updates te pauzeren. Deze pauzering is niet afhankelijk van de deferal en treedt in nadat de computer de pauze instelling heeft ontvangen. De pauzering wordt automatisch na 35 dagen opgeheven, maar kan zowel worden verlengd als eerder worden opgeheven. De pauzering van updates wordt per update ring afzonderlijk geactiveerd of opgeheven. Optimalisatie van de download Afhankelijk van het type van de update, Quality Updates of Feature Updates, kan de grootte van de updates oplopen van enkele megabytes tot gigabytes. Om bandbreedte gebruik te verminderen, beschikt Windows 10 over mogelijkheden om de download te optimaliseren, de Delivery Optimization service. Het is nog steeds nodig dat er verbinding is met het internet, maar reeds gedownloade updates zijn via een lokale cache op het device beschikbaar voor andere computers in het netwerk. Het is dan niet nodig dat iedere computer de updates afzonderlijk gaat downloaden. Eigenschappen van deze cache en beschikbare bandbreedte wordt centraal in Smart Workspace geconfigureerd, afhankelijk van het netwerk bij de klant en in overeenstemming met de netwerk specialisten van de klant. Naast Windows Updates, maken ook de applicatie installatie van applicaties via Microsoft Endpoint Manager (Intune) en het automatisch update mechanisme van Office 365 applicaties gebruik van Delivery Optimization. Aanvullende updates Naast updates voor het Windows 10 operating system, kan worden geconfigureerd dat ook updates van drivers en andere Microsoft toepassingen worden aangeboden. In de standaard Smart Workspace configuratie worden beide opties geactiveerd. Updates voor Edge (Chromium) en Office 365 Apps Zowel de nieuwe, modern versie van Edge als de Office 365 apps maken, net als Windows 10, gebruik van verschillende update channels waarin verschillende versies worden aangeboden. Hoewel de Office 365 apps strikt genomen geen onderdeel uitmaken van het operating systeem, zijn ze normaal gesproken opgenomen in de standaard werkplek. Omdat ook het update mechanisme sterk overeenkomt met die van Windows 10, worden ze in dit informatieblad beschreven. De lifecycle voor overige applicaties is beschreven in het informatieblad \u2018Application Lifecycle\u2019. Voor Edge bestaan de volgende channels: Channel Toepassing Update frequentie Stable Generiek gebruik / productie (SSW standaard) Eens per 6 weken Beta Pre-release om te testen binnen de organisatie Eens per 6 weken Dev Voor planning en ontwikkeling, met name wanneer in-house web applicaties worden gebouwd en onderhouden. Deze versie biedt geen support. Wekelijks Canary Experimenteel, niet geteste of ondersteunde versie Dagelijks Het update channel wordt ingesteld bij de installatie van Edge, in Smart Workspace door middel van een installatie package in Endpoint Manager (Intune). De standaard voor generieke gebruikers is de Stable release. Na installatie wordt Edge automatisch bijgewerkt. Daarvoor is geen configuratie of actie nodig. Wanneer naast het Stable channel ook andere channels worden gebruikt, dan zijn daarvoor aanvullende packages in Intune nodig. De groepen in de update rings kunnen gebruikt worden voor verschillende versies van Edge, bijvoorbeeld het aanbieden van de Beta release aan de pilot en evt test gebruikers. Gebruik van Dev of Canary raden we af voor gebruik in productie omdat dit vroege versies betreft die Microsoft ook niet ondersteund. De Dev versie kan eventueel wel worden toegepast voor (web-)ontwikkelaars. Voor Office 365 bestaan de volgende channels: Channel Toepassing Update frequentie Current Channel Gebruik van nieuwe Office features, op het moment dat ze beschikbaar komen Minimaal eens per maand, in de praktijk meerder keren per maand Monthly Channel Eens per maand voorzien van nieuwe Office features op een voorspelbaar moment (patch Tuesday) Eens per maand, op de tweede dinsdag van de maand Semi-Annual Enterprise Channel Voor Enterprise organisaties waar een verstoring of wijziging van Office een grote impact kan hebben (SSW standaard) Security en nodige updates eens per maand, op de tweede dinsdag van de maand. Nieuwe features worden twee keer per jaar aangeboden. De keuze voor het update channel is sterk afhankelijk van de organisatie en het gebruik van Office 365 binnen de organisatie. Security updates en fixes worden voor alle versies maandelijks uitgebracht en toegepast. De keuze voor een channel heeft met name impact op de beschikbare features / nieuwe functionaliteit. Wanneer gebruikers zo snel mogelijk van nieuwe features gebruik willen maken, dan is het Current Channel de beste keuze. Voor meer voorspelbaarheid en stabiliteit kan beter gekozen worden voor het Monthly Enterprise channel. Tot slot, het Semi-Annual channel biedt de beste mogelijkheid om nieuwe versies eerst goed te testen voor ze breed beschikbaar worden gesteld binnen de organisatie. Omdat dit de meest \u2018veilige\u2019 optie is, is dit de standaard keuze in Smart Workspace. De best passende keuze wordt altijd in overeenstemming met de organisatie gemaakt. Het gebruikte update channel wordt bij de installatie van Office ingesteld. Wijziging is mogelijk maar vereist een herinstallatie / configuratie van Office, mogelijk gecombineerd met een downgrade - wanneer het update channel naar van Current of Monthly naar resp. Monthly of Semi-Annual wordt aangepast - of een upgrade wanneer de omgekeerde weg wordt behandeld. Worden alle drie de channels binnen de organisatie gebruikt, dan zijn ook drie installatie packages voor Office benodigd. Deze worden in Microsoft Endpoint Manager (Intune) geconfigureerd maar vereisen geen afzonderlijke packaging activiteiten. Voor deployment kunnen dezelde groepen worden gebruikt die voor de spreiding van Windows Updates worden gebruikt. Wordt gebruik gemaakt van het applicatie portaal van Smart Workspace, dan kan een optie worden aangeboden om gebruikers op een gecontroleerde wijze te laten omschakelen naar een ander update channel. Let er dan wel op dat de controle over \u2018Wie heeft Wat\u2019 dan lastiger wordt. Gebruikers ervaring Windows zal automatisch controleren of er updates beschikbaar zijn. Dat gebeurt bij het opstarten en daarna periodiek. Wanneer updates beschikbaar zijn \u2013 dat is afhankelijk van de instellingen voor uitstel van updates \u2013 dan worden deze op de achtergrond automatisch gedownload en geinstalleerd. De gebruiker hoeft hierop geen actie op te ondernemen en het update proces gebruikt de laagste prioriteit om de productiviteit zo min mogelijk te beinvloeden. Wanneer de updates zijn geinstalleerd, krijgt de gebruiker een popup waarin wordt gemeld dat er updates beschikbaar zijn en de vraag om de computer te herstarten om de updates te verwerken. Omdat dit niet perse een geschikt moment hoeft te zijn, heeft de gebruiker de mogelijkheid om de herstart uit te stellen, in de Smart Workspace configuratie tot maximaal 7 dagen. De gebruiker kan ook een moment kiezen waarop de computer automatisch opnieuw start om de update af te ronden. Wanneer de gebruiker de computer in deze periode niet heeft herstart, dan zal de computer automatisch worden opgestart. De gebruiker krijgt hierover een melding. Deze functionaliteit wordt \u2018Engaged Restart\u2019 genoemd. Bij het afsluiten en opnieuw starten van de computer worden de updates daadwerkelijk toegepast. In de regel duurt dit enkele minuten voor Quality Updates. Het verwerkenvan de Feature Update, na download en pre-installatie, duurt in de regel 15-30 minuten. Met name voor de laatste is dat sterk afhankelijk van de leeftijd en aard van de computer. Het bijwerken van zowel Office als Edge heeft geen merkbare impact voor de gebruiker. Beiden worden automatisch en op de achtergrond bijgewerkt. Met name bij het gebruik van het Current Channel voor de Office 365 apps kan dit tot gevolg hebben dat gebruikers nieuwe features als \u2018plotselinge\u2019 wijzigingen ervaren. Goede communicatie en adoptie is daarom noodzakelijk.","title":"Windows As A Service"},{"location":"_archive/device-management/endpoint-manager/instructions/waas/#windows_as_a_service","text":"","title":"Windows As A Service"},{"location":"_archive/device-management/endpoint-manager/instructions/waas/#quality_and_feature_updates","text":"With the release of Windows 10, Microsoft introduced a new strategy to update and upgrade the operating system during its lifecycle. Before Windows 10, security updates and fixes where offered as separate update packages from which IT Admins could choose which of them were deployed and which were not. Additionally, when devices were not updated for a longer period, for instance when newly deployed from an outdated custom image, a long list of Windows updates must be additionally installed and sometimes with several reboots in between. Windows 1o introduced Quality updates which are inclusive and cumulative, meaning only one update package per month, without options to skip one or more fixes, and the latest Quality update package includes all previous updates (when still relevant). This strategy has the following important advantages: All devices with the same patch level are equally configured. This minimizes the risk for issues caused by missing updates or devices configured differently. For IT admins and end-users, the strategy is more simple and less time consuming, having to install only one single update package to update the OS with the latest fixes and security updates. Next to patches or fixes that improve Windows 10 quality, Microsoft also releases so called 'Feature Updates'. These upgrades contain functional improvements and new features that previous would be offered through a new Windows version or Service Pack (Windows XP -> Windows XP SP1 -> Windows XP SP2 -> Windows Vista -> Windows 7 -> Windows 8). Contrary to the approach for previous Windows versions, Feature updates are released more frequently (2 times a year instead of once per 3 or 4 years) and are typically smaller in size. Users can benefit from improvements and new features earlier while the impact and change is smaller then before. Implementation of Feature Updates therefore is quicker and easier to adopt. Note that from the beginning of Feature Update 21H2, feature updates are released annually instead of semi-annual, in the second half of the calendar year. After release, the feature update is supported for 18 months (Pro) or 30 months (Enterprise). With the update and upgrade strategy for Windows 10, updates are more frequent and smaller in size (Feature update) and using cumulative Quality updates, easier to deploy. Both contribute to stability and adoption of improvements and new features. Just what you can expect from a service, hence Windows as a Service.","title":"Quality and Feature updates"},{"location":"_archive/device-management/endpoint-manager/instructions/waas/#windows_11","text":"With the release of Windows 10, Microsoft announced there would be no new Windows version released in the future. This 'promise' is not kept as Microsoft released Windows 11 in the fall of 2021. The update strategy for Windows 11 is similar to what we now have for Windows 10: monthly Quality updates and one, single Feature update in the second half of the calendar year. However, the feature update is supported for 24 months (Pro) or 36 months (Enterprise). The upgrade path from Windows 10 to Windows 11 is very much like a feature update for Windows 10 (inplace upgrade), both in user experience as technical approach. Windows 10 is maintained side by side with Windows 11 and is supported till the end of 2025.","title":"Windows 11"},{"location":"_archive/device-management/endpoint-manager/instructions/waas/#deployment_of_updates","text":"Sogeti Smart Workspace makes use of Windows Update for Business. Updates are downloaded using the Windows Update Service over the internet at the time of release and automatically installed on end user devices. Before an update is released for production by Microsoft, the update is tested thoroughly by Microsoft internally and the Windows Insider community. Feedback and experiences are used to improve the quality and stability before updates are general available. Customers can choose between the following update channels that differ in release moment and support terms. The choice for an update channel is per device and set once so subsequent updates are offered from the selected channel. At this moment in time, the following channels exist, for both Windows 10 and Windows 11: Insider channel . Windows 10 devices ontvangen pre-releases van nieuwe Windows 10 builds. Issues en feedback kunnen daarmee vroegtijdig worden opgemerkt en verzameld met als doel de uiteindelijke productie versie te verbeteren. Het insider channel is primair bedoeld voor test omgevingen, niet voor productie. Zogenaamde early adopters kunnen ervoor kiezen hun device met deze versie in te (laten) richten maar dan voor niet kritische systemen met geen of geringe impact op de bedrijfsvoering wanneer er iets fout gaat. Dit channel ontvangt in de regel frequenter (vaker dan 2 keer per jaar) nieuwe releases. Semi-annual channel . Devices in dit channel ontvangen updates wanneer ze door Microsoft als productie rijpe versie worden vrijgegeven, normaliter tweemaal per jaar. Veruit de meeste computers zullen geconfigureerd worden om gebruik te maken van dit channel. \u2022 Long Term service release. Dit channel is bedoelt voor bedrijfskritische systemen met een grote impact op de bedrijfsvoering wanneer een upgrade issues veroorzaakt. Voor deze versie worden geen Feature Upgrades uitgegeven maar wel de maandelijkse Quality updates. Eens in de twee tot drie jaar verschijnt een nieuwe versie voor dit channel die met een in-place upgrade kan worden doorgevoerd. Deze versie heeft tot 10 jaar ondersteuning van Microsoft. Het lijkt aantrekkelijk om deze release te gebruiken omdat er minder (grote) wijzigingen worden aangeboden. Sogeti adviseert in de Smart Workspace oplossing terughoudend te zijn met deze keuze omdat die vernieuwing tegen gaat. Daarnaast biedt deze versie minder functionaliteit, bijvoorbeeld door het ontbreken van ondersteuning van applicaties uit de Microsoft Store (de zogenaamde modern apps). Om de impact voor de organisatie te verkleinen, wordt de installatie van updates binnen de organisatie gespreid doorgevoerd. Dat geschiedt met zogenaamde Update Rings. Een Update Ring is een verzameling devices waarvoor naast het service channel het moment en gedrag voor installatie is geconfigureerd. Standaard worden meerdere Update Rings gedefinieerd om zo de installatie van Quality Updates en Feature Upgrades te kunnen spreiden. De eigenschappen voor deze update rings zijn binnen Smart Workspace gelijk, met uitzondering van het moment van installatie. Binnen Windows Update for Buisness kan ervoor worden gekozen om het moment van installatie na release uit te stellen, dit wordt \u2018deferal\u2019 genoemd. Hoewel het mogelijk is om ook de installatie van Quality Updates uit te stellen, wordt dit binnen Smart Workspace in geen van de update rings toegepast. De praktijk leert dat issues met Quality Updates uitzonderlijk zijn. De verwachtte schade door uitstel van een update, door een vulnerability, schatten we groter in dan die veroorzaakt door issues met de update zelf. De volgende drie update rings worden geconfigureerd, allen gebruik makend van het Semi-Annual Channel voor Windows Updates: \u2022 Pilot : Computers in deze update ring krijgen zowel Quality als Feature Updates direct na release aangeboden door de deferal voor beiden op 0 dagen in te stellen. \u2022 Test : Computers in deze update ring krijgen Quality Updates direct na release en Feature Updates 15 dagen na release. Dit geeft de organisatie 15 dagen de tijd om eerst in de pilot groep te testen. \u2022 Productie : Computers in deze update ring krijgen Quality Updates direct na release en Feature Updates 30 dagen na release. Dit geeft de organisatie 30 dagen de tijd om eerst in de pilot groep te testen, waarvan de laatste 15 dagen tevens in de test groep. Wanneer het fout gaat In uitzonderlijke gevallen kan het voorkomen dat er issues optreden bij het doorvoeren van updates. Dat zien we dan met name bij Feature Updates. Op dat moment kan aanvullend worden ingegrepen door de installatie van Quality Updates of Feature Updates te pauzeren. Deze pauzering is niet afhankelijk van de deferal en treedt in nadat de computer de pauze instelling heeft ontvangen. De pauzering wordt automatisch na 35 dagen opgeheven, maar kan zowel worden verlengd als eerder worden opgeheven. De pauzering van updates wordt per update ring afzonderlijk geactiveerd of opgeheven. Optimalisatie van de download Afhankelijk van het type van de update, Quality Updates of Feature Updates, kan de grootte van de updates oplopen van enkele megabytes tot gigabytes. Om bandbreedte gebruik te verminderen, beschikt Windows 10 over mogelijkheden om de download te optimaliseren, de Delivery Optimization service. Het is nog steeds nodig dat er verbinding is met het internet, maar reeds gedownloade updates zijn via een lokale cache op het device beschikbaar voor andere computers in het netwerk. Het is dan niet nodig dat iedere computer de updates afzonderlijk gaat downloaden. Eigenschappen van deze cache en beschikbare bandbreedte wordt centraal in Smart Workspace geconfigureerd, afhankelijk van het netwerk bij de klant en in overeenstemming met de netwerk specialisten van de klant. Naast Windows Updates, maken ook de applicatie installatie van applicaties via Microsoft Endpoint Manager (Intune) en het automatisch update mechanisme van Office 365 applicaties gebruik van Delivery Optimization. Aanvullende updates Naast updates voor het Windows 10 operating system, kan worden geconfigureerd dat ook updates van drivers en andere Microsoft toepassingen worden aangeboden. In de standaard Smart Workspace configuratie worden beide opties geactiveerd. Updates voor Edge (Chromium) en Office 365 Apps Zowel de nieuwe, modern versie van Edge als de Office 365 apps maken, net als Windows 10, gebruik van verschillende update channels waarin verschillende versies worden aangeboden. Hoewel de Office 365 apps strikt genomen geen onderdeel uitmaken van het operating systeem, zijn ze normaal gesproken opgenomen in de standaard werkplek. Omdat ook het update mechanisme sterk overeenkomt met die van Windows 10, worden ze in dit informatieblad beschreven. De lifecycle voor overige applicaties is beschreven in het informatieblad \u2018Application Lifecycle\u2019. Voor Edge bestaan de volgende channels: Channel Toepassing Update frequentie Stable Generiek gebruik / productie (SSW standaard) Eens per 6 weken Beta Pre-release om te testen binnen de organisatie Eens per 6 weken Dev Voor planning en ontwikkeling, met name wanneer in-house web applicaties worden gebouwd en onderhouden. Deze versie biedt geen support. Wekelijks Canary Experimenteel, niet geteste of ondersteunde versie Dagelijks Het update channel wordt ingesteld bij de installatie van Edge, in Smart Workspace door middel van een installatie package in Endpoint Manager (Intune). De standaard voor generieke gebruikers is de Stable release. Na installatie wordt Edge automatisch bijgewerkt. Daarvoor is geen configuratie of actie nodig. Wanneer naast het Stable channel ook andere channels worden gebruikt, dan zijn daarvoor aanvullende packages in Intune nodig. De groepen in de update rings kunnen gebruikt worden voor verschillende versies van Edge, bijvoorbeeld het aanbieden van de Beta release aan de pilot en evt test gebruikers. Gebruik van Dev of Canary raden we af voor gebruik in productie omdat dit vroege versies betreft die Microsoft ook niet ondersteund. De Dev versie kan eventueel wel worden toegepast voor (web-)ontwikkelaars. Voor Office 365 bestaan de volgende channels: Channel Toepassing Update frequentie Current Channel Gebruik van nieuwe Office features, op het moment dat ze beschikbaar komen Minimaal eens per maand, in de praktijk meerder keren per maand Monthly Channel Eens per maand voorzien van nieuwe Office features op een voorspelbaar moment (patch Tuesday) Eens per maand, op de tweede dinsdag van de maand Semi-Annual Enterprise Channel Voor Enterprise organisaties waar een verstoring of wijziging van Office een grote impact kan hebben (SSW standaard) Security en nodige updates eens per maand, op de tweede dinsdag van de maand. Nieuwe features worden twee keer per jaar aangeboden. De keuze voor het update channel is sterk afhankelijk van de organisatie en het gebruik van Office 365 binnen de organisatie. Security updates en fixes worden voor alle versies maandelijks uitgebracht en toegepast. De keuze voor een channel heeft met name impact op de beschikbare features / nieuwe functionaliteit. Wanneer gebruikers zo snel mogelijk van nieuwe features gebruik willen maken, dan is het Current Channel de beste keuze. Voor meer voorspelbaarheid en stabiliteit kan beter gekozen worden voor het Monthly Enterprise channel. Tot slot, het Semi-Annual channel biedt de beste mogelijkheid om nieuwe versies eerst goed te testen voor ze breed beschikbaar worden gesteld binnen de organisatie. Omdat dit de meest \u2018veilige\u2019 optie is, is dit de standaard keuze in Smart Workspace. De best passende keuze wordt altijd in overeenstemming met de organisatie gemaakt. Het gebruikte update channel wordt bij de installatie van Office ingesteld. Wijziging is mogelijk maar vereist een herinstallatie / configuratie van Office, mogelijk gecombineerd met een downgrade - wanneer het update channel naar van Current of Monthly naar resp. Monthly of Semi-Annual wordt aangepast - of een upgrade wanneer de omgekeerde weg wordt behandeld. Worden alle drie de channels binnen de organisatie gebruikt, dan zijn ook drie installatie packages voor Office benodigd. Deze worden in Microsoft Endpoint Manager (Intune) geconfigureerd maar vereisen geen afzonderlijke packaging activiteiten. Voor deployment kunnen dezelde groepen worden gebruikt die voor de spreiding van Windows Updates worden gebruikt. Wordt gebruik gemaakt van het applicatie portaal van Smart Workspace, dan kan een optie worden aangeboden om gebruikers op een gecontroleerde wijze te laten omschakelen naar een ander update channel. Let er dan wel op dat de controle over \u2018Wie heeft Wat\u2019 dan lastiger wordt. Gebruikers ervaring Windows zal automatisch controleren of er updates beschikbaar zijn. Dat gebeurt bij het opstarten en daarna periodiek. Wanneer updates beschikbaar zijn \u2013 dat is afhankelijk van de instellingen voor uitstel van updates \u2013 dan worden deze op de achtergrond automatisch gedownload en geinstalleerd. De gebruiker hoeft hierop geen actie op te ondernemen en het update proces gebruikt de laagste prioriteit om de productiviteit zo min mogelijk te beinvloeden. Wanneer de updates zijn geinstalleerd, krijgt de gebruiker een popup waarin wordt gemeld dat er updates beschikbaar zijn en de vraag om de computer te herstarten om de updates te verwerken. Omdat dit niet perse een geschikt moment hoeft te zijn, heeft de gebruiker de mogelijkheid om de herstart uit te stellen, in de Smart Workspace configuratie tot maximaal 7 dagen. De gebruiker kan ook een moment kiezen waarop de computer automatisch opnieuw start om de update af te ronden. Wanneer de gebruiker de computer in deze periode niet heeft herstart, dan zal de computer automatisch worden opgestart. De gebruiker krijgt hierover een melding. Deze functionaliteit wordt \u2018Engaged Restart\u2019 genoemd. Bij het afsluiten en opnieuw starten van de computer worden de updates daadwerkelijk toegepast. In de regel duurt dit enkele minuten voor Quality Updates. Het verwerkenvan de Feature Update, na download en pre-installatie, duurt in de regel 15-30 minuten. Met name voor de laatste is dat sterk afhankelijk van de leeftijd en aard van de computer. Het bijwerken van zowel Office als Edge heeft geen merkbare impact voor de gebruiker. Beiden worden automatisch en op de achtergrond bijgewerkt. Met name bij het gebruik van het Current Channel voor de Office 365 apps kan dit tot gevolg hebben dat gebruikers nieuwe features als \u2018plotselinge\u2019 wijzigingen ervaren. Goede communicatie en adoptie is daarom noodzakelijk.","title":"Deployment of updates"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/","text":"Windows Device Reset \u00b6 During the lifecycle of Windows devices, users may run into issues where the operating system or application(s) do not function as expected. Or the device is handed over to another user who wants to start with a freshly installed device. In these circumstances, a reset of Windows 10 might be the only, or a time saving solution. Out of the box, Windows 10 offers the ability to reset the PC to a fresh state, optionally keeping personal files. This option can be chosen from the Windows 10 Recovery menu in the Settings App. However, users need administrator permissions to reset their device and off course, the ability to login to the device is required. In Smart Workspace, where devices are managed with Endpoint Manager (Intune), additional options are available to reset a device. A reset can be triggered by IT admins but also users can initiate a device reset. This option offers self-service and, after proper instructions beforehand, can save service desk calls and make users more productive. Managed Reset \u00b6 Windows 10 devices in Smart Workspace are managed with Microsoft Endpoint Manager / Intune and enrolled using the Autopilot process. Upon onboarding a device, the device is Azure Active Directory joined and enrolled in Intune. From the Intune management console, the following options are available for administrators : Wipe the device \u00b6 This option will remove the device from Intune management and triggers a device reset. Windows 10 is re-installed, removing all data and applications from the device. This option typically is used when a device is lost or stolen, or when the device is otherwise no longer in use, but it can also be used when a device has issues or is to be handed over to a different user. Additionally, the following options can be chosen by the administrator before the wipe is launched: Wipe the device but keep enrollment state and associated user account Wipe the device and continue, even when the device loses power The first option can be used to reset a device which is used by the same user after the reset is complete, keeping the user data untouched. The second option should only (still optional) be chosen when the device is lost or stolen. When the wipe is complete, the device will launch in the \u2018Out of The Box Experience\u2019 (OOBE) state, where the user can re-enroll the device into management using the Autopilot process. Fresh Start \u00b6 The fresh start option will remove the device from Intune management and initiate a reset (reinstallation) of Windows 10. After selecting this option, the administrator can choose to retain user data on the device. When the reset is complete, the device will launch in the \u2018Out of The Box Experience\u2019 state, where the user can re-enroll the device into management using the Autopilot process. The fresh restart looks similar to the Wipe action. Key difference is that using this option will also remove any OEM pre-loaded applications, such as Dell Command Update on Dell computers. If you want to get rid of bloat ware, use this option. Autopilot Reset \u00b6 Initiating an Autopilot Reset will re-install Windows 10 on the device. However, this option maintains the Intune Enrollment state in Azure AD and Intune. Autopilot Reset also maintains the region, language and keyboard settings and the configured Wi-Fi connection. As the enrollment state is preserved but the user data is removed, this is a good option when a device needs to be handed over to another user in the organization. There are some caveats in this option. First of all, the device is not going through the OOBE (and Autopilot) process but directly boots into Windows \u2013 using the preserved settings. When the Enrollment Status Page (ESP) is not enabled, users can directly login to Windows. When the ESP is enabled, users might see less policies and apps to be applied. Once complete, some settings and / or apps might not yet be configured or installed. The experienced behavior depends on the ESP configuration for blocking the device use before all or a selection of apps is installed. Remaining apps and settings will come through after the device (re-)synchronizes with Intune but for end users, it might look configuration has failed. The synchronization can be forced from the Intune management portal. Notes for Self-deployment and Pre-provisioning For devices that are enrolled using one of the Autopilot \u2018Self-Deploying\u2019 or \u2018Pre-Provisioning\u2019 modes, it is necessary the device is removed from Intune prior to (re-)enrolling the device, otherwise enrollment will fail. That means that the Autopilot Reset option cannot be used in these cases. Typically, the device is removed from Intune automatically when \u2018Wipe\u2019 or \u201cFresh Start\u2019 is used. Some organizations use an USB drive with the Windows 10 installation media to re-enroll devices. This approach can still be used but the device needs to be removed from the Intune portal prior to reinstallation of the operating system. Conclusion \u00b6 There are different options in Intune to reset a device. Depending on the goal and purpose, one option may prefer over the other. In all cases, a good understanding of the key differences between options is required. These are mentioned in the following table. Option Device is removed from Intune Retain user data Retain enrollment state Retain OEM preloaded apps Launch in OOBE after reset Wipe Yes Optional Optional Yes Yes Fresh Start Yes Optional No No Yes Installation Media No No No No Yes To reset a device, followed by a new Autopilot enrollment, choose Wipe To start with a fresh Windows 10 installation, removing OEM pre-installed apps, choose Fresh Start To quickly reset a device that will be re-used by the same or another user, select Autopilot Reset. However, this option cannot be used for self-deploying or pre-provisioning profiles. When a device is lost or stolen, select Wipe with the option to continue even when power is lost. Since there is no user data on the device in Smart Workspace (this is stored in OneDrive for Business, Teams or SharePoint), we typically do not choose to retain user data upon device resets. The preferred option in all cases is to use \u2018Wipe\u2019, without retaining the enrollment state. User initiated reset (self-service) \u00b6 A user can also reset a device from the Intune Company Portal when the device is associated with this same user. This typically is the case for personal used (but company owned) devices such as laptops and is not the case for shared devices, such as desktop computers - devices that are enrolled using the Autopilot Self-Deploying profile. Users also cannot reset a device when it is assigned to a different user. If the Company portal app is installed on the device, the user can launch it, select the device from all devices that are registered to this user and choose to reset the device. The device then will be wiped, where all apps and user data are removed, and Windows 10 is reinstalled. The device will boot in the OOBE state when the wipe is complete. The user then can re-enroll the device using the Autopilot service. If the company portal app is not installed, users can use the Company Portal Website . In the devices area, users can see all devices registered to them and select the device of interest. In the menu, users select the option to reset the device: Local Reset \u00b6 For managed and user-initiated resets, it is required that an internet connection is available, and the device still synchronizes with Intune. After all, the reset command is initiated from the Intune management or company portal and needs to be send to and picked up by the device. When the device no longer synchronizes with Intune, the following options are available to reset the device. Note that for \u2018Self-Deploying\u2019 or \u2018Pre-Provisioning\u2019 profiles, the device must be removed manually. Reset from the Settings App in Windows 10 \u00b6 Login to the device with an administrator account and in the settings apps, select Update and Security, Recovery and then Reset this PC. Optionally, select Keep my files to retain user data. This option is comparable with the Wipe action. Reset from the login screen \u00b6 When Windows boots and launches but you no longer can login into Windows, you can initiate the reset from the login screen. To do so, keep the Shift key pressed and restart Windows from the login screen. This will boot into recovery mode from where you can reset Windows. Note that you need the Bitlocker recovery key to continue. Normally, this key is stored in Azure Active Directory. Autopilot reset from login screen \u00b6 When enabled, an additional option is available in the sign-in options which initiates an Autopilot reset. The reset can also be initiated with the keystrokes CTRL + Windows key + R on the login screen. An administrator account is required to login, the behavior is similar to an Autopilot Reset initiated from the Intune management portal. Note that Intune Synchronization is still required for this option. Retire and delete devices \u00b6 The Intune management portal also has the options to Delete or Retire a device. When chosen, the device is removed from management and managed apps and data are removed from the device. Note that this may cause the device becoming unusable, as you no longer can log in with an Azure AD account. Since the Bitlocker recovery key is also stored in Azure AD and may be removed when a device is removed \u2013 you no longer can use the device recovery to reset the device. Reinstallation from Windows 10 media would then be the only option. The Delete option is only to be used when the device is no longer in use in the organization. However, when a reset is initiated from the device because it no longer syncs with Intune, a delete can be initiated directly when the reset is initiated on the device. This will make sure the device is properly re-enrolled into management. Do not remove the device from Azure AD. The Retire option is meant for BYOD devices only, that are typically not Azure AD joined but enrolled into Intune management only and need to be removed from management, without resetting Windows 10. Appendix: Device registrations in Azure AD and Intune \u00b6 For successful usage of Intune and Autopilot during the lifecycle for a device, it is important to understand the different device registrations in the management environment. The end-result in all cases is to use Autopilot deployed devices which are Azure AD joined and Intune enrolled. To achieve this result, the following actions must be done, and in this order. We\u2019ll start with a new device, that is not used before. Register the device in Autopilot. To register the device, a csv-file with the device specific hash-id, is imported in Endpoint Manager. The hash-id can be seen as a device signature where the Autopilot service links the device to a specific organization. The import of hash files is done by Sogeti engineers and results in the following registrations: A device record in Autopilot, using the device serial number. A group tag is read from the CSV file to specify the device role in the environment (laptop, shared device, kiosk device, etc.). Azure AD dynamic groups contain devices based on these group tags, the groups are used to assign profiles, policies, and apps in Intune. A device registration in Azure AD. This registration contains two important attributes: the device is an autopilot device and the group tag. Both are used in Azure AD dynamic groups, if this registration is corrupted then the groups might not be populated correctly. Therefore, removing the registration from Azure AD is blocked if the device is also registered as an Autopilot device. On first creation of this record, the device state is disabled and will be enabled once the device is enrolled. Enroll the device with the Autopilot enrollment process. During this process, the device is Azure AD joined, on which the device record in Azure AD is updated with device specific information. This device record is also set to Enabled. Secondly, the device is enrolled in Intune. Upon enrollment, the device is registered with a record in Intune. In normal operation, the Autopilot registration and Azure AD device registration do not require changes or updates by an admin. The only change that can be required, is changing the Group Tag in the Autopilot registration, for example when the device role is changed or when the current Group Tag is incorrect. The registration in Intune can require the following updates: When a device is reset (using the wipe or fresh start procedures described in the previous paragraphs), the device is automatically removed from Intune. Upon re-enrollment, the device is again added to Intune with a new record. In some cases, for example when the device is reset using manual intervention, the device record also needs to be removed manually. This can be achieved using the Delete option in the Intune management portal . Resume: In the Autopilot device enrollment process, the device is registered in Autopilot, Azure AD, and Intune. Only the Intune record is created, updated or deleted during the device lifecycle and (re-)enrollments. Do not remove or change the device records in Autopilot or Azure AD as this can lead to unexpected results. When the registration is out of order, follow these steps (typically carried out by a Sogeti engineer): Remove (delete) the device from Intune Delete the device from Autopilot Delete the record for the device in Azure AD Re-import the device using the csv file with the device specific hash Enroll the device as it where a new device Wait 10-15 minutes after removing the device from Azure AD and importing the device in Autopilot in order to allow the Autopilot service properly sync the changes.","title":"Windows Device Reset"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#windows_device_reset","text":"During the lifecycle of Windows devices, users may run into issues where the operating system or application(s) do not function as expected. Or the device is handed over to another user who wants to start with a freshly installed device. In these circumstances, a reset of Windows 10 might be the only, or a time saving solution. Out of the box, Windows 10 offers the ability to reset the PC to a fresh state, optionally keeping personal files. This option can be chosen from the Windows 10 Recovery menu in the Settings App. However, users need administrator permissions to reset their device and off course, the ability to login to the device is required. In Smart Workspace, where devices are managed with Endpoint Manager (Intune), additional options are available to reset a device. A reset can be triggered by IT admins but also users can initiate a device reset. This option offers self-service and, after proper instructions beforehand, can save service desk calls and make users more productive.","title":"Windows Device Reset"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#managed_reset","text":"Windows 10 devices in Smart Workspace are managed with Microsoft Endpoint Manager / Intune and enrolled using the Autopilot process. Upon onboarding a device, the device is Azure Active Directory joined and enrolled in Intune. From the Intune management console, the following options are available for administrators :","title":"Managed Reset"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#wipe_the_device","text":"This option will remove the device from Intune management and triggers a device reset. Windows 10 is re-installed, removing all data and applications from the device. This option typically is used when a device is lost or stolen, or when the device is otherwise no longer in use, but it can also be used when a device has issues or is to be handed over to a different user. Additionally, the following options can be chosen by the administrator before the wipe is launched: Wipe the device but keep enrollment state and associated user account Wipe the device and continue, even when the device loses power The first option can be used to reset a device which is used by the same user after the reset is complete, keeping the user data untouched. The second option should only (still optional) be chosen when the device is lost or stolen. When the wipe is complete, the device will launch in the \u2018Out of The Box Experience\u2019 (OOBE) state, where the user can re-enroll the device into management using the Autopilot process.","title":"Wipe the device"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#fresh_start","text":"The fresh start option will remove the device from Intune management and initiate a reset (reinstallation) of Windows 10. After selecting this option, the administrator can choose to retain user data on the device. When the reset is complete, the device will launch in the \u2018Out of The Box Experience\u2019 state, where the user can re-enroll the device into management using the Autopilot process. The fresh restart looks similar to the Wipe action. Key difference is that using this option will also remove any OEM pre-loaded applications, such as Dell Command Update on Dell computers. If you want to get rid of bloat ware, use this option.","title":"Fresh Start"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#autopilot_reset","text":"Initiating an Autopilot Reset will re-install Windows 10 on the device. However, this option maintains the Intune Enrollment state in Azure AD and Intune. Autopilot Reset also maintains the region, language and keyboard settings and the configured Wi-Fi connection. As the enrollment state is preserved but the user data is removed, this is a good option when a device needs to be handed over to another user in the organization. There are some caveats in this option. First of all, the device is not going through the OOBE (and Autopilot) process but directly boots into Windows \u2013 using the preserved settings. When the Enrollment Status Page (ESP) is not enabled, users can directly login to Windows. When the ESP is enabled, users might see less policies and apps to be applied. Once complete, some settings and / or apps might not yet be configured or installed. The experienced behavior depends on the ESP configuration for blocking the device use before all or a selection of apps is installed. Remaining apps and settings will come through after the device (re-)synchronizes with Intune but for end users, it might look configuration has failed. The synchronization can be forced from the Intune management portal. Notes for Self-deployment and Pre-provisioning For devices that are enrolled using one of the Autopilot \u2018Self-Deploying\u2019 or \u2018Pre-Provisioning\u2019 modes, it is necessary the device is removed from Intune prior to (re-)enrolling the device, otherwise enrollment will fail. That means that the Autopilot Reset option cannot be used in these cases. Typically, the device is removed from Intune automatically when \u2018Wipe\u2019 or \u201cFresh Start\u2019 is used. Some organizations use an USB drive with the Windows 10 installation media to re-enroll devices. This approach can still be used but the device needs to be removed from the Intune portal prior to reinstallation of the operating system.","title":"Autopilot Reset"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#conclusion","text":"There are different options in Intune to reset a device. Depending on the goal and purpose, one option may prefer over the other. In all cases, a good understanding of the key differences between options is required. These are mentioned in the following table. Option Device is removed from Intune Retain user data Retain enrollment state Retain OEM preloaded apps Launch in OOBE after reset Wipe Yes Optional Optional Yes Yes Fresh Start Yes Optional No No Yes Installation Media No No No No Yes To reset a device, followed by a new Autopilot enrollment, choose Wipe To start with a fresh Windows 10 installation, removing OEM pre-installed apps, choose Fresh Start To quickly reset a device that will be re-used by the same or another user, select Autopilot Reset. However, this option cannot be used for self-deploying or pre-provisioning profiles. When a device is lost or stolen, select Wipe with the option to continue even when power is lost. Since there is no user data on the device in Smart Workspace (this is stored in OneDrive for Business, Teams or SharePoint), we typically do not choose to retain user data upon device resets. The preferred option in all cases is to use \u2018Wipe\u2019, without retaining the enrollment state.","title":"Conclusion"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#user_initiated_reset_self-service","text":"A user can also reset a device from the Intune Company Portal when the device is associated with this same user. This typically is the case for personal used (but company owned) devices such as laptops and is not the case for shared devices, such as desktop computers - devices that are enrolled using the Autopilot Self-Deploying profile. Users also cannot reset a device when it is assigned to a different user. If the Company portal app is installed on the device, the user can launch it, select the device from all devices that are registered to this user and choose to reset the device. The device then will be wiped, where all apps and user data are removed, and Windows 10 is reinstalled. The device will boot in the OOBE state when the wipe is complete. The user then can re-enroll the device using the Autopilot service. If the company portal app is not installed, users can use the Company Portal Website . In the devices area, users can see all devices registered to them and select the device of interest. In the menu, users select the option to reset the device:","title":"User initiated reset (self-service)"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#local_reset","text":"For managed and user-initiated resets, it is required that an internet connection is available, and the device still synchronizes with Intune. After all, the reset command is initiated from the Intune management or company portal and needs to be send to and picked up by the device. When the device no longer synchronizes with Intune, the following options are available to reset the device. Note that for \u2018Self-Deploying\u2019 or \u2018Pre-Provisioning\u2019 profiles, the device must be removed manually.","title":"Local Reset"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#reset_from_the_settings_app_in_windows_10","text":"Login to the device with an administrator account and in the settings apps, select Update and Security, Recovery and then Reset this PC. Optionally, select Keep my files to retain user data. This option is comparable with the Wipe action.","title":"Reset from the Settings App in Windows 10"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#reset_from_the_login_screen","text":"When Windows boots and launches but you no longer can login into Windows, you can initiate the reset from the login screen. To do so, keep the Shift key pressed and restart Windows from the login screen. This will boot into recovery mode from where you can reset Windows. Note that you need the Bitlocker recovery key to continue. Normally, this key is stored in Azure Active Directory.","title":"Reset from the login screen"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#autopilot_reset_from_login_screen","text":"When enabled, an additional option is available in the sign-in options which initiates an Autopilot reset. The reset can also be initiated with the keystrokes CTRL + Windows key + R on the login screen. An administrator account is required to login, the behavior is similar to an Autopilot Reset initiated from the Intune management portal. Note that Intune Synchronization is still required for this option.","title":"Autopilot reset from login screen"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#retire_and_delete_devices","text":"The Intune management portal also has the options to Delete or Retire a device. When chosen, the device is removed from management and managed apps and data are removed from the device. Note that this may cause the device becoming unusable, as you no longer can log in with an Azure AD account. Since the Bitlocker recovery key is also stored in Azure AD and may be removed when a device is removed \u2013 you no longer can use the device recovery to reset the device. Reinstallation from Windows 10 media would then be the only option. The Delete option is only to be used when the device is no longer in use in the organization. However, when a reset is initiated from the device because it no longer syncs with Intune, a delete can be initiated directly when the reset is initiated on the device. This will make sure the device is properly re-enrolled into management. Do not remove the device from Azure AD. The Retire option is meant for BYOD devices only, that are typically not Azure AD joined but enrolled into Intune management only and need to be removed from management, without resetting Windows 10.","title":"Retire and delete devices"},{"location":"_archive/device-management/endpoint-manager/instructions/windows-dev-reset/#appendix_device_registrations_in_azure_ad_and_intune","text":"For successful usage of Intune and Autopilot during the lifecycle for a device, it is important to understand the different device registrations in the management environment. The end-result in all cases is to use Autopilot deployed devices which are Azure AD joined and Intune enrolled. To achieve this result, the following actions must be done, and in this order. We\u2019ll start with a new device, that is not used before. Register the device in Autopilot. To register the device, a csv-file with the device specific hash-id, is imported in Endpoint Manager. The hash-id can be seen as a device signature where the Autopilot service links the device to a specific organization. The import of hash files is done by Sogeti engineers and results in the following registrations: A device record in Autopilot, using the device serial number. A group tag is read from the CSV file to specify the device role in the environment (laptop, shared device, kiosk device, etc.). Azure AD dynamic groups contain devices based on these group tags, the groups are used to assign profiles, policies, and apps in Intune. A device registration in Azure AD. This registration contains two important attributes: the device is an autopilot device and the group tag. Both are used in Azure AD dynamic groups, if this registration is corrupted then the groups might not be populated correctly. Therefore, removing the registration from Azure AD is blocked if the device is also registered as an Autopilot device. On first creation of this record, the device state is disabled and will be enabled once the device is enrolled. Enroll the device with the Autopilot enrollment process. During this process, the device is Azure AD joined, on which the device record in Azure AD is updated with device specific information. This device record is also set to Enabled. Secondly, the device is enrolled in Intune. Upon enrollment, the device is registered with a record in Intune. In normal operation, the Autopilot registration and Azure AD device registration do not require changes or updates by an admin. The only change that can be required, is changing the Group Tag in the Autopilot registration, for example when the device role is changed or when the current Group Tag is incorrect. The registration in Intune can require the following updates: When a device is reset (using the wipe or fresh start procedures described in the previous paragraphs), the device is automatically removed from Intune. Upon re-enrollment, the device is again added to Intune with a new record. In some cases, for example when the device is reset using manual intervention, the device record also needs to be removed manually. This can be achieved using the Delete option in the Intune management portal . Resume: In the Autopilot device enrollment process, the device is registered in Autopilot, Azure AD, and Intune. Only the Intune record is created, updated or deleted during the device lifecycle and (re-)enrollments. Do not remove or change the device records in Autopilot or Azure AD as this can lead to unexpected results. When the registration is out of order, follow these steps (typically carried out by a Sogeti engineer): Remove (delete) the device from Intune Delete the device from Autopilot Delete the record for the device in Azure AD Re-import the device using the csv file with the device specific hash Enroll the device as it where a new device Wait 10-15 minutes after removing the device from Azure AD and importing the device in Autopilot in order to allow the Autopilot service properly sync the changes.","title":"Appendix: Device registrations in Azure AD and Intune"},{"location":"_archive/device-management/endpoint-manager/manage/","text":"Manage Endpoint Manager in Run \u00b6","title":"Manage Endpoint Manager in Run"},{"location":"_archive/device-management/endpoint-manager/manage/#manage_endpoint_manager_in_run","text":"","title":"Manage Endpoint Manager in Run"},{"location":"_archive/device-management/endpoint-manager/onboard/","text":"Onboarding Device Management - Microsoft Endpoint Manager \u00b6 Being a cloud service, onboarding Microsoft Endpoint Manager still is more then just enabling the service. Activities and configuration need to be well planned and prepared, well thought through, and then properly configured. The following figure shows the steps to take in the onboarding process. . Intake \u00b6 Within Sogeti Smart Workspace, we do have a standard configuration with which we quickly can configure Microsoft Endpoint Manager. However, the customer needs to know what we provide, what's expected from them, how the service integrates within their infrastructure and IT landscape and what the user gets (experience). On our turn, we need to know what the customer expects and how we can integrate in their infrastructure, network and IT landscape. The intake is done through a Design Workshop in which we explain in detail how the service looks like, which decisions need to be made and what is required to build (configure) Microsoft Endpoint Manager. During the workshop, which is lead by the SSW Tech lead for the onboarding process, the Device Management Design Guide is to be used. You can download the latest version here: . Going through the design guide, the tech lead explains the service and gathers information, required to setup the design in the next phase. Design \u00b6 Based on the standard design templates and the information gathered in the intake step, customer specific designs are created. You can download the latest templates from below table. Both designs include the configuration that must be set in Endpoint Manager. Note that decisions made may also impact the high-level or master design. Design template Download Detailed design Windows 10 Detailed design mobile devices Build \u00b6 The build step for Endpoint Manager, at high level, consists of the following activities: Initial setup / configuration of Endpoint Manager. Importing the Smart Workspace standard configuration and applications. Fine tuning the configuration to match the customers requirements and IT landscape. Adding additional, business, applications that will not be deployed through the application portal. Steps 1 and 2 are carried out using our own standard activities and configuration. Steps 3 and 4 follow additional configuration based on the customer specific design choices, as documented in the detailed designs. Initial setup and import of the SSW standards \u00b6 The first step, is to setup Endpoint Manager and when that is complete, the standard configuration can be applied. The checklist in below table describes all required, preferred and optional tasks. Beforehand, make the following preparations: Shopping list \u00b6 Request an account with the Global Administrator role assigned. This is required by some tasks below. After initial configuration, the Intune Administrator role and * Conditional Access Administrator role are required. Discuss the required Azure AD Groups: Dynamic device groups for Autopilot, policy, profile and app assignment. SSW Users group. In most cases, the customer manages this group in AD, which is then synced to AAD. Discuss which group can be used. Azure AD device Groups for assigning Software Update policies (Pilot and Test) Request accounts for Apple push notifications and connecting to Google Play Store. The PowerShell script that imports the Intune configuration creates an application registration in Azure Active Directory for use with the Graph API. Discuss this with the customer. When company mobile devices and/or company macOS devices need to be managed, discuss if the customer is using Apple Business Manager and/or Samsung Knox. If so, a connector needs to be configured. In many cases, the customer or their hardware vendor/reseller, manages Apple Business Manager and/or Samsung Knox. If that is the case, proper process agreements are required. Implementation checklist \u00b6 Item Description Instruction Additional Information Importance Setup AAD Device Groups Configure AAD device groups for Autopilot Create Dynamic AAD groups to be used with Autopilot. Create a group for All Autopilot devices and one per deployment profile that is based on Group Tag Rule for All Autopilot devices is (device.devicePhysicalIDs -any _ -contains \"[ZTDId]\") , the rule for a group based on Group Tag is (device.devicePhysicalIds -any _ -eq \"[OrderID]:SSW\") . Note that the Group Tag is 'SSW' in this example Required AAD User Groups Configure a group for SSW users At least one group for SSW users needs to exist This can be a cloud only group in Azure AD or a synchronized group from the on-prem AD Required Scope Determine scope for MDM and/or MAM By default, MDM is configured for Windows 10, MAM for iOS and Android Follows from design decision in HLD or detailed design Required License check Check (or configure) license assignment for SSW users Check if the users are assigned proper licenses. If not, assign licenses to the SSW User group, in agreement with customer Azure Active Directory > Licenses > All Products Required Windows MDM Configure Windows 10 enrollment Configure Auto-enrollment for Intune Devices > Enroll Devices > Windows enrollment Required Windows MDM Configure AAD Device Join Configure the ability for users to join devices to AAD Azure Active Directory > Devices > Device settings Required iOS/iPadOS enrollment Configure Apple Push Notification Certificate Configure a push notification certificate for Apple Devices. An applied is required, preferable an id from the customer Devices > iOS/iPadOS > iOS/iPadOS enrollment Optional Android Enrollment Connect with Managed Google Play Configure the connection with Managed Google Play, preferable using the customers gmail account Devices > Android > Android enrollment Optional Enrollment Status Page (ESP) Configure ESP The Enrollment Status Page is required and must be enabled Devices > Enroll Devices > Enrollment Status Page Required Autopilot Configure profiles for Autopilot At least one Userdriven Enrollment Profile must be configured for laptops. Optionally, a Self Deploying profile is configured for use on shared devices / desktops. Assign the AP-profiles to the dynamic AAD device group(s) Devices > Enroll Devices > Deployment Profiles Required Enterprise State Roaming (ESR) Configure ESR Enterprise State Roaming helps users keeping their personal settings on all their devices. Determine if a selected group must be used or if ESR is enabled for all users. Azure Active Directory > Devices > Enterprise State Roaming Required Enrollment restrictions Configure Enrollment restrictions Enrollment restrictions can limit the devices users can enroll, for example block personal devices Devices > Enrollment Restrictions Preferred Configure Import SSW default profiles Import the SSW Default profiles for Intune Using the backup-restore PowerShell scripts, import the SSW default policy set. This set contains Device Compliancy policies, Device Configuration policies, Microsoft Security Baseline settings and App Protection policies. Download the standard configuration here: Generic or macOS . Read the instructions here Required Windows Compliance Policy Assign Windows Compliance policy Assign the Windows Device Compliance policy to the SSW Users Group Devices > Windows > Compliance Policies Required Android Compliance Policy Assign Android Compliance policy Assign the Android Device Compliance policy or policies to the SSW Users Group. Different policy types may apply per deployment profile Devices > Android > Compliance policies Optional iOS and iPadOS Compliance Policy Assign Compliance policy for iOS and iPadOS Assign the iOS/iPadOS Device Compliance policy or policies to the SSW Users Group. Devices > iOS/iPadOS > Compliance policies Optional macOS Compliance Policy Assign Compliance policy for macOS Assign the macOS Device Compliance policy or policies to the SSW Users Group. Devices > macOS > Compliance policies Optional Windows Configuration Assign the Windows 10 Configuration profiles Assign the Windows 10 Configuration profiles to the Dynamic Device Group in AAD, created in the first step Devices > Windows > Configuration Profiles Required Windows Security Baseline Assign the Windows 10 Security Baseline Assign the Windows 10 Security Baseline to the Dynamic Device Group in AAD, created in the first step Endpoint Security > Security baselines Required Microsoft Edge Security Baseline Assign the Microsoft Edge Baseline Assign the Microsoft Edge Security Baseline to the Dynamic Device Group in AAD, created in the first step Endpoint Security > Security baselines Required Microsoft Defender for Endpoint Baseline Assign the Windows Edge Baseline Assign the Windows Edge Security Baseline to the Dynamic Device Group in AAD, created in the first step Endpoint Security > Security baselines Optional, Required when using Defender for Endpoint Windows Software Update Rings Configure Software Update Rings for Windows Create Software Update Rings for Windows 10 (Pilot, Test and Production). Assign Pilot and Test to specific device groups, assign Production to the Dynamic Device Group in AAD and exclude both Pilot and Test Devices > Windows > Update rings for Windows 10 and later Required Windows Feature Updates Configure Feature updates for Windows Create a Feature update profile and assign to a device group. Use the same approach (Pilot, Test and Production) as with Software Update Rings. When using this option, deferral must be set to 0 for Feature Updates in the Software Update Rings. Devices > Windows > Feature updates for Windows 10 and later (Preview) Optional, Required to support upgrade to Windows 11 Windows Quality updates Configure Quality updates for Windows Create a Quality update profile and assign to a device group. Use the same approach (Pilot, Test and Production) as with Software Update Rings. When using this option, deferral must be set to 0 for Quality Updates in the Software Update Rings. Devices > Windows > Quality updates for Windows 10 and later (Preview) Optional SSW standard apps Configure the deployment of SSW standard apps, such as the Microsoft 365 apps, Edge browser, 7-Zip, Chrome, Adobe Reader and SSW Agents Create a standard App and assign as required app for the Dynamic Device Group, created in step 1. Be sure to use Win32 App type (except for Office) Apps > Windows Apps Required Conditional Access Configure SSW Conditional Access Policies Configure CA policies according the standards and assign to the specified users / groups. Consider exclusions to prevent lockout and/or service accounts that do not work with these CA rules. Additional configuration is required in SPO and EXO for Session Control (See here and here ). Endpont security > Conditional Access > Policies Required When setup and configuration are complete, the engineer fills in the Technical Release Document. This document is used to hand-over to the technical test and provides insight in the progress. The template for the release document can be downloaded here: Release document Language Download Microsoft Endpoint Manager English Technical Test \u00b6 After configuration of Endpoint Manager is complete, including standards apps, profiles and policies, an engineer enrolls a device to test the setup. Basically, the following activities are carried out to test the configuration. This test can be done on a virtual machine that is enrolled in the customer environment for smoke testing, for a complete technical test a laptop or desktop is required as Pre-provisioning or self-deploying enrollment requires physical hardware and cannot be tested on virtual machines. Import the hardware hash for the test device and check if the dynamic groups are populated and enrollment profile is assigned. Enroll the device into Intune, check whether the enrollment succeeds. Check if all policies, profiles and apps are successfully applied. Login into the device and check basic functionality. At the end, the device is wiped and should return to the default, unenrolled state. The engineer adds the test results and findings (if any) in the release document, that was created at the end of the build phase. Acceptance Test \u00b6 For acceptance, the complete enrollment - including Pre-provisioning - is tested in a production like setup. If devices are prepared (pre-provisioned) by a third party hardware reseller, involve them in the test process. Let a business user perform the acceptance test and report results and any findings (when applicable). Depending on the finding, the following actions must be taken: Result is in line with the design but reported as a defect: Discuss with customer (intake), optionally update the design (Design) and adapt change in the configuration (Build). Test the change (Technical Test) and offer the user for retest after implementing the change (Acceptance Test). Result is not in line with the design which means a defect. Reconfigure the setup (Build), test the change (Technical test) and offer the user for retest after implementing the change (Acceptance Test). Finding cannot be reproduced. Ask tester for additional information. Update instructions and/or close finding when this is a false finding. Deployment \u00b6 The configuration is complete, both technically and functional tested and approved. For onboarding the organization, the project plans and performs the rollout after which the environment is handed over to Run. The following deliverables must be handed over: Complete and up-to-date designs. Any customer specific instructions regarding the configuration. Technical Release document. Technical resources, such as scripts and application packages.","title":"Onboarding Device Management - Microsoft Endpoint Manager"},{"location":"_archive/device-management/endpoint-manager/onboard/#onboarding_device_management_-_microsoft_endpoint_manager","text":"Being a cloud service, onboarding Microsoft Endpoint Manager still is more then just enabling the service. Activities and configuration need to be well planned and prepared, well thought through, and then properly configured. The following figure shows the steps to take in the onboarding process. .","title":"Onboarding Device Management - Microsoft Endpoint Manager"},{"location":"_archive/device-management/endpoint-manager/onboard/#intake","text":"Within Sogeti Smart Workspace, we do have a standard configuration with which we quickly can configure Microsoft Endpoint Manager. However, the customer needs to know what we provide, what's expected from them, how the service integrates within their infrastructure and IT landscape and what the user gets (experience). On our turn, we need to know what the customer expects and how we can integrate in their infrastructure, network and IT landscape. The intake is done through a Design Workshop in which we explain in detail how the service looks like, which decisions need to be made and what is required to build (configure) Microsoft Endpoint Manager. During the workshop, which is lead by the SSW Tech lead for the onboarding process, the Device Management Design Guide is to be used. You can download the latest version here: . Going through the design guide, the tech lead explains the service and gathers information, required to setup the design in the next phase.","title":"Intake"},{"location":"_archive/device-management/endpoint-manager/onboard/#design","text":"Based on the standard design templates and the information gathered in the intake step, customer specific designs are created. You can download the latest templates from below table. Both designs include the configuration that must be set in Endpoint Manager. Note that decisions made may also impact the high-level or master design. Design template Download Detailed design Windows 10 Detailed design mobile devices","title":"Design"},{"location":"_archive/device-management/endpoint-manager/onboard/#build","text":"The build step for Endpoint Manager, at high level, consists of the following activities: Initial setup / configuration of Endpoint Manager. Importing the Smart Workspace standard configuration and applications. Fine tuning the configuration to match the customers requirements and IT landscape. Adding additional, business, applications that will not be deployed through the application portal. Steps 1 and 2 are carried out using our own standard activities and configuration. Steps 3 and 4 follow additional configuration based on the customer specific design choices, as documented in the detailed designs.","title":"Build"},{"location":"_archive/device-management/endpoint-manager/onboard/#initial_setup_and_import_of_the_ssw_standards","text":"The first step, is to setup Endpoint Manager and when that is complete, the standard configuration can be applied. The checklist in below table describes all required, preferred and optional tasks. Beforehand, make the following preparations:","title":"Initial setup and import of the SSW standards"},{"location":"_archive/device-management/endpoint-manager/onboard/#shopping_list","text":"Request an account with the Global Administrator role assigned. This is required by some tasks below. After initial configuration, the Intune Administrator role and * Conditional Access Administrator role are required. Discuss the required Azure AD Groups: Dynamic device groups for Autopilot, policy, profile and app assignment. SSW Users group. In most cases, the customer manages this group in AD, which is then synced to AAD. Discuss which group can be used. Azure AD device Groups for assigning Software Update policies (Pilot and Test) Request accounts for Apple push notifications and connecting to Google Play Store. The PowerShell script that imports the Intune configuration creates an application registration in Azure Active Directory for use with the Graph API. Discuss this with the customer. When company mobile devices and/or company macOS devices need to be managed, discuss if the customer is using Apple Business Manager and/or Samsung Knox. If so, a connector needs to be configured. In many cases, the customer or their hardware vendor/reseller, manages Apple Business Manager and/or Samsung Knox. If that is the case, proper process agreements are required.","title":"Shopping list"},{"location":"_archive/device-management/endpoint-manager/onboard/#implementation_checklist","text":"Item Description Instruction Additional Information Importance Setup AAD Device Groups Configure AAD device groups for Autopilot Create Dynamic AAD groups to be used with Autopilot. Create a group for All Autopilot devices and one per deployment profile that is based on Group Tag Rule for All Autopilot devices is (device.devicePhysicalIDs -any _ -contains \"[ZTDId]\") , the rule for a group based on Group Tag is (device.devicePhysicalIds -any _ -eq \"[OrderID]:SSW\") . Note that the Group Tag is 'SSW' in this example Required AAD User Groups Configure a group for SSW users At least one group for SSW users needs to exist This can be a cloud only group in Azure AD or a synchronized group from the on-prem AD Required Scope Determine scope for MDM and/or MAM By default, MDM is configured for Windows 10, MAM for iOS and Android Follows from design decision in HLD or detailed design Required License check Check (or configure) license assignment for SSW users Check if the users are assigned proper licenses. If not, assign licenses to the SSW User group, in agreement with customer Azure Active Directory > Licenses > All Products Required Windows MDM Configure Windows 10 enrollment Configure Auto-enrollment for Intune Devices > Enroll Devices > Windows enrollment Required Windows MDM Configure AAD Device Join Configure the ability for users to join devices to AAD Azure Active Directory > Devices > Device settings Required iOS/iPadOS enrollment Configure Apple Push Notification Certificate Configure a push notification certificate for Apple Devices. An applied is required, preferable an id from the customer Devices > iOS/iPadOS > iOS/iPadOS enrollment Optional Android Enrollment Connect with Managed Google Play Configure the connection with Managed Google Play, preferable using the customers gmail account Devices > Android > Android enrollment Optional Enrollment Status Page (ESP) Configure ESP The Enrollment Status Page is required and must be enabled Devices > Enroll Devices > Enrollment Status Page Required Autopilot Configure profiles for Autopilot At least one Userdriven Enrollment Profile must be configured for laptops. Optionally, a Self Deploying profile is configured for use on shared devices / desktops. Assign the AP-profiles to the dynamic AAD device group(s) Devices > Enroll Devices > Deployment Profiles Required Enterprise State Roaming (ESR) Configure ESR Enterprise State Roaming helps users keeping their personal settings on all their devices. Determine if a selected group must be used or if ESR is enabled for all users. Azure Active Directory > Devices > Enterprise State Roaming Required Enrollment restrictions Configure Enrollment restrictions Enrollment restrictions can limit the devices users can enroll, for example block personal devices Devices > Enrollment Restrictions Preferred Configure Import SSW default profiles Import the SSW Default profiles for Intune Using the backup-restore PowerShell scripts, import the SSW default policy set. This set contains Device Compliancy policies, Device Configuration policies, Microsoft Security Baseline settings and App Protection policies. Download the standard configuration here: Generic or macOS . Read the instructions here Required Windows Compliance Policy Assign Windows Compliance policy Assign the Windows Device Compliance policy to the SSW Users Group Devices > Windows > Compliance Policies Required Android Compliance Policy Assign Android Compliance policy Assign the Android Device Compliance policy or policies to the SSW Users Group. Different policy types may apply per deployment profile Devices > Android > Compliance policies Optional iOS and iPadOS Compliance Policy Assign Compliance policy for iOS and iPadOS Assign the iOS/iPadOS Device Compliance policy or policies to the SSW Users Group. Devices > iOS/iPadOS > Compliance policies Optional macOS Compliance Policy Assign Compliance policy for macOS Assign the macOS Device Compliance policy or policies to the SSW Users Group. Devices > macOS > Compliance policies Optional Windows Configuration Assign the Windows 10 Configuration profiles Assign the Windows 10 Configuration profiles to the Dynamic Device Group in AAD, created in the first step Devices > Windows > Configuration Profiles Required Windows Security Baseline Assign the Windows 10 Security Baseline Assign the Windows 10 Security Baseline to the Dynamic Device Group in AAD, created in the first step Endpoint Security > Security baselines Required Microsoft Edge Security Baseline Assign the Microsoft Edge Baseline Assign the Microsoft Edge Security Baseline to the Dynamic Device Group in AAD, created in the first step Endpoint Security > Security baselines Required Microsoft Defender for Endpoint Baseline Assign the Windows Edge Baseline Assign the Windows Edge Security Baseline to the Dynamic Device Group in AAD, created in the first step Endpoint Security > Security baselines Optional, Required when using Defender for Endpoint Windows Software Update Rings Configure Software Update Rings for Windows Create Software Update Rings for Windows 10 (Pilot, Test and Production). Assign Pilot and Test to specific device groups, assign Production to the Dynamic Device Group in AAD and exclude both Pilot and Test Devices > Windows > Update rings for Windows 10 and later Required Windows Feature Updates Configure Feature updates for Windows Create a Feature update profile and assign to a device group. Use the same approach (Pilot, Test and Production) as with Software Update Rings. When using this option, deferral must be set to 0 for Feature Updates in the Software Update Rings. Devices > Windows > Feature updates for Windows 10 and later (Preview) Optional, Required to support upgrade to Windows 11 Windows Quality updates Configure Quality updates for Windows Create a Quality update profile and assign to a device group. Use the same approach (Pilot, Test and Production) as with Software Update Rings. When using this option, deferral must be set to 0 for Quality Updates in the Software Update Rings. Devices > Windows > Quality updates for Windows 10 and later (Preview) Optional SSW standard apps Configure the deployment of SSW standard apps, such as the Microsoft 365 apps, Edge browser, 7-Zip, Chrome, Adobe Reader and SSW Agents Create a standard App and assign as required app for the Dynamic Device Group, created in step 1. Be sure to use Win32 App type (except for Office) Apps > Windows Apps Required Conditional Access Configure SSW Conditional Access Policies Configure CA policies according the standards and assign to the specified users / groups. Consider exclusions to prevent lockout and/or service accounts that do not work with these CA rules. Additional configuration is required in SPO and EXO for Session Control (See here and here ). Endpont security > Conditional Access > Policies Required When setup and configuration are complete, the engineer fills in the Technical Release Document. This document is used to hand-over to the technical test and provides insight in the progress. The template for the release document can be downloaded here: Release document Language Download Microsoft Endpoint Manager English","title":"Implementation checklist"},{"location":"_archive/device-management/endpoint-manager/onboard/#technical_test","text":"After configuration of Endpoint Manager is complete, including standards apps, profiles and policies, an engineer enrolls a device to test the setup. Basically, the following activities are carried out to test the configuration. This test can be done on a virtual machine that is enrolled in the customer environment for smoke testing, for a complete technical test a laptop or desktop is required as Pre-provisioning or self-deploying enrollment requires physical hardware and cannot be tested on virtual machines. Import the hardware hash for the test device and check if the dynamic groups are populated and enrollment profile is assigned. Enroll the device into Intune, check whether the enrollment succeeds. Check if all policies, profiles and apps are successfully applied. Login into the device and check basic functionality. At the end, the device is wiped and should return to the default, unenrolled state. The engineer adds the test results and findings (if any) in the release document, that was created at the end of the build phase.","title":"Technical Test"},{"location":"_archive/device-management/endpoint-manager/onboard/#acceptance_test","text":"For acceptance, the complete enrollment - including Pre-provisioning - is tested in a production like setup. If devices are prepared (pre-provisioned) by a third party hardware reseller, involve them in the test process. Let a business user perform the acceptance test and report results and any findings (when applicable). Depending on the finding, the following actions must be taken: Result is in line with the design but reported as a defect: Discuss with customer (intake), optionally update the design (Design) and adapt change in the configuration (Build). Test the change (Technical Test) and offer the user for retest after implementing the change (Acceptance Test). Result is not in line with the design which means a defect. Reconfigure the setup (Build), test the change (Technical test) and offer the user for retest after implementing the change (Acceptance Test). Finding cannot be reproduced. Ask tester for additional information. Update instructions and/or close finding when this is a false finding.","title":"Acceptance Test"},{"location":"_archive/device-management/endpoint-manager/onboard/#deployment","text":"The configuration is complete, both technically and functional tested and approved. For onboarding the organization, the project plans and performs the rollout after which the environment is handed over to Run. The following deliverables must be handed over: Complete and up-to-date designs. Any customer specific instructions regarding the configuration. Technical Release document. Technical resources, such as scripts and application packages.","title":"Deployment"},{"location":"_archive/device-management/endpoint-privilege-management/","text":"Endpoint Privilege Access Management \u00b6 The Sogeti Smart Workspace 'Endpoint Privilege Access Management' service for Windows involves a centrally managed solution for privilege access management (PAM) on endpoint devices. After initial setup and configuration, users can be granted additional privileges on their device. These permissions are granted when they need to perform administrative tasks which otherwise requires elevation with a (local) administrator account. The type and duration of the privilege is configured using scope and profiles (who, what and how). Examples of use cases are standard users, who need the ability to install applications or technical workers, who need additional privileges to perform their tasks. As a result of this service, there is no longer a need for business users to have the local administrator account on their device while workspace service managers have control and insight in administrative activities on managed endpoints.","title":"Endpoint Privilege Access Management"},{"location":"_archive/device-management/endpoint-privilege-management/#endpoint_privilege_access_management","text":"The Sogeti Smart Workspace 'Endpoint Privilege Access Management' service for Windows involves a centrally managed solution for privilege access management (PAM) on endpoint devices. After initial setup and configuration, users can be granted additional privileges on their device. These permissions are granted when they need to perform administrative tasks which otherwise requires elevation with a (local) administrator account. The type and duration of the privilege is configured using scope and profiles (who, what and how). Examples of use cases are standard users, who need the ability to install applications or technical workers, who need additional privileges to perform their tasks. As a result of this service, there is no longer a need for business users to have the local administrator account on their device while workspace service managers have control and insight in administrative activities on managed endpoints.","title":"Endpoint Privilege Access Management"},{"location":"_archive/device-management/endpoint-privilege-management/onboard/","text":"Endpoint Privilege Access Management onboarding \u00b6","title":"Endpoint Privilege Access Management onboarding"},{"location":"_archive/device-management/endpoint-privilege-management/onboard/#endpoint_privilege_access_management_onboarding","text":"","title":"Endpoint Privilege Access Management onboarding"},{"location":"_archive/device-management/user-experience-monitoring/","text":"Introduction User Experience Monitoring \u00b6 Off course we want to give our customers and their users the best experience we can offer. To make sure user experience is at (or above) expected level and to monitor experience over time, we use the module User Experience Monitoring . A collector is installed on Windows devices, which inventories device- and installed application-properties and also collects errors, warnings and measures performance at user, device, application and network (connectivity) level. Collected data provides us with insight in the measured experience and shows us where we need to improve, where (structural) issues are and where we need to take action. For some issues, remediation tasks can be initiated from the central management console to repair issues on end-user devices. Additionally, periodic surveys ('Campaigns') can provide us and the customer with feedback from end-users. Architecture \u00b6 The following figure shows the architecture for Nexthink in a cloud setup.","title":"Introduction User Experience Monitoring"},{"location":"_archive/device-management/user-experience-monitoring/#introduction_user_experience_monitoring","text":"Off course we want to give our customers and their users the best experience we can offer. To make sure user experience is at (or above) expected level and to monitor experience over time, we use the module User Experience Monitoring . A collector is installed on Windows devices, which inventories device- and installed application-properties and also collects errors, warnings and measures performance at user, device, application and network (connectivity) level. Collected data provides us with insight in the measured experience and shows us where we need to improve, where (structural) issues are and where we need to take action. For some issues, remediation tasks can be initiated from the central management console to repair issues on end-user devices. Additionally, periodic surveys ('Campaigns') can provide us and the customer with feedback from end-users.","title":"Introduction User Experience Monitoring"},{"location":"_archive/device-management/user-experience-monitoring/#architecture","text":"The following figure shows the architecture for Nexthink in a cloud setup.","title":"Architecture"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/","text":"Manage End User Experience in Run \u00b6 Introduction \u00b6 Nexthink is the SSW solution to monitor User Experience in Smart Workspace environments. This Standard Operation Procedure (SOP) describes recurring activities to maintain the service after going live. Standard OPS Activities \u00b6 The following (standard) activities must be carried out by the OPS team. Activities are mentioned per customer. Daily Activities \u00b6 L1: Check dashboards (15 minutes) On a daily basis, check the Nexthink dashboards to get the status of the workspace environment: Digital Experience Check the dashboard on all categories (Overall, Device, Productivity- and Business Applications. Look at the drift/trend in the widget \u2018Experience overtime\u2019. If experience drops significantly, take action to investigate cause and raise incident(s) to solve the issues. Level 2, Proactive improvement Check the overview dashboard to notice any deviations that require action. The \u2018Trend\u2019 widget can help here. Office 365 Health Services Check the overview dashboard if all Office 365 services report \u2018Green\u2019 and the number of devices with issues is acceptable (<5 % of total). Click on each of the services to get detailed information. L1: Alerts (1 minute) Check if any alerts are mentioned in the web portal or Finder. (Note: integration with Service Now needs to be established). L4: Engines (5 minutes) Check if all engines are up and running Weekly Activities \u00b6 L3: Check dashboards (30 minutes) On a weekly basis, check the Nexthink dashboards to get the status of the workspace environment: Experience Optimization Dashboard Check experience on all categories (Overall, Device, Productivity- and Business Applications. Look at the drift/trend in the widget \u2018Experience overtime\u2019. If experience drops significantly, take action to investigate cause and raise incident(s) to solve the issues. Level 2, Proactive improvement Check the overview dashboard to notice any deviations that require action. The \u2018Trend\u2019 widget can help here. Go through the dashboard for each category to be sure no issues exist which require attention. Office 365 Health Services Check the overview dashboard if all Office 365 services report \u2018Green\u2019 and the number of devices with issues is acceptable (<5 % of total). Click on each of the services to get detailed information, to be sure no issues exist which require attention. SSW \u2013 Version and Compliance Check if all SSW-managed apps are up to date. If not: -> Update version categorization in Finder (when a new version of the app is released) -> Investigate issues when deviation is >5% Check if devices are rebooted within acceptable time frames. If not (> 5% 7 days or longer active without reboot) report to service manager. Check if devices are updated within acceptable time frames. If not (> 5% 7 days or longer active without update) investigate why updates are not being processed. L4: Nexthink Service health (15 minutes) On a weekly basis, check the Nexthink portal to get the status of the environment: Computations Check if the daily scheduled computations do not report errors or warnings. Investigate issues when errors or warnings are mentioned. License check Check if enough licenses are available to support current and future enrollment of devices. Get information from service manager on planned roll outs. Take the following actions: -> Clean up licenses for multiple instances of the same device (can happen when the device is re-enrolled) by removing inactive devices. -> Inform service manager if the number of consumed licenses reaches the total (after clean-up). Collector deployment In Intune, check no issues exist for deployment of the collector to managed Windows devices. Monthly Activities \u00b6 L4: Check dashboards (60 minutes) On a monthly basis, check the Nexthink dashboards to get the status of the workspace environment: Experience Optimization Dashboard Check experience on all categories (Overall, Device, Productivity- and Business Applications. Look at the drift/trend in the widget \u2018Experience overtime\u2019. If experience drops significantly, take action to investigate cause and raise incident(s) to solve the issues. Level 2, Proactive improvement Check the overview dashboard to notice any deviations that require action. The \u2018Trend\u2019 widget can help here. Go through the dashboard for each category to be sure no issues exist which require attention. Initiate actions for improvement when applicable. Office 365 Health Services Check the overview dashboard if all Office 365 services report \u2018Green\u2019 and the number of devices with issues is acceptable (<5 % of total). Click on each of the services to get detailed information. SSW \u2013 Version and Compliance Check if all SSW-managed apps are up to date. If not: -> Update version categorization in Finder (when a new version of the app is released) -> Investigate issues when deviation is >5% Check if devices are rebooted within acceptable time frames. If not (> 5% 7 days or longer active without reboot) report to service manager. Check if devices are updated within acceptable time frames. If not (> 5% 7 days or longer active without update) investigate why updates are not being processed. Other (unplanned) activities \u00b6 L4: Lifecycle management As Nexthink is a SaaS solution, the vendor will periodically update the back end and agent. When an update has taken place, do the following checks: Check if engines are up and running. Check if computations do not show errors or warnings. Check if hierarchy and rule-based collector assignment are working properly. If rules are not applied correctly, this will sometimes self-correct when the active ruleset is deactivated and re-activated once. Make sure to wait for approx. 5 minutes after deactivating the ruleset before reactivating it. Check if Services, Metrics, Categories and Scores do not show errors. Correct errors and/or initiate a support call with Nexthink support. Check if all dashboards show correctly in the web portal.","title":"Manage End User Experience in Run"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/#manage_end_user_experience_in_run","text":"","title":"Manage End User Experience in Run"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/#introduction","text":"Nexthink is the SSW solution to monitor User Experience in Smart Workspace environments. This Standard Operation Procedure (SOP) describes recurring activities to maintain the service after going live.","title":"Introduction"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/#standard_ops_activities","text":"The following (standard) activities must be carried out by the OPS team. Activities are mentioned per customer.","title":"Standard OPS Activities"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/#daily_activities","text":"L1: Check dashboards (15 minutes) On a daily basis, check the Nexthink dashboards to get the status of the workspace environment: Digital Experience Check the dashboard on all categories (Overall, Device, Productivity- and Business Applications. Look at the drift/trend in the widget \u2018Experience overtime\u2019. If experience drops significantly, take action to investigate cause and raise incident(s) to solve the issues. Level 2, Proactive improvement Check the overview dashboard to notice any deviations that require action. The \u2018Trend\u2019 widget can help here. Office 365 Health Services Check the overview dashboard if all Office 365 services report \u2018Green\u2019 and the number of devices with issues is acceptable (<5 % of total). Click on each of the services to get detailed information. L1: Alerts (1 minute) Check if any alerts are mentioned in the web portal or Finder. (Note: integration with Service Now needs to be established). L4: Engines (5 minutes) Check if all engines are up and running","title":"Daily Activities"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/#weekly_activities","text":"L3: Check dashboards (30 minutes) On a weekly basis, check the Nexthink dashboards to get the status of the workspace environment: Experience Optimization Dashboard Check experience on all categories (Overall, Device, Productivity- and Business Applications. Look at the drift/trend in the widget \u2018Experience overtime\u2019. If experience drops significantly, take action to investigate cause and raise incident(s) to solve the issues. Level 2, Proactive improvement Check the overview dashboard to notice any deviations that require action. The \u2018Trend\u2019 widget can help here. Go through the dashboard for each category to be sure no issues exist which require attention. Office 365 Health Services Check the overview dashboard if all Office 365 services report \u2018Green\u2019 and the number of devices with issues is acceptable (<5 % of total). Click on each of the services to get detailed information, to be sure no issues exist which require attention. SSW \u2013 Version and Compliance Check if all SSW-managed apps are up to date. If not: -> Update version categorization in Finder (when a new version of the app is released) -> Investigate issues when deviation is >5% Check if devices are rebooted within acceptable time frames. If not (> 5% 7 days or longer active without reboot) report to service manager. Check if devices are updated within acceptable time frames. If not (> 5% 7 days or longer active without update) investigate why updates are not being processed. L4: Nexthink Service health (15 minutes) On a weekly basis, check the Nexthink portal to get the status of the environment: Computations Check if the daily scheduled computations do not report errors or warnings. Investigate issues when errors or warnings are mentioned. License check Check if enough licenses are available to support current and future enrollment of devices. Get information from service manager on planned roll outs. Take the following actions: -> Clean up licenses for multiple instances of the same device (can happen when the device is re-enrolled) by removing inactive devices. -> Inform service manager if the number of consumed licenses reaches the total (after clean-up). Collector deployment In Intune, check no issues exist for deployment of the collector to managed Windows devices.","title":"Weekly Activities"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/#monthly_activities","text":"L4: Check dashboards (60 minutes) On a monthly basis, check the Nexthink dashboards to get the status of the workspace environment: Experience Optimization Dashboard Check experience on all categories (Overall, Device, Productivity- and Business Applications. Look at the drift/trend in the widget \u2018Experience overtime\u2019. If experience drops significantly, take action to investigate cause and raise incident(s) to solve the issues. Level 2, Proactive improvement Check the overview dashboard to notice any deviations that require action. The \u2018Trend\u2019 widget can help here. Go through the dashboard for each category to be sure no issues exist which require attention. Initiate actions for improvement when applicable. Office 365 Health Services Check the overview dashboard if all Office 365 services report \u2018Green\u2019 and the number of devices with issues is acceptable (<5 % of total). Click on each of the services to get detailed information. SSW \u2013 Version and Compliance Check if all SSW-managed apps are up to date. If not: -> Update version categorization in Finder (when a new version of the app is released) -> Investigate issues when deviation is >5% Check if devices are rebooted within acceptable time frames. If not (> 5% 7 days or longer active without reboot) report to service manager. Check if devices are updated within acceptable time frames. If not (> 5% 7 days or longer active without update) investigate why updates are not being processed.","title":"Monthly Activities"},{"location":"_archive/device-management/user-experience-monitoring/ntrun/#other_unplanned_activities","text":"L4: Lifecycle management As Nexthink is a SaaS solution, the vendor will periodically update the back end and agent. When an update has taken place, do the following checks: Check if engines are up and running. Check if computations do not show errors or warnings. Check if hierarchy and rule-based collector assignment are working properly. If rules are not applied correctly, this will sometimes self-correct when the active ruleset is deactivated and re-activated once. Make sure to wait for approx. 5 minutes after deactivating the ruleset before reactivating it. Check if Services, Metrics, Categories and Scores do not show errors. Correct errors and/or initiate a support call with Nexthink support. Check if all dashboards show correctly in the web portal.","title":"Other (unplanned) activities"},{"location":"_archive/device-management/user-experience-monitoring/onboard/","text":"Onboard End User Experience Monitoring \u00b6 Onboarding a customer in Nexthink End User Experience Monitoring requires a number of steps, beginning with the request for a customer tenant. The tenant is created by Nexthink upon request, initiated by the engagement / delivery manager. Once the tenant is made ready for us, onboarding can start, following the standard onboarding process steps. Note that we can use a shared tenant for small customers. This is described at the end of this chapter. Intake \u00b6 During intake, the use of Nexthink as a solution for End-user Experience Monitoring is explained to the customer. The following important information is gathered during intake: The use of anonymization in the product, to remove privacy related information such as user names and domain names. The default is not to use anonymization in the collector. A list of business critical or important applications that will be included in the Business Application Experience scores (up to 8 desktop apps and 10 web apps can be included). Global insight in the business organization, such as different countries and locations, to gain insight in location based experience later on. When applicable, this also includes an IP-plan on which location of the device can be determined. Build \u00b6 Since Nexthink is a SaaS application, we speak of configuration rather than build, but to keep inline with other onboarding activities this step is named build. During this step, the initial configuration for Nexthink is done, following the procedures described in this paragraph. Initialization \u00b6 The build starts when the following items are arranged or available: A new tenant is created, and (initial) licenses are assigned. The \u2018welcome email\u2019 is sent with information regarding the tenant: Customer specific URL / host name. Admin password. Customer key file for use in the collector. First time activities \u00b6 The following steps are the first to take when above information is received: Store the customer key file in TeamPass. Login to the Nexthink portal with the admin account For safety, create a second account to circumvent lockout. Change the admin password and store the new password in TeamPass. If not already installed, install the Finder application from the portal on your device where you do your administration tasks. Collector Package creation and deployment \u00b6 Configuration of Nexthink is easier if some data is already collected and present. Therefore, creating a deployment package for the Nexthink Collector is done before continuing. The package is deployed with an Intune win32 app, that is created using the following procedure: Download the sources to create a package for the collector (the URL is specified in the welcome email). Create a collector package with the following parameters, this will output a silent installer executable and a silent executable for un-install: Engine Address (DRV_IP): <customer>-engine.eu.nexthink.cloud Engine Port (DRV_PORT): 999 Coordinator Port (CRD_PORT): 443 DNS options: Prefer IPv6 (DRV_PREFERIPV6): FALSE Collector Tag (DRV_TAG): Collector String Tag (DRV_STRING_TAG): Install Control Panel extension (CPL_INSTALL): FALSE Install Browser Extension (INSTALL_BROWSER_EXTENSION): FALSE Install Configuration Tool (CFG_INSTALL): TRUE Hide from Add/Remove Programs (ARPSYSTEMCOMPONENT): FALSE Script execution policy: signed_trusted_or_nexthink Enable Web and Cloud Data (DRV_WEB_AND_CLOUD_DATA): TRUE Report print jobs and printers (PRINTING): FALSE Use the assignment service (USE_ASSIGNMENT): TRUE Data over TCP (DATA_OVER_TCP): TRUE Engage (ENGAGE): enable_except_on_server_os Error Logs directory: Create a distribution package for Intune, using the PowerShell App Deployment Toolkit and wrap it as an intunewin file. For installation, use an Intune win 32 App package with the following settings: Install command: Deploy-Application.exe Uninstall command: Deploy-Application.exe -DeploymentType 'Uninstall' Install behavior: System Detection rule: File C:\\Program Files\\Nexthink\\Collector\\Collector\\nxtsvc.exe exists Target to device group as a required app Note: Make sure the default Deployment Type is set to Install and Deploy Mode is set to Silent in the \u2018PSAppDeployToolkit\u2019 script. Deploy the package to a test device and check the following: The package reports successful installation in Intune. The collector reports to the Nexthink engine and the device shows up in the Finder application Installation of Library packs \u00b6 Library packs can be installed from the Nexthink online library , search the library in Finder or import from a local file in Finder. Import Nexthink online library packs \u00b6 Open the Finder app and login with an administrator account for the tenant you are about to configure. Install the following Nexthink library packs using the Nexthink Online library: Digital Employee Score (DEX Score). Follow the procedure described here . Also take a look at this document: Dex Score Configuration . Remote Worker Experience. Follow the procedure as described here . After installation, install the update for V2 . Replace all items that already exist (a message is shown where you can choose skip or replace). The metrics Web Browsing Score and Security Score metrics for Remote and Office Workers should be removed, as described in the web page. Level 1 Checklist. Follow the instructions as described here . Level 2: Proactive improvement. Follow the instructions as described here . Office 365 Health. Follow the procedure as described here . Import the Sogeti Smart Workspace Library Pack \u00b6 Download the Sogeti Smart Workspace Library pack here . In Finder, click on the cogwheel in the top of the Finder window and select Import Library Pack from file. Browse to the downloaded xml file for the SSW Library pack and import the file. Upon import, leave any metrics or categories already present unchanged (choose Skip). Publish dashboards \u00b6 Upon import of the library packs, several dashboards are created in the portal. By default, these will be created in the Personal Dashboards area and are not visible for other users and admins. Go to each dashboard and publish the module. Optionally, you can leave the dashboard in the personal dashboards for later use if you want to make modifications. When you do, you need to re-publish modified dashboards, overwriting versions published earlier. Library pack configuration \u00b6 In order to measure the proper resources, the library packs need configuration in the Finder app to match the organization specific setup. Update the DEX \u2013 Digital Experience Score Categories \u00b6 In Finder, go to Categories, Nexthink Library, DEX \u2013 Digital Experience Score: Click on DEX - Domain in the categories. In DEX \u2013 Domain, update any references to the Office 365 Tenant in File Sharing Program and Document Management Solution. Replace YOURTENANT by the customer\u2019s tenant. In DEX \u2013 Domain, specify relevant domains in each of the Web Apps (0-9) Press Save and then Cancel. In the list of domains, you should see references to the programs for the customer\u2019s Office 365 domains. Click on DEX - Binary in the categories. In the binaries, applications of interest can be monitored. A list of Office 365 apps already is configured. Go through them to see if this matches the customer\u2019s environment. Configure relevant applications in Document Management solution and DesktopApp 0-7. Click on DEX - Web Browsers in the categories. Check this section for all web browsers available. Click on DEX - Agents in the categories. Check this section for agent configuration. Update Remote Worker Experience \u00b6 Update Remote Worker vs Office Worker Device. This section determines if the user is seen as using a remote or an office-based device. This determination is done using the (local) IP address. The default is set as below and might need to be changed to reflect the customer: Office workers \u00b6 Remote workers are defined whenever the device internal IP address is not in one of the ranges above. Firewall / AV / Other Packages \u00b6 Fill in the used Firewall / AV product Firewall / AV / Other Executables \u00b6 Fill in the used Firewall / AV product VPN Executables \u00b6 Fill in the executable for the VPN product. Update Level 2: Proactive improvement \u00b6 Corporate AV and Corporate FW \u00b6 Fill in the proper applications/names for the used AV and FW products. Update Office 365 : Health \u00b6 O365 Web Apps \u00b6 Make sure the current tenant info us filled in, replace YOURTENANT by the customer\u2019s tenant. Update O365 ProPlus \u00b6 ProPlus Version and ProPlus Required Version \u00b6 Fill in the various ProPlus Versions and Required Version for the Office 365 package. You can also import this xml file, containing an up-to-date the history of Office 365 packages. Goto the folder ProPlus Versions and Compliance in Nexthink: Right-click on the folder, select Categories from files and select the xml file you just downloaded. Check and update the ProPlus Versions and Required Version to match your environment. Update Sogeti Smart Workspace library \u00b6 The Sogeti Smart Workspace libary pack contains monitoring on versions of the default applications that come with the solution: 7-Zip Google Chrome Office 365 ProPlus Adobe Acrobat Reader DC For each of the applications, the current version must be configured in the categories: Right-click on the Required Version category for each application and select Edit . Update the version for Current to match your environment and click Save . Add a new customer to the shared environment \u00b6 For small customers, we use a shared environment as specific environments is only applicable for customers > 1300 users. This environment already is up and running and configured so all we need to do is to introduce the new customer. It is important that the collected data and dashboards for the different customers are separated from each other: Create per customer dashboards to report per customer experience and establish per customer analysis. Make sure customers only have access to their own data. This is achieved by using a customer specific collector tag, that is specified in the collector package (see paragraph 1.3 Collector Package creation and deployment). Currently, we have the following customers in this environment: Customer Collector Tag Kyocera 1 MVGM 2 VLG 3 OMWB 4 Hierarchy \u00b6 Using the tag, we can separate data from the different customers. In Nexthink this is achieved using the hierarchy. The hierarchy in Nexthink is an organizational diagram for all collector clients in the tenant, build up with the structure: Global (all collector agents) Company (MVGM, Kyocera, VLG, OMWB) Country (optional country if the organization operates in more than one country) Entity (the location within the country) Each collector client belongs (is attached to) a single entity. Similar to the following figure: For instance, the customer VLG, we only have the Netherlands as country: And for the location, we only specify one office and home (meaning \u2018outside the office\u2019). If we have more countries, we can add these to the hierarchy as we like. This is the case for Kyocera and MVGM. The hierarchy is configured in Nexthink using a csv file that is uploaded in the engine. The csv file has the following format: First line in the csv: specifies the structure of the hierarchy used in the csv. The value is as follows, where \u2018SSW\u2019 specifies the name of the hierarcy: \"SSW\";\"source.ro:Entity\";\"false\";\"false\" Second line specifies the attributes used, the value for this line is: \"Company\";\"Country\";\"Entity\" The other lines (from line 3 onwards) specify the entities in the hierarchy. For each entity the company, country and entity are specified. For example: \"Kyocera\";\"Austria\";\"Kyocera - Austria - Wolkersdorf\" \"Kyocera\";\"Belgium\";\"Kyocera - Belgium - Sint-Pieters-Leeuw\" Collector rules \u00b6 When the hierarchy is defined, rules need to be specified that assign the proper entity to the different collector instances. The assignment rules use the collector tag, (optional) collector string tag and client IP address. When the collector connects to the Nexthink engine, the rules are evaluated, and an entity is assigned to the collector. By default, the following rules are applicable for all customers: Collector Tag, to specify the customer organization Client IP address, to specify the entity. By default, we use the entities \u2018Office\u2019 and \u2018Home\u2019, to separate collectors for devices used within the corporate network and devices outside the company network. When different entities (locations) within the organization exist using a unique range of IP addresses, the range is used to specify the entity. As an alternative for using the client IP address for entity assignment, the collector string tag can be used. The collector string tag needs to be defined in the collector, either by specifying this during installation or after installation, using the Nexthink configurator tool (installed with the package). Note that unique packages need to be created when the collector string tag is to be set during installation. Similar to the hierarchy, rules are specified in a csv file which is uploaded to the Nexthink portal. Different rulesets can be configured of which only one can be active. The csv file is build up with the following lines: The first line contains the header, by default has the following value: \"Entity_rule\";\"Engine\";\"Entity\";\"Field1\";\"Pattern1\";\"Field2\";\"Pattern2\" The following lines contain the rules, one line for each rule. The order of rules (top to bottom) specify which rule is applied in cases where multiple rules may apply to a collector. The minimum content in the rules file is: \"Entity_rule\";\"Engine\";\"Entity\";\"Field1\";\"Pattern1\";\"Field2\";\"Pattern2\" \"No\";\"engine-1\";\"Customer - Home\";\"collector_tag\";\"x\";\"local_ip\";\"192.168.0.0/16\" \"No\";\"engine-1\";\"Customer - Office\";\"collector_tag\";\"x\";\"name\";\"*\" \"No\";\"engine-1\";\"Undefined Customer\";\"collector_tag\";\"0\";\"\";\"\" \"No\";\"engine-1\";\"Undefined Entity\";\"name\";\"*\";\"\";\"\" ( x is the customer specific collector tag and we only use a single Nexthink engine, \u201cengine-1\u201d). In this case, the rules are evaluated as follows: Collectors with collector tag x will be evaluated to Customer - Home or Customer \u2013 Office If the client ip address is in the range 192.168.0.0/16, Customer \u2013 Home is assigned, if not, Customer \u2013 Office is assigned. Collectors with collector tag \u20180\u2019 always will be assigned with Undefined Customer Collectors with a collector tag not specified in one of the rules will have Undefined Entity as assigned entity. When a new ruleset is uploaded to the engine, the ruleset can be validated using the simulation function. When simulation has the desired results, the new ruleset can be set to active. The existing, active ruleset will be de-activated automatically.","title":"Onboard End User Experience Monitoring"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#onboard_end_user_experience_monitoring","text":"Onboarding a customer in Nexthink End User Experience Monitoring requires a number of steps, beginning with the request for a customer tenant. The tenant is created by Nexthink upon request, initiated by the engagement / delivery manager. Once the tenant is made ready for us, onboarding can start, following the standard onboarding process steps. Note that we can use a shared tenant for small customers. This is described at the end of this chapter.","title":"Onboard End User Experience Monitoring"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#intake","text":"During intake, the use of Nexthink as a solution for End-user Experience Monitoring is explained to the customer. The following important information is gathered during intake: The use of anonymization in the product, to remove privacy related information such as user names and domain names. The default is not to use anonymization in the collector. A list of business critical or important applications that will be included in the Business Application Experience scores (up to 8 desktop apps and 10 web apps can be included). Global insight in the business organization, such as different countries and locations, to gain insight in location based experience later on. When applicable, this also includes an IP-plan on which location of the device can be determined.","title":"Intake"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#build","text":"Since Nexthink is a SaaS application, we speak of configuration rather than build, but to keep inline with other onboarding activities this step is named build. During this step, the initial configuration for Nexthink is done, following the procedures described in this paragraph.","title":"Build"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#initialization","text":"The build starts when the following items are arranged or available: A new tenant is created, and (initial) licenses are assigned. The \u2018welcome email\u2019 is sent with information regarding the tenant: Customer specific URL / host name. Admin password. Customer key file for use in the collector.","title":"Initialization"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#first_time_activities","text":"The following steps are the first to take when above information is received: Store the customer key file in TeamPass. Login to the Nexthink portal with the admin account For safety, create a second account to circumvent lockout. Change the admin password and store the new password in TeamPass. If not already installed, install the Finder application from the portal on your device where you do your administration tasks.","title":"First time activities"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#collector_package_creation_and_deployment","text":"Configuration of Nexthink is easier if some data is already collected and present. Therefore, creating a deployment package for the Nexthink Collector is done before continuing. The package is deployed with an Intune win32 app, that is created using the following procedure: Download the sources to create a package for the collector (the URL is specified in the welcome email). Create a collector package with the following parameters, this will output a silent installer executable and a silent executable for un-install: Engine Address (DRV_IP): <customer>-engine.eu.nexthink.cloud Engine Port (DRV_PORT): 999 Coordinator Port (CRD_PORT): 443 DNS options: Prefer IPv6 (DRV_PREFERIPV6): FALSE Collector Tag (DRV_TAG): Collector String Tag (DRV_STRING_TAG): Install Control Panel extension (CPL_INSTALL): FALSE Install Browser Extension (INSTALL_BROWSER_EXTENSION): FALSE Install Configuration Tool (CFG_INSTALL): TRUE Hide from Add/Remove Programs (ARPSYSTEMCOMPONENT): FALSE Script execution policy: signed_trusted_or_nexthink Enable Web and Cloud Data (DRV_WEB_AND_CLOUD_DATA): TRUE Report print jobs and printers (PRINTING): FALSE Use the assignment service (USE_ASSIGNMENT): TRUE Data over TCP (DATA_OVER_TCP): TRUE Engage (ENGAGE): enable_except_on_server_os Error Logs directory: Create a distribution package for Intune, using the PowerShell App Deployment Toolkit and wrap it as an intunewin file. For installation, use an Intune win 32 App package with the following settings: Install command: Deploy-Application.exe Uninstall command: Deploy-Application.exe -DeploymentType 'Uninstall' Install behavior: System Detection rule: File C:\\Program Files\\Nexthink\\Collector\\Collector\\nxtsvc.exe exists Target to device group as a required app Note: Make sure the default Deployment Type is set to Install and Deploy Mode is set to Silent in the \u2018PSAppDeployToolkit\u2019 script. Deploy the package to a test device and check the following: The package reports successful installation in Intune. The collector reports to the Nexthink engine and the device shows up in the Finder application","title":"Collector Package creation and deployment"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#installation_of_library_packs","text":"Library packs can be installed from the Nexthink online library , search the library in Finder or import from a local file in Finder.","title":"Installation of Library packs"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#import_nexthink_online_library_packs","text":"Open the Finder app and login with an administrator account for the tenant you are about to configure. Install the following Nexthink library packs using the Nexthink Online library: Digital Employee Score (DEX Score). Follow the procedure described here . Also take a look at this document: Dex Score Configuration . Remote Worker Experience. Follow the procedure as described here . After installation, install the update for V2 . Replace all items that already exist (a message is shown where you can choose skip or replace). The metrics Web Browsing Score and Security Score metrics for Remote and Office Workers should be removed, as described in the web page. Level 1 Checklist. Follow the instructions as described here . Level 2: Proactive improvement. Follow the instructions as described here . Office 365 Health. Follow the procedure as described here .","title":"Import Nexthink online library packs"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#import_the_sogeti_smart_workspace_library_pack","text":"Download the Sogeti Smart Workspace Library pack here . In Finder, click on the cogwheel in the top of the Finder window and select Import Library Pack from file. Browse to the downloaded xml file for the SSW Library pack and import the file. Upon import, leave any metrics or categories already present unchanged (choose Skip).","title":"Import the Sogeti Smart Workspace Library Pack"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#publish_dashboards","text":"Upon import of the library packs, several dashboards are created in the portal. By default, these will be created in the Personal Dashboards area and are not visible for other users and admins. Go to each dashboard and publish the module. Optionally, you can leave the dashboard in the personal dashboards for later use if you want to make modifications. When you do, you need to re-publish modified dashboards, overwriting versions published earlier.","title":"Publish dashboards"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#library_pack_configuration","text":"In order to measure the proper resources, the library packs need configuration in the Finder app to match the organization specific setup.","title":"Library pack configuration"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#update_the_dex_digital_experience_score_categories","text":"In Finder, go to Categories, Nexthink Library, DEX \u2013 Digital Experience Score: Click on DEX - Domain in the categories. In DEX \u2013 Domain, update any references to the Office 365 Tenant in File Sharing Program and Document Management Solution. Replace YOURTENANT by the customer\u2019s tenant. In DEX \u2013 Domain, specify relevant domains in each of the Web Apps (0-9) Press Save and then Cancel. In the list of domains, you should see references to the programs for the customer\u2019s Office 365 domains. Click on DEX - Binary in the categories. In the binaries, applications of interest can be monitored. A list of Office 365 apps already is configured. Go through them to see if this matches the customer\u2019s environment. Configure relevant applications in Document Management solution and DesktopApp 0-7. Click on DEX - Web Browsers in the categories. Check this section for all web browsers available. Click on DEX - Agents in the categories. Check this section for agent configuration.","title":"Update the DEX \u2013 Digital Experience Score Categories"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#update_remote_worker_experience","text":"Update Remote Worker vs Office Worker Device. This section determines if the user is seen as using a remote or an office-based device. This determination is done using the (local) IP address. The default is set as below and might need to be changed to reflect the customer:","title":"Update Remote Worker Experience"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#office_workers","text":"Remote workers are defined whenever the device internal IP address is not in one of the ranges above.","title":"Office workers"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#firewall_av_other_packages","text":"Fill in the used Firewall / AV product","title":"Firewall / AV / Other Packages"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#firewall_av_other_executables","text":"Fill in the used Firewall / AV product","title":"Firewall / AV / Other Executables"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#vpn_executables","text":"Fill in the executable for the VPN product.","title":"VPN Executables"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#update_level_2_proactive_improvement","text":"","title":"Update Level 2: Proactive improvement"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#corporate_av_and_corporate_fw","text":"Fill in the proper applications/names for the used AV and FW products.","title":"Corporate AV and Corporate FW"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#update_office_365_health","text":"","title":"Update Office 365 : Health"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#o365_web_apps","text":"Make sure the current tenant info us filled in, replace YOURTENANT by the customer\u2019s tenant.","title":"O365 Web Apps"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#update_o365_proplus","text":"","title":"Update O365 ProPlus"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#proplus_version_and_proplus_required_version","text":"Fill in the various ProPlus Versions and Required Version for the Office 365 package. You can also import this xml file, containing an up-to-date the history of Office 365 packages. Goto the folder ProPlus Versions and Compliance in Nexthink: Right-click on the folder, select Categories from files and select the xml file you just downloaded. Check and update the ProPlus Versions and Required Version to match your environment.","title":"ProPlus Version and ProPlus Required Version"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#update_sogeti_smart_workspace_library","text":"The Sogeti Smart Workspace libary pack contains monitoring on versions of the default applications that come with the solution: 7-Zip Google Chrome Office 365 ProPlus Adobe Acrobat Reader DC For each of the applications, the current version must be configured in the categories: Right-click on the Required Version category for each application and select Edit . Update the version for Current to match your environment and click Save .","title":"Update Sogeti Smart Workspace library"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#add_a_new_customer_to_the_shared_environment","text":"For small customers, we use a shared environment as specific environments is only applicable for customers > 1300 users. This environment already is up and running and configured so all we need to do is to introduce the new customer. It is important that the collected data and dashboards for the different customers are separated from each other: Create per customer dashboards to report per customer experience and establish per customer analysis. Make sure customers only have access to their own data. This is achieved by using a customer specific collector tag, that is specified in the collector package (see paragraph 1.3 Collector Package creation and deployment). Currently, we have the following customers in this environment: Customer Collector Tag Kyocera 1 MVGM 2 VLG 3 OMWB 4","title":"Add a new customer to the shared environment"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#hierarchy","text":"Using the tag, we can separate data from the different customers. In Nexthink this is achieved using the hierarchy. The hierarchy in Nexthink is an organizational diagram for all collector clients in the tenant, build up with the structure: Global (all collector agents) Company (MVGM, Kyocera, VLG, OMWB) Country (optional country if the organization operates in more than one country) Entity (the location within the country) Each collector client belongs (is attached to) a single entity. Similar to the following figure: For instance, the customer VLG, we only have the Netherlands as country: And for the location, we only specify one office and home (meaning \u2018outside the office\u2019). If we have more countries, we can add these to the hierarchy as we like. This is the case for Kyocera and MVGM. The hierarchy is configured in Nexthink using a csv file that is uploaded in the engine. The csv file has the following format: First line in the csv: specifies the structure of the hierarchy used in the csv. The value is as follows, where \u2018SSW\u2019 specifies the name of the hierarcy: \"SSW\";\"source.ro:Entity\";\"false\";\"false\" Second line specifies the attributes used, the value for this line is: \"Company\";\"Country\";\"Entity\" The other lines (from line 3 onwards) specify the entities in the hierarchy. For each entity the company, country and entity are specified. For example: \"Kyocera\";\"Austria\";\"Kyocera - Austria - Wolkersdorf\" \"Kyocera\";\"Belgium\";\"Kyocera - Belgium - Sint-Pieters-Leeuw\"","title":"Hierarchy"},{"location":"_archive/device-management/user-experience-monitoring/onboard/#collector_rules","text":"When the hierarchy is defined, rules need to be specified that assign the proper entity to the different collector instances. The assignment rules use the collector tag, (optional) collector string tag and client IP address. When the collector connects to the Nexthink engine, the rules are evaluated, and an entity is assigned to the collector. By default, the following rules are applicable for all customers: Collector Tag, to specify the customer organization Client IP address, to specify the entity. By default, we use the entities \u2018Office\u2019 and \u2018Home\u2019, to separate collectors for devices used within the corporate network and devices outside the company network. When different entities (locations) within the organization exist using a unique range of IP addresses, the range is used to specify the entity. As an alternative for using the client IP address for entity assignment, the collector string tag can be used. The collector string tag needs to be defined in the collector, either by specifying this during installation or after installation, using the Nexthink configurator tool (installed with the package). Note that unique packages need to be created when the collector string tag is to be set during installation. Similar to the hierarchy, rules are specified in a csv file which is uploaded to the Nexthink portal. Different rulesets can be configured of which only one can be active. The csv file is build up with the following lines: The first line contains the header, by default has the following value: \"Entity_rule\";\"Engine\";\"Entity\";\"Field1\";\"Pattern1\";\"Field2\";\"Pattern2\" The following lines contain the rules, one line for each rule. The order of rules (top to bottom) specify which rule is applied in cases where multiple rules may apply to a collector. The minimum content in the rules file is: \"Entity_rule\";\"Engine\";\"Entity\";\"Field1\";\"Pattern1\";\"Field2\";\"Pattern2\" \"No\";\"engine-1\";\"Customer - Home\";\"collector_tag\";\"x\";\"local_ip\";\"192.168.0.0/16\" \"No\";\"engine-1\";\"Customer - Office\";\"collector_tag\";\"x\";\"name\";\"*\" \"No\";\"engine-1\";\"Undefined Customer\";\"collector_tag\";\"0\";\"\";\"\" \"No\";\"engine-1\";\"Undefined Entity\";\"name\";\"*\";\"\";\"\" ( x is the customer specific collector tag and we only use a single Nexthink engine, \u201cengine-1\u201d). In this case, the rules are evaluated as follows: Collectors with collector tag x will be evaluated to Customer - Home or Customer \u2013 Office If the client ip address is in the range 192.168.0.0/16, Customer \u2013 Home is assigned, if not, Customer \u2013 Office is assigned. Collectors with collector tag \u20180\u2019 always will be assigned with Undefined Customer Collectors with a collector tag not specified in one of the rules will have Undefined Entity as assigned entity. When a new ruleset is uploaded to the engine, the ruleset can be validated using the simulation function. When simulation has the desired results, the new ruleset can be set to active. The existing, active ruleset will be de-activated automatically.","title":"Collector rules"},{"location":"_archive/remote-workspace/","text":"Remote Workspace \u00b6","title":"Remote Workspace"},{"location":"_archive/remote-workspace/#remote_workspace","text":"","title":"Remote Workspace"},{"location":"_archive/ssw-generic/ssw-downloads/","text":"Downloads \u00b6 For your convenience, this page is a collection of all the documents used in the Sogeti Smart Workspace during onboarding and run. Please go to the corresponding article in the Cookbook for additional instructions and information. Design Guides \u00b6 Design Guide Language Download Personas in SSW English Device Management English Endpoint Privilege Access Management English Application Portal English Packaging process reference English Packaging process reference Dutch Design Templates \u00b6 Design Template Language Download Detailed design Windows 10 English Detailed design Mobile Devices English SSW Default Configurations \u00b6 Configuration subject Download Microsoft Endpoint Manager Windows Microsoft Endpoint Manager macOS Technical Release Documents \u00b6 Release document Language Download Microsoft Endpoint Manager English Packaging documents and forms \u00b6 Here you can find the latest templates for documents used in the packaging process. Intake Documents Language Download Intake document English Intake document Dutch Intake document for web apps English Package Release Documents Package release document MSI Dutch Package release document MSIX Dutch","title":"Downloads"},{"location":"_archive/ssw-generic/ssw-downloads/#downloads","text":"For your convenience, this page is a collection of all the documents used in the Sogeti Smart Workspace during onboarding and run. Please go to the corresponding article in the Cookbook for additional instructions and information.","title":"Downloads"},{"location":"_archive/ssw-generic/ssw-downloads/#design_guides","text":"Design Guide Language Download Personas in SSW English Device Management English Endpoint Privilege Access Management English Application Portal English Packaging process reference English Packaging process reference Dutch","title":"Design Guides"},{"location":"_archive/ssw-generic/ssw-downloads/#design_templates","text":"Design Template Language Download Detailed design Windows 10 English Detailed design Mobile Devices English","title":"Design Templates"},{"location":"_archive/ssw-generic/ssw-downloads/#ssw_default_configurations","text":"Configuration subject Download Microsoft Endpoint Manager Windows Microsoft Endpoint Manager macOS","title":"SSW Default Configurations"},{"location":"_archive/ssw-generic/ssw-downloads/#technical_release_documents","text":"Release document Language Download Microsoft Endpoint Manager English","title":"Technical Release Documents"},{"location":"_archive/ssw-generic/ssw-downloads/#packaging_documents_and_forms","text":"Here you can find the latest templates for documents used in the packaging process. Intake Documents Language Download Intake document English Intake document Dutch Intake document for web apps English Package Release Documents Package release document MSI Dutch Package release document MSIX Dutch","title":"Packaging documents and forms"},{"location":"_archive/ssw-generic/architecture/","text":"Architecture \u00b6","title":"Architecture"},{"location":"_archive/ssw-generic/architecture/#architecture","text":"","title":"Architecture"},{"location":"_archive/ssw-generic/training-education/","text":"Training & Education \u00b6 This section provides an overview of resources where you can find information and trainings to educate yourself in the different Sogeti Smart Workspace modules and technologies. Microsoft Technology \u00b6 The following Microsoft training paths and exams are related to the technologies used within Sogeti Smart Workspace and can be found on 'Pluralsight'. These courses are accessible through 'Next', the internal online learning environment for Sogeti (Capgemini). You can launch Next here , or direct to PluralSight (in Degreed, go to 'Featured' in the top menu and scroll down. You can select to launch Pluralsight from there) and search for the following courses: Microsoft 365 Fundamentals (MS-900) Microsoft Modern Desktop Administrator: Windows 10 (MD-100) Microsoft Modern Desktop Administrator: Managing Microsoft Desktops (MD-101) Implementing Mobile Device Management (MDM) with Microsoft Intune Configuring and Operating Microsoft Azure Virtual Desktop (AZ-140) Deploying Microsoft 365 Collaboration Solutions Microsoft 365 Identity and Services (MS-100) Microsoft 365 Messaging (MS-203) Managing Microsoft Teams (MS-700) Microsoft 365 Mobility and Security (MS-101) Microsoft 365 Security Administration (MS-500) Nexthink Experience monitoring \u00b6 Using your Sogeti work email, you can register at the Nexthink partner center, which also provides a learning module. Click the figure below to go to Nexthink Learn. Liquit Workspace (Application Portal) \u00b6 The Liquit product information provides lot of information on how to get started with Liquit Workspace and the PowerShell Module. Specific scenario's, idea's and best practices can be found in the Liquit Blogs . For a training you can go to the Liquit website and book a 5 hour 'Liquit Technical Hands-On Virtual Training' session. Use your sogeti.com mail address to register. Endpoint Privilege Access Management (AdminByRequest) \u00b6 AdminByRequest is the product we use in Sogeti Smart Workspace to deliver Endpoint Privilege Access Management. The vendor's website contains extensive information, including video's, about the product. You can also watch the Introduction Video . Packaging Technology \u00b6 Throughout the internet, there are lots of resources available to educate yourself in the technology of packaging. Some of them are mentioned below: MSIX Fundamentals eBook Introduction to MSIX eBook MSI Packaging Training Book","title":"Training & Education"},{"location":"_archive/ssw-generic/training-education/#training_education","text":"This section provides an overview of resources where you can find information and trainings to educate yourself in the different Sogeti Smart Workspace modules and technologies.","title":"Training &amp; Education"},{"location":"_archive/ssw-generic/training-education/#microsoft_technology","text":"The following Microsoft training paths and exams are related to the technologies used within Sogeti Smart Workspace and can be found on 'Pluralsight'. These courses are accessible through 'Next', the internal online learning environment for Sogeti (Capgemini). You can launch Next here , or direct to PluralSight (in Degreed, go to 'Featured' in the top menu and scroll down. You can select to launch Pluralsight from there) and search for the following courses: Microsoft 365 Fundamentals (MS-900) Microsoft Modern Desktop Administrator: Windows 10 (MD-100) Microsoft Modern Desktop Administrator: Managing Microsoft Desktops (MD-101) Implementing Mobile Device Management (MDM) with Microsoft Intune Configuring and Operating Microsoft Azure Virtual Desktop (AZ-140) Deploying Microsoft 365 Collaboration Solutions Microsoft 365 Identity and Services (MS-100) Microsoft 365 Messaging (MS-203) Managing Microsoft Teams (MS-700) Microsoft 365 Mobility and Security (MS-101) Microsoft 365 Security Administration (MS-500)","title":"Microsoft Technology"},{"location":"_archive/ssw-generic/training-education/#nexthink_experience_monitoring","text":"Using your Sogeti work email, you can register at the Nexthink partner center, which also provides a learning module. Click the figure below to go to Nexthink Learn.","title":"Nexthink Experience monitoring"},{"location":"_archive/ssw-generic/training-education/#liquit_workspace_application_portal","text":"The Liquit product information provides lot of information on how to get started with Liquit Workspace and the PowerShell Module. Specific scenario's, idea's and best practices can be found in the Liquit Blogs . For a training you can go to the Liquit website and book a 5 hour 'Liquit Technical Hands-On Virtual Training' session. Use your sogeti.com mail address to register.","title":"Liquit Workspace (Application Portal)"},{"location":"_archive/ssw-generic/training-education/#endpoint_privilege_access_management_adminbyrequest","text":"AdminByRequest is the product we use in Sogeti Smart Workspace to deliver Endpoint Privilege Access Management. The vendor's website contains extensive information, including video's, about the product. You can also watch the Introduction Video .","title":"Endpoint Privilege Access Management (AdminByRequest)"},{"location":"_archive/ssw-generic/training-education/#packaging_technology","text":"Throughout the internet, there are lots of resources available to educate yourself in the technology of packaging. Some of them are mentioned below: MSIX Fundamentals eBook Introduction to MSIX eBook MSI Packaging Training Book","title":"Packaging Technology"},{"location":"certification/","text":"Workspace Certification \u00b6","title":"Workspace certification"},{"location":"certification/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"certification/ms-900/","text":"Cloud Fundamentals - MS-900 \u00b6","title":"Certification resources"},{"location":"certification/ms-900/#cloud_fundamentals_-_ms-900","text":"","title":"Cloud Fundamentals - MS-900"},{"location":"certification/ms-900/chapter1/","text":"MS-900 Chapter [*] \u00b6","title":"[text something #2]"},{"location":"certification/ms-900/chapter1/#ms-900_chapter","text":"","title":"MS-900 Chapter [*]"},{"location":"certification/sc-900/","text":"Security Fundamentals - SC-900 \u00b6","title":"Certification resources"},{"location":"certification/sc-900/#security_fundamentals_-_sc-900","text":"","title":"Security Fundamentals - SC-900"},{"location":"certification/sc-900/chapter1/","text":"SC-900 Chapter [*] \u00b6","title":"[text something #2]"},{"location":"certification/sc-900/chapter1/#sc-900_chapter","text":"","title":"SC-900 Chapter [*]"},{"location":"home/introduction/","text":"The Workspace learning track \u00b6 Goal of the Workspace learning track \u00b6 This page describes the initial setup of the Professional Workspace learning track. The intention is to provide a clear setup of education tracks that can be used by professionals to increase their knowledge and start working in a Workspace Environment or do projects at the customer or direct via Sogeti for the customer through the Sogeti Smart Workspace (SSW) service line. The goal is to get certified, master modern tech skills, and level up your career with cloud training \u2014 whether you\u2019re starting out or a seasoned pro. Within this trajectory you can obtain the following courses for certificates which are important to work as a skilled Workspace Associate, within just 6 months: Microsoft 365 Certified: Fundamentals Microsoft 365 Certified: Modern Desktop Administrator Associate Microsoft Certified: Azure Virtual Desktop Specialty Microsoft Certified: Security, Compliance, and Identity Fundamentals When being part of the SSW service line it is expected that you obtain specific knowledge about product used in the SSW proposition, which are: Hello ID Provisioning training Hello ID Service Automation training Liquit training Nexthink self-learning By the end of the track, you will have finished three blocks, two months each, studying and getting a clear understanding of the basics and fundamentals of the Workspace arena, also you probably be able to tell which direction within the Workspace area you want to accelerate in. In addition to the three mandatory certifications, you will become familiar with other aspects of Workspace, gain a minimum of two new technical skills and two new service skills that you can add to your resume, portfolio, and overall career. After achieving the Workspace Associate status, you can start to grow into the role as Workspace engineer, for which you will receive an additional 18 months of guidance through your coach and Career Manager. The additional 18 months will be called Block 4. One mandatory certificate you must obtain in Block 4 will be: Microsoft 365 Certified: Enterprise Administrator Expert Other (optional) Certificates you can obtain are based on the individual chosen skill sets, assignment, and career path, such as: Microsoft 365 Certified: Teams Administrator Associate . Text. Microsoft 365 Certified: Messaging Administrator Associate . Microsoft 365 Certified: Security Administrator Associate . etc. So why follow the Workspace learning Track? \u00b6 It is well known that eventually everything will slowly but surely move to the Cloud, as an engineer or IT enthusiast you simply cannot stay behind. While this migration from traditional IT systems is moving to the Cloud there are several Cloud Service Providers that offer the latest and most modern IT technologies. One company that is leading the cloud market arena is Microsoft (Azure, Microsoft 365, and Intune). Most of our customers are using cloud products of Microsoft like Microsoft 365. Therefore, the Workspace Fast Track will be a great addition to your skill belt. By following this Workspace Fast Track, you can be a part of this learning and growing specialization, where job opportunities will line in front of you for years to come. At Sogeti we know about this Cloud Development, so we want to provide our customers with people who are packed with skills and abreast of the latest developments in IT and Cloud. This Workspace Track offers just that! The 5 professional promises: Besides all the personal benefits you gain as stated above, this track will offer you the following: Detailed Study Guide and Study Material Personal Coach to help you get certified Microsoft and HelloID certifications, and Liquit training Class Network - a network of all professionals starting the track, you'll have frequent interactions to grow your network A Workspace Job - a team of planners will actively work to provide you with a Workspace related job within 6 months","title":"Introduction"},{"location":"home/introduction/#the_workspace_learning_track","text":"","title":"The Workspace learning track"},{"location":"home/introduction/#goal_of_the_workspace_learning_track","text":"This page describes the initial setup of the Professional Workspace learning track. The intention is to provide a clear setup of education tracks that can be used by professionals to increase their knowledge and start working in a Workspace Environment or do projects at the customer or direct via Sogeti for the customer through the Sogeti Smart Workspace (SSW) service line. The goal is to get certified, master modern tech skills, and level up your career with cloud training \u2014 whether you\u2019re starting out or a seasoned pro. Within this trajectory you can obtain the following courses for certificates which are important to work as a skilled Workspace Associate, within just 6 months: Microsoft 365 Certified: Fundamentals Microsoft 365 Certified: Modern Desktop Administrator Associate Microsoft Certified: Azure Virtual Desktop Specialty Microsoft Certified: Security, Compliance, and Identity Fundamentals When being part of the SSW service line it is expected that you obtain specific knowledge about product used in the SSW proposition, which are: Hello ID Provisioning training Hello ID Service Automation training Liquit training Nexthink self-learning By the end of the track, you will have finished three blocks, two months each, studying and getting a clear understanding of the basics and fundamentals of the Workspace arena, also you probably be able to tell which direction within the Workspace area you want to accelerate in. In addition to the three mandatory certifications, you will become familiar with other aspects of Workspace, gain a minimum of two new technical skills and two new service skills that you can add to your resume, portfolio, and overall career. After achieving the Workspace Associate status, you can start to grow into the role as Workspace engineer, for which you will receive an additional 18 months of guidance through your coach and Career Manager. The additional 18 months will be called Block 4. One mandatory certificate you must obtain in Block 4 will be: Microsoft 365 Certified: Enterprise Administrator Expert Other (optional) Certificates you can obtain are based on the individual chosen skill sets, assignment, and career path, such as: Microsoft 365 Certified: Teams Administrator Associate . Text. Microsoft 365 Certified: Messaging Administrator Associate . Microsoft 365 Certified: Security Administrator Associate . etc.","title":"Goal of the Workspace learning track"},{"location":"home/introduction/#so_why_follow_the_workspace_learning_track","text":"It is well known that eventually everything will slowly but surely move to the Cloud, as an engineer or IT enthusiast you simply cannot stay behind. While this migration from traditional IT systems is moving to the Cloud there are several Cloud Service Providers that offer the latest and most modern IT technologies. One company that is leading the cloud market arena is Microsoft (Azure, Microsoft 365, and Intune). Most of our customers are using cloud products of Microsoft like Microsoft 365. Therefore, the Workspace Fast Track will be a great addition to your skill belt. By following this Workspace Fast Track, you can be a part of this learning and growing specialization, where job opportunities will line in front of you for years to come. At Sogeti we know about this Cloud Development, so we want to provide our customers with people who are packed with skills and abreast of the latest developments in IT and Cloud. This Workspace Track offers just that! The 5 professional promises: Besides all the personal benefits you gain as stated above, this track will offer you the following: Detailed Study Guide and Study Material Personal Coach to help you get certified Microsoft and HelloID certifications, and Liquit training Class Network - a network of all professionals starting the track, you'll have frequent interactions to grow your network A Workspace Job - a team of planners will actively work to provide you with a Workspace related job within 6 months","title":"So why follow the Workspace learning Track?"},{"location":"home/overview/","text":"Introduction Workspace learning track \u00b6 The Workspace learning track consists of a multitude of specializations. The primary reason for this is the amount of existing knowledge within professionals. We can utilize this knowledge and guide them towards their Workspace end-goal in a more precise manner. Additionally, the track is composed of several blocks. After individuals have chosen to participate, they can follow this manual to start at their own pace. After they have received their \u201cbasic knowledge\u201d (building block 1), they will continue the track with building block 2 and 3 in combination with on-the-job experiences. Each building block takes you to a higher level. The first building block contains information about the basics of the Workspace principals. Where you obtain the first 2 certificates and expect to obtain broad knowledge of Workspace and IT. Each building block is divided into a time frame of 2 months. After the initial 2 months you are expected to work on a Workspace related job. Or at least we do our best to get you into a Workspace-related job, where you can put your Workspace knowledge into practice and get hands-on with Workspace material. You continue to the second block of the fast track. Here you will gain more in-depth knowledge about products part of the Workspace proposition and other IT aspects relevant to Cloud technologies. Moving to block 3 you will learn about different IT Services methodologies. These are crucial as they are part of your daily activities as an engineer and future development. Workspace learning track overview \u00b6 The total number of months is devised into the three building blocks, which comes to 6 months, which marks the total length of the Workspace learning track. Besides the certifications included in this track, one can do extra, or specialty certifications. In general, it is advised to first obtain one or more Associate level certificates before diving into a specialty certification. The specialty certifications need a certain basic understanding of Workspace and Associate Level certifications provide just that basic understanding. Best-practice is to start the professional level certificates after 2-3 years\u2019 experience with the Workspace area. To fit these certifications into the Fast Track for Professionals a 4th building block has been created, where you as a professional, together with your career manager, decide where you want to go from here on. Figure 1 schematically depicts how the learning track is divided in a chronological order. Based on this model the track has been further structured. Starting at the kick-off point and ending the track after 6 months. As seen on figure 1 the first part of the track is divided into 3 different building blocks (marked in blue). Block I: Workspace Foundation Block II: Technical Foundation Block III: IT Services The first 3 blocks each have a time frame of 2 months. So, it\u2019s the idea that one carries out the study material/activities in the green and blue marked blocks in the span of 2 months. All together the total number of months comes to 6, which marks the total length of the Workspace learning Track. Figure 1 Further this document each block contains its own chapter with a detailed explanation and planning for what needs to be done for that specific track activity. Figure 1 is further elaborated in the form of tables in the \u201cglobal planning\u201d Chapter. One table equals one building block. So, block I = table 1 . Figure 2 shows the additional skills and training you must follow to be able to be part of the SSW service line and fully understand the Sogeti Smart Workspace proposition. Figure 2 Workspace learning track follow-up \u00b6 Figure 3 shows the final block, Block IV: Acceleration plan, when a student finalizes the first three blocks of the track within 6 months it shows already big potential. After those six months a student already has a Workspace related assignment at the customer or within the SSW service line and will gain a lot of experiences by doing work which expands the knowledge and able to convert theory to practice. Block IV will give the last guidance a student can help to successfully finish the Workspace learning track and being a Workspace engineer with a broad knowledge of all products which are important in the Workspace area. Figure 3","title":"Overview Track"},{"location":"home/overview/#introduction_workspace_learning_track","text":"The Workspace learning track consists of a multitude of specializations. The primary reason for this is the amount of existing knowledge within professionals. We can utilize this knowledge and guide them towards their Workspace end-goal in a more precise manner. Additionally, the track is composed of several blocks. After individuals have chosen to participate, they can follow this manual to start at their own pace. After they have received their \u201cbasic knowledge\u201d (building block 1), they will continue the track with building block 2 and 3 in combination with on-the-job experiences. Each building block takes you to a higher level. The first building block contains information about the basics of the Workspace principals. Where you obtain the first 2 certificates and expect to obtain broad knowledge of Workspace and IT. Each building block is divided into a time frame of 2 months. After the initial 2 months you are expected to work on a Workspace related job. Or at least we do our best to get you into a Workspace-related job, where you can put your Workspace knowledge into practice and get hands-on with Workspace material. You continue to the second block of the fast track. Here you will gain more in-depth knowledge about products part of the Workspace proposition and other IT aspects relevant to Cloud technologies. Moving to block 3 you will learn about different IT Services methodologies. These are crucial as they are part of your daily activities as an engineer and future development.","title":"Introduction Workspace learning track"},{"location":"home/overview/#workspace_learning_track_overview","text":"The total number of months is devised into the three building blocks, which comes to 6 months, which marks the total length of the Workspace learning track. Besides the certifications included in this track, one can do extra, or specialty certifications. In general, it is advised to first obtain one or more Associate level certificates before diving into a specialty certification. The specialty certifications need a certain basic understanding of Workspace and Associate Level certifications provide just that basic understanding. Best-practice is to start the professional level certificates after 2-3 years\u2019 experience with the Workspace area. To fit these certifications into the Fast Track for Professionals a 4th building block has been created, where you as a professional, together with your career manager, decide where you want to go from here on. Figure 1 schematically depicts how the learning track is divided in a chronological order. Based on this model the track has been further structured. Starting at the kick-off point and ending the track after 6 months. As seen on figure 1 the first part of the track is divided into 3 different building blocks (marked in blue). Block I: Workspace Foundation Block II: Technical Foundation Block III: IT Services The first 3 blocks each have a time frame of 2 months. So, it\u2019s the idea that one carries out the study material/activities in the green and blue marked blocks in the span of 2 months. All together the total number of months comes to 6, which marks the total length of the Workspace learning Track. Figure 1 Further this document each block contains its own chapter with a detailed explanation and planning for what needs to be done for that specific track activity. Figure 1 is further elaborated in the form of tables in the \u201cglobal planning\u201d Chapter. One table equals one building block. So, block I = table 1 . Figure 2 shows the additional skills and training you must follow to be able to be part of the SSW service line and fully understand the Sogeti Smart Workspace proposition. Figure 2","title":"Workspace learning track overview"},{"location":"home/overview/#workspace_learning_track_follow-up","text":"Figure 3 shows the final block, Block IV: Acceleration plan, when a student finalizes the first three blocks of the track within 6 months it shows already big potential. After those six months a student already has a Workspace related assignment at the customer or within the SSW service line and will gain a lot of experiences by doing work which expands the knowledge and able to convert theory to practice. Block IV will give the last guidance a student can help to successfully finish the Workspace learning track and being a Workspace engineer with a broad knowledge of all products which are important in the Workspace area. Figure 3","title":"Workspace learning track follow-up"},{"location":"home/timeline/","text":"Timeline \u00b6 The Track is devised into a total of 4 building blocks, each block contains the correct study material over a period of 2 months divided into chapters and subchapters. |The table explain exactly what you are going to do and learn, where (i.e. which platform do you use), the material used to achieve the desired results, the learning paths/courses within PluralSight that must be followed with reference link for quick access. And finally, the results are written per sub-chapter (i.e. what result is expected from following a specific section within the block).| The green outlined area in the tables represents the areas within the track that result in a certification as shown in figure 1. Each sub-chapter contains the section where to follow courses and study material that will prepare you for your Workspace related certification. Following the given PluralSight learning path and courses will prepare you for exactly the right section. Building Block I: Workspace Foundation \u00b6 This block contains the first 2 months of content. Starting from chapter 2.1 you will first get a kick-off; this will be held in the first week. During the kick-off you will get a high-level overview of the Workspace and the track by a Workspace veteran. During this week you will be assigned a personal coach to guide you through the Workspace Fast Track, in addition you will also be getting a Visual Studio subscription to start and create your Office 365 lab environment. After that you will follow 2 months of training and learning while obtaining the First 2 Workspace related certificates according to schedule. Block I \u2013 Workspace Foundation (months 1 & 2) What/Title Material Ref Results Kick-off WorkSpace Professional Track course manual, P-structure, Workspace Guilds, MS Teams channel Getting an Office 365 Developer Tenant. Having a clear overview Microsoft 365 Certified: Fundamentals MS-900 Courses Microsoft 365 Fundamentals (MS-900) Path Microsoft 365 Certified: Fundamentals Readings + Guidance Workspace \u2013 Course Manual.pdf Practise exam + Real exam Practise Exams provided by CyberVista Learning Management System Microsoft Certified: Security, Compliance, and Identity Fundamentals SC-900 Courses Microsoft Security, Compliance, and Identity Fundamentals (SC-900) Path Microsoft Certified: Security, Compliance, and Identity Fundamentals Readings + Guidance Workspace \u2013 Course Manual.pdf Practise exam + Real exam n/a Building Block II: Technical Foundation \u00b6 In block II an extra column has been added, this column shows the technical modules as part of the technical expertise period. Within this period (2 months) you choose at least two modules in which you want to improve or learn a new skill. You do this in consultation with your coach. It is recommended that the chosen skill sets fit your needs and own motivation to learn them, to grow in your career. When completing one/or more of these courses you have \u201cmastered\u201d a new skill set, which you can add to your CV, Portfolio, and overall career. Optionally, you can certify yourself for most of the technical modules, but this is not mandatory when following the track. As seen in Figure 1 and in Table 2, getting the \u2018Microsoft 365 Certified: Modern Desktop Administrator Associate\u2019 certificates span the timeframe of building Block II and Block III. The reason for this is that after the first 2 months you are expected to be working on an assignment. So, in addition to acquiring additional technical skills in Months 3 and 4, you will also be learning and earning either the Windows 10 (MD-100 or Managing Microsoft Desktops (MD-101). Given the time it's hard to get them both. You will have to make a choice in which of these certificates you want to do first (maybe in consultation with your coach). However, in addition to the chosen skills, at least one of these certificates is mandatory. So somewhere along the line of the last 4 months you have obtained your third Microsoft Certificate. In addition to the standard Workspace program and Microsoft certificates, if you ae part of the SSW service line you need to follow the administration HelloID training days for Provisioning and Service Automation. Both take up in total two days initially, however if you already have PowerShell knowledge you can consider (maybe in consultation with your coach) to follow the second training day as well. Block II \u2013 Technical Foundation (months 3 & 4) What/Title Material Ref Results ... ... ... ... Building Block III: IT Service Skills \u00b6 In the past 2 blocks (last 4 months) you have been busy technically deepening Microsoft and other IT technologies. In this building block you will learn and study about IT service skills. These form a large part of our daily life as IT professionals in our field. Whatever assignment we get, where we work and what we do, all of us experience and unconsciously use these skills. That's why we've filtered out the most important IT service skills you can have as an Workspace engineer. The idea is the same as in block II. You will have to choose which IT service skills you want to acquire and then study for that particular section. (again, in consultation with your coach). As explained above, you are probably also in the process of obtaining one of the two certificates you chose at the beginning of building block 2. Obtaining two of these IT service skills can result in certificates (optionally), moreover it will add great personal value. Block III \u2013 IT Services (months 5 & 6) What/Title Material Ref Results ... ... ... ... Additional \u00b6 Design template Download Detailed design Windows 10 Detailed design mobile devices Description \u00b6 This is a free format field, describing the package. The packagename and build version are used in the description: **Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture-vbuildversion** **Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture-vbuildversion** For the timestamp server, we use the value: 'http://timestamp.digicert.com' Windows Update must be enabled 1 Windows Search should be disabled Windows Defender should be disabled During packaging, the packaging tool will disable Windows Update after initiation. \u21a9","title":"Timeline"},{"location":"home/timeline/#timeline","text":"The Track is devised into a total of 4 building blocks, each block contains the correct study material over a period of 2 months divided into chapters and subchapters. |The table explain exactly what you are going to do and learn, where (i.e. which platform do you use), the material used to achieve the desired results, the learning paths/courses within PluralSight that must be followed with reference link for quick access. And finally, the results are written per sub-chapter (i.e. what result is expected from following a specific section within the block).| The green outlined area in the tables represents the areas within the track that result in a certification as shown in figure 1. Each sub-chapter contains the section where to follow courses and study material that will prepare you for your Workspace related certification. Following the given PluralSight learning path and courses will prepare you for exactly the right section.","title":"Timeline"},{"location":"home/timeline/#building_block_i_workspace_foundation","text":"This block contains the first 2 months of content. Starting from chapter 2.1 you will first get a kick-off; this will be held in the first week. During the kick-off you will get a high-level overview of the Workspace and the track by a Workspace veteran. During this week you will be assigned a personal coach to guide you through the Workspace Fast Track, in addition you will also be getting a Visual Studio subscription to start and create your Office 365 lab environment. After that you will follow 2 months of training and learning while obtaining the First 2 Workspace related certificates according to schedule. Block I \u2013 Workspace Foundation (months 1 & 2) What/Title Material Ref Results Kick-off WorkSpace Professional Track course manual, P-structure, Workspace Guilds, MS Teams channel Getting an Office 365 Developer Tenant. Having a clear overview Microsoft 365 Certified: Fundamentals MS-900 Courses Microsoft 365 Fundamentals (MS-900) Path Microsoft 365 Certified: Fundamentals Readings + Guidance Workspace \u2013 Course Manual.pdf Practise exam + Real exam Practise Exams provided by CyberVista Learning Management System Microsoft Certified: Security, Compliance, and Identity Fundamentals SC-900 Courses Microsoft Security, Compliance, and Identity Fundamentals (SC-900) Path Microsoft Certified: Security, Compliance, and Identity Fundamentals Readings + Guidance Workspace \u2013 Course Manual.pdf Practise exam + Real exam n/a","title":"Building Block I: Workspace Foundation"},{"location":"home/timeline/#building_block_ii_technical_foundation","text":"In block II an extra column has been added, this column shows the technical modules as part of the technical expertise period. Within this period (2 months) you choose at least two modules in which you want to improve or learn a new skill. You do this in consultation with your coach. It is recommended that the chosen skill sets fit your needs and own motivation to learn them, to grow in your career. When completing one/or more of these courses you have \u201cmastered\u201d a new skill set, which you can add to your CV, Portfolio, and overall career. Optionally, you can certify yourself for most of the technical modules, but this is not mandatory when following the track. As seen in Figure 1 and in Table 2, getting the \u2018Microsoft 365 Certified: Modern Desktop Administrator Associate\u2019 certificates span the timeframe of building Block II and Block III. The reason for this is that after the first 2 months you are expected to be working on an assignment. So, in addition to acquiring additional technical skills in Months 3 and 4, you will also be learning and earning either the Windows 10 (MD-100 or Managing Microsoft Desktops (MD-101). Given the time it's hard to get them both. You will have to make a choice in which of these certificates you want to do first (maybe in consultation with your coach). However, in addition to the chosen skills, at least one of these certificates is mandatory. So somewhere along the line of the last 4 months you have obtained your third Microsoft Certificate. In addition to the standard Workspace program and Microsoft certificates, if you ae part of the SSW service line you need to follow the administration HelloID training days for Provisioning and Service Automation. Both take up in total two days initially, however if you already have PowerShell knowledge you can consider (maybe in consultation with your coach) to follow the second training day as well. Block II \u2013 Technical Foundation (months 3 & 4) What/Title Material Ref Results ... ... ... ...","title":"Building Block II: Technical Foundation"},{"location":"home/timeline/#building_block_iii_it_service_skills","text":"In the past 2 blocks (last 4 months) you have been busy technically deepening Microsoft and other IT technologies. In this building block you will learn and study about IT service skills. These form a large part of our daily life as IT professionals in our field. Whatever assignment we get, where we work and what we do, all of us experience and unconsciously use these skills. That's why we've filtered out the most important IT service skills you can have as an Workspace engineer. The idea is the same as in block II. You will have to choose which IT service skills you want to acquire and then study for that particular section. (again, in consultation with your coach). As explained above, you are probably also in the process of obtaining one of the two certificates you chose at the beginning of building block 2. Obtaining two of these IT service skills can result in certificates (optionally), moreover it will add great personal value. Block III \u2013 IT Services (months 5 & 6) What/Title Material Ref Results ... ... ... ...","title":"Building Block III: IT Service Skills"},{"location":"home/timeline/#additional","text":"Design template Download Detailed design Windows 10 Detailed design mobile devices","title":"Additional"},{"location":"home/timeline/#description","text":"This is a free format field, describing the package. The packagename and build version are used in the description: **Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture-vbuildversion** **Manufacturer-ApplicationName-ApplicationVersion-Language-Architecture-vbuildversion** For the timestamp server, we use the value: 'http://timestamp.digicert.com' Windows Update must be enabled 1 Windows Search should be disabled Windows Defender should be disabled During packaging, the packaging tool will disable Windows Update after initiation. \u21a9","title":"Description"},{"location":"home/welcome/","text":"Sogeti Smart Workspace Cookbook \u00b6 Fenced code blocks are like Standard Markdown\u2019s regular code blocks, except that they\u2019re not indented and instead rely on start and end fence lines to delimit the code block. test def fn (): Get-Item","title":"Welcome"},{"location":"home/welcome/#sogeti_smart_workspace_cookbook","text":"Fenced code blocks are like Standard Markdown\u2019s regular code blocks, except that they\u2019re not indented and instead rely on start and end fence lines to delimit the code block. test def fn (): Get-Item","title":"Sogeti Smart Workspace Cookbook"},{"location":"lab/","text":"Workspace Certification \u00b6","title":"Introduction labs"},{"location":"lab/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"lab/md-100/","text":"Workspace Certification \u00b6","title":"Lab 2"},{"location":"lab/md-100/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"lab/md-101/","text":"Workspace Certification \u00b6","title":"Lab 2"},{"location":"lab/md-101/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"lab/ms-100/","text":"Workspace Certification \u00b6","title":"Lab 2"},{"location":"lab/ms-100/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"lab/ms-101/","text":"Workspace Certification \u00b6","title":"Lab 2"},{"location":"lab/ms-101/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"lab/prepare/","text":"Workspace Certification \u00b6","title":"Workspace Certification"},{"location":"lab/prepare/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"lab/sc-900/","text":"Workspace Certification \u00b6","title":"Lab 2"},{"location":"lab/sc-900/#workspace_certification","text":"","title":"Workspace Certification"},{"location":"technologies/","text":"Office 365 \u00b6","title":"Office 365"},{"location":"technologies/#office_365","text":"","title":"Office 365"},{"location":"technologies/ca/","text":"Office 365 \u00b6","title":"Conditional Access"},{"location":"technologies/ca/#office_365","text":"","title":"Office 365"},{"location":"technologies/defender/","text":"Office 365 \u00b6","title":"Defender for 365"},{"location":"technologies/defender/#office_365","text":"","title":"Office 365"},{"location":"technologies/exo/","text":"Office 365 \u00b6","title":"Exchange Online"},{"location":"technologies/exo/#office_365","text":"","title":"Office 365"},{"location":"technologies/onedrive/","text":"Office 365 \u00b6","title":"OneDrive for Business"},{"location":"technologies/onedrive/#office_365","text":"","title":"Office 365"},{"location":"technologies/powershell/","text":"Office 365 \u00b6","title":"PowerShell"},{"location":"technologies/powershell/#office_365","text":"","title":"Office 365"},{"location":"technologies/sp/","text":"Office 365 \u00b6","title":"SharePoint Online"},{"location":"technologies/sp/#office_365","text":"","title":"Office 365"},{"location":"technologies/teams/","text":"Office 365 \u00b6","title":"Microsoft Teams"},{"location":"technologies/teams/#office_365","text":"","title":"Office 365"}]}